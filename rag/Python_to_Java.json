[
    {
        "filename": "codeforces_340_A",
        "Python": "def G ( a , b ) :\n    while a % b != 0 :\n        a , b = b , a % b\n    return b\ndef L ( a , b ) :\n    return a * b // G ( a , b )\nl = input ( ).split ( ' ' )\nx , y , a , b = int ( l [ 0 ] ) , int ( l [ 1 ] ) , int ( l [ 2 ] ) , int ( l [ 3 ] )\nlcm = L ( x , y )\nprint ( b // lcm - ( a - 1 ) // lcm )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_340_A { public static void main ( String [ ] sh ) { Scanner s = new Scanner ( System.in ) ; long x = s.nextInt ( ) ; long y = s.nextInt ( ) ; long a = s.nextInt ( ) ; long b = s.nextInt ( ) ; long j = 2 , i , x1 = 0 , y1 = 0 , c = 0 ; boolean ans = true ; c = Math.max ( x , y ) ; if ( c > b ) { System.out.println ( \"0\" ) ; ans = false ; } while ( c % Math.min ( x , y ) != 0 && ans ) { if ( x > y ) { c = x * j ; j ++ ; } else { c = y * j ; j ++ ; } if ( c > b ) { System.out.println ( \"0\" ) ; ans = false ; break ; } } if ( ans ) { long count = 0 ; i = a ; for ( i = a ; i <= b ; i ++ ) { if ( i % c == 0 ) break ; } if ( i != b + 1 ) System.out.println ( ( ( b - i ) / c ) + 1 ) ; else System.out.println ( \"0\" ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC152_C",
        "Python": "import numpy as np\nN = int ( input ( ) )\nn = [ int ( x ) for x in input ( ).split ( ) ]\nn = np.array ( n )\na = 1\npos = 0\nfor i in range ( 1 , N ) :\n    if n [ pos ] > n [ i ] :\n        a += 1\n        pos = i\nprint ( a )\n\n",
        "Java": "import java.util.PriorityQueue ; import java.util.Queue ; import java.util.Scanner ; public class atcoder_ABC152_C { public static void main ( String [ ] args ) { System.out.println ( solve ( ) ) ; } public static int solve ( ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int sum = 0 ; Queue < Integer > q = new PriorityQueue < > ( ) ; for ( int i = 0 ; i < arr.length ; i ++ ) { q.add ( arr [ i ] ) ; if ( arr [ i ] <= q.peek ( ) ) { sum ++ ; } } return sum ; } }\n"
    },
    {
        "filename": "atcoder_ABC148_F",
        "Python": "from collections import Counter , defaultdict , deque\nfrom heapq import heappop , heappush , heapify\nimport sys , bisect , math , itertools , pprint , fractions\nsys.setrecursionlimit ( 10 ** 8 )\nmod = 10 ** 9 + 7\nINF = float ( 'inf' )\ndef inp ( ) : return int ( sys.stdin.readline ( ) )\ndef inpl ( ) : return list ( map ( int , sys.stdin.readline ( ).split ( ) ) )\nn , ta , ao = inpl ( )\nta -= 1 ; ao -= 1\ng = [ [ ] for i in range ( n ) ]\nfor i in range ( n - 1 ) :\n    a , b = inpl ( )\n    g [ a - 1 ].append ( b - 1 )\n    g [ b - 1 ].append ( a - 1 )\nta_dist = [ None ] * n\nta_dist [ ta ] = 0\nao_dist = [ None ] * n\nao_dist [ ao ] = 0\ndef ta_dfs ( node ) :\n    for v in g [ node ] :\n        if ta_dist [ v ] != None : continue\n        ta_dist [ v ] = ta_dist [ node ] + 1\n        ta_dfs ( v )\ndef ao_dfs ( node ) :\n    for v in g [ node ] :\n        if ao_dist [ v ] != None : continue\n        ao_dist [ v ] = ao_dist [ node ] + 1\n        ao_dfs ( v )\nao_dfs ( ao )\nta_dfs ( ta )\nres = 0\nfor i in range ( n ) :\n    if ta_dist [ i ] > ao_dist [ i ] : continue\n    res = max ( res , ao_dist [ i ] )\nprint ( res - 1 )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class atcoder_ABC148_F { public static void main ( String [ ] args ) throws Exception { try ( Scanner sc = new Scanner ( System.in ) ) { int N = sc.nextInt ( ) ; int u = sc.nextInt ( ) - 1 ; int v = sc.nextInt ( ) - 1 ; List < Integer > [ ] edges = new List [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { edges [ i ] = new ArrayList < > ( ) ; } for ( int i = 0 ; i < N - 1 ; i ++ ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; edges [ a ].add ( b ) ; edges [ b ].add ( a ) ; } int [ ] d = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { d [ i ] = Integer.MAX_VALUE ; } d [ u ] = 0 ; dfs ( u , d , edges ) ; int [ ] e = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { e [ i ] = Integer.MAX_VALUE ; } e [ v ] = 0 ; dfs ( v , e , edges ) ; int q = - 1 ; for ( int i = 0 ; i < N ; i ++ ) { if ( d [ i ] < e [ i ] ) { if ( e [ i ] > q ) { q = e [ i ] ; } } } if ( q <= 0 ) { System.out.println ( 0 ) ; } else { System.out.println ( q - 1 ) ; } } } static void dfs ( int u , int [ ] d , List < Integer > [ ] edges ) { for ( Integer nu : edges [ u ] ) { if ( d [ nu ] == Integer.MAX_VALUE ) { d [ nu ] = d [ u ] + 1 ; dfs ( nu , d , edges ) ; } } } }\n"
    },
    {
        "filename": "codeforces_445_A",
        "Python": "n , m = map ( int , input ( ).split ( ) )\nl = [ ]\nfor i in range ( n ) :\n    s = input ( )\n    s = list ( s )\n    for j in range ( m ) :\n        if s [ j ] == '.' :\n            if ( i + j ) & 1 : s [ j ] = 'W'\n            else : s [ j ] = 'B'\n    l.append ( s )\nfor c in l : print ( \"\".join ( c ) )\n\n",
        "Java": "import java.io.* ; public class codeforces_445_A { public static void main ( String [ ] args ) throws IOException { BufferedReader buf = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String [ ] inp = buf.readLine ( ).split ( \"\" ) ; int n = Integer.parseInt ( inp [ 0 ] ) ; int m = Integer.parseInt ( inp [ 1 ] ) ; String [ ] ans = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { String str = buf.readLine ( ) ; StringBuilder temp = new StringBuilder ( \"\" ) ; for ( int j = 0 ; j < m ; j ++ ) if ( str.charAt ( j ) == '-' ) temp.append ( \"-\" ) ; else { if ( ( i + j ) % 2 == 1 ) temp.append ( \"W\" ) ; else temp.append ( \"B\" ) ; } ans [ i ] = temp.toString ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { System.out.println ( ans [ i ] ) ; } } }\n"
    },
    {
        "filename": "codeforces_622_A",
        "Python": "from cmd import IDENTCHARS\nn = int ( input ( ) )\nl = 1\nr = n\nwhile ( l < r ) :\n    mid = l + ( r - l ) // 2\n    idxcnt = mid * ( mid + 1 ) / 2\n    if ( idxcnt < n ) :\n        l = mid + 1\n    else :\n        r = mid\nl -= 1\nidxcnt = l * ( l + 1 ) / 2\nprint ( int ( n - idxcnt ) )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_622_A { public static final int BUFFERSIZE = 512000 ; private static Scanner sc = new Scanner ( new BufferedReader ( new InputStreamReader ( System.in ) , BUFFERSIZE ) ) ; private static PrintWriter out = new PrintWriter ( new BufferedOutputStream ( System.out , BUFFERSIZE ) ) ; public static void solve ( ) { long position = sc.nextLong ( ) ; long nrstSeqStartIndx = 1 ; while ( getValueAtIndex ( nrstSeqStartIndx * 2 ) < position ) { nrstSeqStartIndx *= 2 ; } while ( getValueAtIndex ( nrstSeqStartIndx + 1 ) <= position ) nrstSeqStartIndx ++ ; long startIndex = getValueAtIndex ( nrstSeqStartIndx ) ; out.println ( ( position - startIndex ) + 1 ) ; } public static long getValueAtIndex ( long index ) { return 1 + ( ( index - 1 ) * index / 2 ) ; } public static void main ( String args [ ] ) throws Exception { in.init ( System.in ) ; solve ( ) ; out.close ( ) ; } public static class in { static BufferedReader reader ; static StringTokenizer tokenizer ; static void init ( InputStream input ) { reader = new BufferedReader ( new InputStreamReader ( input ) , BUFFERSIZE ) ; tokenizer = new StringTokenizer ( \"\" ) ; } static String next ( ) throws IOException { while ( ! tokenizer.hasMoreTokens ( ) ) tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; return tokenizer.nextToken ( ) ; } static int nextInt ( ) throws IOException { return Integer.parseInt ( next ( ) ) ; } static double nextDouble ( ) throws IOException { return Double.parseDouble ( next ( ) ) ; } static long nextLong ( ) throws IOException { return Long.parseLong ( next ( ) ) ; } } }\n"
    },
    {
        "filename": "codeforces_37_A",
        "Python": "n = int ( input ( ) )\nl = list ( map ( int , input ( ).split ( ) ) )\nhigh = 1\ntower = n\nmaximum = 1\nl.sort ( )\nfor i in range ( 1 , n ) :\n    if l [ i ] == l [ i - 1 ] :\n        tower -= 1\n        high += 1\n    else :\n        if high > maximum :\n            maximum = high\n        high = 1\nif high > maximum :\n    maximum = high\nprint ( maximum , tower )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.* ; public class codeforces_37_A { public static void main ( String [ ] args ) { FastScanner input = new FastScanner ( ) ; int n = input.nextInt ( ) ; HashMap < Integer , Integer > map = new HashMap < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int val = input.nextInt ( ) ; map.put ( val , map.getOrDefault ( val , 0 ) + 1 ) ; } int max = Integer.MIN_VALUE ; for ( Map.Entry < Integer , Integer > entry : map.entrySet ( ) ) { Integer value = entry.getValue ( ) ; max = Math.max ( max , value ) ; } System.out.println ( max + \"\" + map.size ( ) ) ; } static class FastScanner { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; StringTokenizer st = new StringTokenizer ( \"\" ) ; String next ( ) { while ( ! st.hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) throws IOException { return br.readLine ( ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC134_E",
        "Python": "def binary_search ( key ) :\n    bad , good = - 1 , len ( ans )\n    while good - bad > 1 :\n        mid = ( bad + good ) // 2\n        if ans [ mid ] [ - 1 ] < key :\n            good = mid\n        else :\n            bad = mid\n    return good\nN = int ( input ( ) )\nans = [ ]\nfor _ in range ( N ) :\n    A = int ( input ( ) )\n    idx = binary_search ( A )\n    if idx == len ( ans ) :\n        ans.append ( [ A ] )\n    else :\n        ans [ idx ].append ( A )\nprint ( len ( ans ) )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC134_E { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; TreeMap < Integer , Integer > map = new TreeMap < Integer , Integer > ( ) ; while ( n -- > 0 ) { int num = sc.nextInt ( ) ; if ( map.lowerKey ( num ) == null ) { int val = map.getOrDefault ( num , 0 ) ; map.put ( num , ++ val ) ; } else { int key = map.lowerKey ( num ) ; int val = map.get ( key ) ; if ( val == 1 ) { map.remove ( key ) ; } else { map.put ( key , -- val ) ; } val = map.getOrDefault ( num , 0 ) ; map.put ( num , ++ val ) ; } } int ans = 0 ; for ( Integer key : map.keySet ( ) ) { int val = map.get ( key ) ; ans += val ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC112_C",
        "Python": "import sys\ndef solve ( n , ls_xyh ) :\n    x0 = None\n    for i in range ( n ) :\n        if ls_xyh [ i ] [ 2 ] > 0 :\n            [ x0 , y0 , h0 ] = ls_xyh [ i ]\n            break\n    cands = [ ( cx , cy , h0 + abs ( cx - x0 ) + abs ( cy - y0 ) ) for cx in range ( 101 ) for cy in range ( 101 ) ]\n    for [ x , y , h ] in ls_xyh :\n        cands = [ ( cx , cy , ch ) for ( cx , cy , ch ) in cands if max ( ch - abs ( cx - x ) - abs ( cy - y ) , 0 ) == h ]\n    ( xx , yy , hh ) = cands [ 0 ]\n    return ' '.join ( [ str ( xx ) , str ( yy ) , str ( hh ) ] )\ndef readQuestion ( ) :\n    ws = sys.stdin.readline ( ).strip ( ).split ( )\n    n = int ( ws [ 0 ] )\n    ls_xyh = [ list ( map ( int , sys.stdin.readline ( ).strip ( ).split ( ) ) ) for j in range ( n ) ]\n    return ( n , ls_xyh )\ndef main ( ) :\n    print ( solve ( * readQuestion ( ) ) )\nmain ( )\n\n",
        "Java": "import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_ABC112_C { private static final int MAX = 100 ; public static void main ( String [ ] args ) { try ( Scanner scanner = new Scanner ( System.in ) ) { int n = scanner.nextInt ( ) ; int [ ] x = new int [ n ] , y = new int [ n ] , h = new int [ n ] ; IntStream.range ( 0 , n ).forEach ( i -> { x [ i ] = scanner.nextInt ( ) ; y [ i ] = scanner.nextInt ( ) ; h [ i ] = scanner.nextInt ( ) ; } ) ; for ( int i = 0 ; i <= MAX ; i ++ ) { for ( int j = 0 ; j <= MAX ; j ++ ) { int ch = check ( n , x , y , h , i , j ) ; if ( ch > 0 ) { System.out.println ( i + \" \" + j + \" \" + ch ) ; } } } } } private static int check ( int n , int [ ] x , int [ ] y , int [ ] h , int cx , int cy ) { int ch = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( h [ i ] > 0 ) { ch = Math.abs ( x [ i ] - cx ) + Math.abs ( y [ i ] - cy ) + h [ i ] ; break ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( h [ i ] != Math.max ( ch - Math.abs ( x [ i ] - cx ) - Math.abs ( y [ i ] - cy ) , 0 ) ) { return - 1 ; } } return ch ; } }\n"
    },
    {
        "filename": "codeforces_56_B",
        "Python": "N = int ( input ( ) )\nA = list ( map ( int , input ( ).split ( ) ) )\nmn , mx = N + 1 , - 1\nfor i in range ( N ) :\n    if ( i + 1 != A [ i ] ) :\n        mn = min ( mn , i )\n        mx = max ( mx , i )\nif ( mx == - 1 ) :\n    print ( '0 0' )\nelse :\n    A = A [ : mn ] + A [ mn : ( mx + 1 ) ] [ : : - 1 ] + A [ ( mx + 1 ) : ]\n    if ( sorted ( A ) == A ) :\n        print ( mn + 1 , mx + 1 )\n    else :\n        print ( '0 0' )\n\n",
        "Java": "import java.util.* ; import java.io.* ; import java.lang.Math ; public class codeforces_56_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int len = scan.nextInt ( ) ; int a [ ] = new int [ len ] ; for ( int i = 0 ; i < len ; i ++ ) { a [ i ] = scan.nextInt ( ) ; } int l = 0 ; int r = 0 ; boolean flag = false ; boolean isTrue = false ; loop : for ( int i = 0 ; i < len ; i ++ ) { if ( a [ i ] != i + 1 && ! flag ) { l = i + 1 ; flag = true ; continue ; } if ( a [ i ] != i + 1 && flag ) { r = i + 1 ; if ( ( a [ r - 1 ] - a [ r - 2 ] > 0 ) ) { isTrue = true ; break loop ; } } } System.out.println ( ( ! isTrue ) ? l + \" \" + r : \"0\" + \" \" + \"0\" ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC118_C",
        "Python": "N = int ( input ( ) )\nA = list ( map ( int , input ( ).split ( ) ) )\nimport functools\nimport fractions\ngcd = functools.reduce ( fractions.gcd , A )\nprint ( gcd )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC118_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; ArrayList < Integer > a = new ArrayList < > ( ) ; if ( n == 1 ) { System.out.println ( sc.nextInt ( ) ) ; System.exit ( 0 ) ; } for ( int i = 0 ; i < n ; i ++ ) { a.add ( sc.nextInt ( ) ) ; } Collections.sort ( a ) ; if ( a.get ( a.size ( ) - 1 ) == 0 ) { System.out.println ( 0 ) ; System.exit ( 0 ) ; } int ans = 0 ; while ( true ) { if ( a.size ( ) == 1 ) { ans = a.get ( 0 ) ; break ; } a = func ( a ) ; } System.out.println ( ans ) ; } private static ArrayList < Integer > func ( ArrayList < Integer > A ) { ArrayList < Integer > a = A ; int min = 0 ; for ( int i = 0 ; i < a.size ( ) ; i ++ ) { if ( a.get ( i ) == 0 ) { a.remove ( i ) ; i -- ; } else { if ( min != 0 ) { a.set ( i , a.get ( i ) % min ) ; if ( a.get ( i ) == 1 ) { System.out.println ( 1 ) ; System.exit ( 0 ) ; } } else { min = a.get ( i ) ; } } } Collections.sort ( a ) ; return a ; } }\n"
    },
    {
        "filename": "atcoder_AGC046_A",
        "Python": "from math import gcd\nx = int ( input ( ) )\nprint ( 360 // gcd ( 360 , x ) )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.util.* ; public class atcoder_AGC046_A { public static void main ( String [ ] args ) throws IOException { FastReader sc = new FastReader ( ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int x = sc.nextInt ( ) ; int count = 0 ; int tmp = x ; x = 0 ; while ( x != 360 ) { x = x + tmp ; if ( x > 360 ) { x = x - 360 ; } count ++ ; } System.out.println ( count ) ; } } class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } }\n"
    },
    {
        "filename": "atcoder_ABC146_D",
        "Python": "from collections import deque\nimport sys\ninput = sys.stdin.readline\ndef bfs ( v , N , G , E ) :\n    visited = [ 0 ] * N\n    queue = deque ( )\n    K = - 1\n    node2color = [ - 1 for _ in range ( N ) ]\n    queue.append ( v )\n    visited [ v ] = 1\n    while queue :\n        q = queue.popleft ( )\n        color = 0\n        for nex in G [ q ] :\n            if visited [ nex ] :\n                continue\n            visited [ nex ] = 1\n            color += 1\n            if color == node2color [ q ] :\n                color += 1\n            node2color [ nex ] = color\n            E [ ( min ( q , nex ) , max ( q , nex ) ) ] = color\n            queue.append ( nex )\n        K = max ( K , color )\n    return K\ndef main ( ) :\n    N = int ( input ( ) )\n    G = [ deque ( ) for _ in range ( N ) ]\n    E = dict ( )\n    for i in range ( N - 1 ) :\n        a , b = map ( lambda x : int ( x ) - 1 , input ( ).split ( ) )\n        G [ a ].append ( b )\n        G [ b ].append ( a )\n        E [ ( a , b ) ] = 0\n    K = bfs ( 0 , N , G , E )\n    print ( K )\n    for value in E.values ( ) :\n        print ( value )\nmain ( )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class atcoder_ABC146_D { static int n ; static List < ArrayList < Edge >> g ; static int [ ] ans ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.next ( ) ) ; g = new ArrayList ( ) ; for ( int i = 0 ; i < n ; i ++ ) { g.add ( new ArrayList < Edge > ( ) ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = Integer.parseInt ( sc.next ( ) ) - 1 ; int b = Integer.parseInt ( sc.next ( ) ) - 1 ; g.get ( a ).add ( new Edge ( i , b ) ) ; g.get ( b ).add ( new Edge ( i , a ) ) ; } ans = new int [ n - 1 ] ; dfs ( 0 , - 1 , - 1 ) ; int max = 0 ; for ( int temp : ans ) { max = Math.max ( max , temp ) ; } System.out.println ( max ) ; for ( int c : ans ) { System.out.println ( c ) ; } } static void dfs ( int to , int color , int parents ) { int k = 1 ; for ( Edge e : g.get ( to ) ) { if ( e.to == parents ) continue ; if ( k == color ) k ++ ; ans [ e.id ] = k ; dfs ( e.to , k , to ) ; k ++ ; } } } class Edge { Edge ( int id , int to ) { this.id = id ; this.to = to ; } int id ; int to ; }\n"
    },
    {
        "filename": "atcoder_ABC171_E",
        "Python": "from functools import *\nfrom operator import *\nN = int ( input ( ) )\na = list ( map ( int , input ( ).split ( ) ) )\ntotal = reduce ( xor , a , 0 )\nprint ( \" \".join ( list ( map ( lambda ai : str ( ai ^ total ) , a ) ) ) )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.Arrays ; import java.util.Collections ; import java.util.Comparator ; import java.util.HashSet ; import java.util.List ; import java.util.PriorityQueue ; import java.util.Scanner ; import java.util.Set ; public class atcoder_ABC171_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int r = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; r ^= a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { if ( i != 0 ) System.out.print ( \" \" ) ; System.out.print ( r ^ a [ i ] ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC126_D",
        "Python": "import sys\nsys.setrecursionlimit ( 10 ** 5 )\nclass Node :\n    def __init__ ( self ) :\n        self.val = None\n        self.color = None\n        self.a = [ ]\nn = int ( input ( ) )\nnodes = [ ]\nfor i in range ( n ) :\n    nodes.append ( Node ( ) )\nfor i in range ( n - 1 ) :\n    u , v , w = map ( int , input ( ).split ( ) )\n    node1 = nodes [ u - 1 ]\n    node2 = nodes [ v - 1 ]\n    node1.val = u\n    node2.val = v\n    node1.a.append ( [ node2 , w ] )\n    node2.a.append ( [ node1 , w ] )\nroot = nodes [ 0 ]\nroot.color = True\nnodeSet = set ( )\ndef traverse ( node , distance ) :\n    if node in nodeSet :\n        return\n    else :\n        nodeSet.add ( node )\n    for pair in node.a :\n        adjNode = pair [ 0 ]\n        dis = pair [ 1 ]\n        if ( distance + dis ) % 2 == 0 :\n            adjNode.color = root.color\n        else :\n            adjNode.color = not root.color\n        traverse ( adjNode , distance + dis )\ntraverse ( root , 0 )\nfor i in range ( n ) :\n    node = nodes [ i ]\n    if node.color :\n        print ( 1 )\n    else :\n        print ( 0 )\n\n",
        "Java": "import java.util.* ; import java.util.Map.* ; public class atcoder_ABC126_D { private static int [ ] colors ; public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = n - 1 ; colors = new int [ n ] ; Arrays.fill ( colors , - 1 ) ; Point [ ] points = new Point [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { points [ i ] = new Point ( i ) ; } while ( m -- > 0 ) { int me = sc.nextInt ( ) - 1 ; int you = sc.nextInt ( ) - 1 ; int length = sc.nextInt ( ) ; points [ me ].becomeFriend ( points [ you ] , length ) ; points [ you ].becomeFriend ( points [ me ] , length ) ; } dfs ( points [ 0 ] , 0 ) ; for ( int c : colors ) { System.out.println ( c ) ; } } public static void dfs ( Point p , int length ) { boolean alreadyKnown = colors [ p.name ] != - 1 ; if ( alreadyKnown ) return ; if ( length % 2 == 0 ) { colors [ p.name ] = 0 ; } else { colors [ p.name ] = 1 ; } for ( Entry < Point , Integer > entry : p.friends.entrySet ( ) ) { Point friend = entry.getKey ( ) ; int length2 = entry.getValue ( ) ; dfs ( friend , length + length2 ) ; } } public static class Point { int name ; Map < Point , Integer > friends ; Point ( int name ) { this.name = name ; this.friends = new HashMap < Point , Integer > ( ) ; } void becomeFriend ( Point p , int length ) { this.friends.put ( p , length ) ; } } }\n"
    },
    {
        "filename": "codeforces_334_A",
        "Python": "n = int ( input ( ) )\ni , j = 1 , n * n\nwhile i < j :\n    print ( i , j )\n    i += 1\n    j -= 1\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_334_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; int square = n * n ; ArrayList < Integer > odd = new ArrayList < > ( ) ; ArrayList < Integer > even = new ArrayList < > ( ) ; for ( int i = 1 ; i <= square ; i ++ ) { if ( i % 2 == 0 ) { even.add ( i ) ; } else { odd.add ( i ) ; } } int loop = square / n ; int div = loop / 2 ; debug ( div ) ; for ( int i = 1 ; i <= loop ; i ++ ) { for ( int j = 0 ; j < div ; j ++ ) { if ( i % 2 == 1 ) { pw.print ( odd.remove ( 0 ) + \" \" + ( even.remove ( even.size ( ) - 1 ) ) + \" \" ) ; } else { pw.print ( even.remove ( 0 ) + \" \" + ( odd.remove ( odd.size ( ) - 1 ) ) + \" \" ) ; } } pw.println ( ) ; } pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC025_A",
        "Python": "n = input ( )\na = [ \"10\" , \"100\" , \"1000\" , \"10000\" , \"100000\" ]\nnew = sum ( list ( map ( int , n ) ) )\nif n in a :\n    print ( 10 )\nelse :\n    print ( new )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_AGC025_A { public static int sum ( int a ) { int ans = 0 ; while ( a >= 10 ) { ans += a % 10 ; a /= 10 ; } ans += a ; return ans ; } public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int n = 0 ; if ( N % 2 == 0 ) { n = N / 2 ; } else { n = ( N + 1 ) / 2 ; } int ans = sum ( 1 ) + sum ( N - 1 ) ; for ( int A = 1 ; A <= n ; A ++ ) { if ( sum ( A ) + sum ( N - A ) < ans ) { ans = sum ( A ) + sum ( N - A ) ; } } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "codeforces_546_A",
        "Python": "k , n , w = input ( ).split ( )\nif 1 <= int ( k ) and int ( w ) <= 1000 :\n    total = 0\n    for i in range ( 1 , int ( w ) + 1 ) :\n        total += i * int ( k )\n    if total > int ( n ) :\n        print ( total - int ( n ) )\n    else :\n        print ( 0 )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_546_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long pandu , vundu , urdu , c = 0 ; pandu = sc.nextLong ( ) ; vundu = sc.nextLong ( ) ; urdu = sc.nextLong ( ) ; for ( int i = 1 ; i <= urdu ; i ++ ) { c += i * pandu ; } if ( c < vundu ) { System.out.print ( \"0\" ) ; } else { System.out.print ( c - vundu ) ; } } }\n"
    },
    {
        "filename": "codeforces_282_B",
        "Python": "firstline = int ( input ( ) )\ntotal = 0\nmemory = [ ]\nfor x in range ( firstline ) :\n    A , G = list ( map ( int , input ( ).split ( ) ) )\n    if total + A <= 500 :\n        total += A\n        memory.append ( \"A\" )\n    else :\n        total -= G\n        memory.append ( \"G\" )\nprint ( \"\".join ( memory ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_282_B { public static void main ( String arg [ ] ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; char ch [ ] = new char [ n ] ; int s1 = 0 , s2 = 0 ; int i , j = 0 , flag = 0 , dif = 0 ; for ( i = 0 ; i < n ; i ++ ) { int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int temp1 = s1 + x ; int temp2 = s2 + y ; if ( Math.abs ( temp1 - s2 ) <= 500 ) { s1 += x ; ch [ j ++ ] = 'A' ; continue ; } if ( Math.abs ( temp2 - s1 ) <= 500 ) { s2 += y ; ch [ j ++ ] = 'G' ; continue ; } flag = 1 ; break ; } if ( flag == 1 ) System.out.println ( - 1 ) ; else { String ans = \"\" ; ans = ans.valueOf ( ch ) ; System.out.println ( ans ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC142_A",
        "Python": "from math import *\ndef next_int ( ) :\n    return int ( input ( ) )\ndef next_ints ( ) :\n    return list ( map ( int , input ( ).split ( ) ) )\nn = next_int ( )\nt = 0\nfor i in range ( n ) :\n    if i + 1 & 1 :\n        t += 1\nprint ( t / n )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.math.BigDecimal ; import java.math.RoundingMode ; public class atcoder_ABC142_A { public static void main ( String [ ] args ) throws Exception { try { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; double input = Double.parseDouble ( br.readLine ( ) ) ; double countOdd = Math.round ( input / 2 ) ; BigDecimal result = new BigDecimal ( countOdd / input ) ; result.setScale ( 10 , RoundingMode.HALF_UP ) ; System.out.println ( result ) ; } catch ( IOException | NumberFormatException e ) { e.printStackTrace ( ) ; System.exit ( 0 ) ; } catch ( final Exception e ) { e.printStackTrace ( ) ; System.exit ( 0 ) ; } } }\n"
    },
    {
        "filename": "atcoder_AGC017_A",
        "Python": "N , P = map ( int , input ( ).split ( ) )\ndef combi ( N , K ) :\n    a = 1\n    for i in range ( K ) :\n        a *= N - i\n    for j in range ( K ) :\n        a /= j + 1\n    return a\nans = 0\nlis = list ( map ( int , input ( ).split ( ) ) )\nls = [ ]\nfor a in lis :\n    ls.append ( a % 2 )\none = ls.count ( 1 )\nzero = ls.count ( 0 )\npattern_a = 0\npattern_b = 0\nfor j in range ( zero + 1 ) :\n    pattern_b += combi ( zero , j )\ntime = 0\nwhile time <= one :\n    if time % 2 == P :\n        pattern_a += combi ( one , time )\n    time += 1\nprint ( int ( pattern_a * pattern_b ) )\n\n",
        "Java": "import java.util.* ; import java.math.* ; public class atcoder_AGC017_A { static BigInteger C ( int n , int m ) { BigInteger res = new BigInteger ( \"1\" ) ; for ( int i = m - n + 1 ; i <= m ; i ++ ) res = res.multiply ( BigInteger.valueOf ( i ) ) ; for ( int i = 1 ; i <= n ; i ++ ) res = res.divide ( BigInteger.valueOf ( i ) ) ; return res ; } public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; int n , p ; int k0 = 0 ; int k1 = 0 ; n = sc.nextInt ( ) ; p = sc.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int x ; x = sc.nextInt ( ) ; if ( x % 2 == 1 ) k1 ++ ; else k0 ++ ; } BigInteger ans = new BigInteger ( \"1\" ) ; for ( int i = 0 ; i < k0 ; i ++ ) ans = ans.multiply ( BigInteger.valueOf ( 2 ) ) ; if ( p == 0 ) { BigInteger add = new BigInteger ( \"0\" ) ; for ( int i = 0 ; i <= k1 ; i += 2 ) add = add.add ( C ( i , k1 ) ) ; ans = ans.multiply ( add ) ; System.out.println ( ans ) ; } else { BigInteger add = new BigInteger ( \"0\" ) ; for ( int i = 1 ; i <= k1 ; i += 2 ) add = add.add ( C ( i , k1 ) ) ; ans = ans.multiply ( add ) ; System.out.println ( ans ) ; } } }\n"
    },
    {
        "filename": "codeforces_534_B",
        "Python": "v1 , v2 = input ( ).split ( )\nt , d = input ( ).split ( )\nv1 = int ( v1 )\nv2 = int ( v2 )\nt = int ( t )\nd = int ( d )\na = 1\nv = v1\ndistance = 0\nfor i in range ( t ) :\n    if v - v2 > ( t - i - 1 ) * d :\n        a *= - 1\n        v = ( t - i - 1 ) * d + v2\n    distance += v\n    v += a * d\nprint ( distance )\n\n",
        "Java": "import java.util.Arrays ; import java.util.Scanner ; public class codeforces_534_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int v1 = sc.nextInt ( ) ; int v2 = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; long [ ] [ ] dp = new long [ t - 1 ] [ 1150 ] ; for ( int i = 0 ; i < t - 1 ; i ++ ) { Arrays.fill ( dp [ i ] , - ( long ) ( 1e17 ) ) ; } dp [ 0 ] [ v1 ] = v1 ; long sum = 0 ; for ( int i = 1 ; i < t - 1 ; i ++ ) { for ( int j = 0 ; j < 1150 ; j ++ ) { for ( int x = 0 ; x <= d ; x ++ ) { if ( j + x < 1150 ) dp [ i ] [ j ] = Math.max ( dp [ i ] [ j ] , dp [ i - 1 ] [ j + x ] + j ) ; } for ( int x = d ; x >= 0 ; x -- ) { if ( j - x >= 0 ) { dp [ i ] [ j ] = Math.max ( dp [ i ] [ j ] , dp [ i - 1 ] [ j - x ] + j ) ; } } } } long ans = Long.MIN_VALUE ; for ( int i = t - 2 ; i < t - 1 ; i ++ ) { for ( int j = 0 ; j < 1150 ; j ++ ) { if ( Math.abs ( j - v2 ) <= d ) ans = Math.max ( ans , dp [ i ] [ j ] + v2 ) ; } } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC122_C",
        "Python": "from itertools import accumulate\nn , q = map ( int , input ( ).split ( ) )\ns = input ( )\nproblems = [ list ( map ( int , input ( ).split ( ) ) ) for _ in range ( q ) ]\ndef count ( total , i ) :\n    return total + 1 if s [ i - 1 : i + 1 ] == 'AC' else total\ncumsum = list ( accumulate ( [ 0 ] + list ( range ( 1 , n ) ) , count ) )\nfor l , r in problems :\n    print ( cumsum [ r - 1 ] - cumsum [ l - 1 ] )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC122_C { final static long mod = 1000000007 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; char [ ] c = sc.next ( ).toCharArray ( ) ; int [ ] [ ] range = new int [ q ] [ 2 ] ; for ( int i = 0 ; i < q ; i ++ ) { range [ i ] [ 0 ] = sc.nextInt ( ) ; range [ i ] [ 1 ] = sc.nextInt ( ) ; } int [ ] frag = new int [ n + 1 ] ; int [ ] rui = new int [ n + 1 ] ; for ( int i = 2 ; i <= n ; i ++ ) { if ( c [ i - 2 ] == 'A' && c [ i - 1 ] == 'C' ) { frag [ i ] ++ ; } rui [ i ] = rui [ i - 1 ] + frag [ i ] ; } for ( int i = 0 ; i < q ; i ++ ) { int left = range [ i ] [ 0 ] ; int right = range [ i ] [ 1 ] ; System.out.println ( rui [ right ] - rui [ left ] ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC143_D",
        "Python": "from bisect import bisect_right , bisect_left\nn , * l = map ( int , open ( 0 ).read ( ).split ( ) )\nl.sort ( )\nans = 0\nfor i in range ( n ) :\n    for j in range ( i + 1 , n ) :\n        a = l [ i ]\n        b = l [ j ]\n        right = bisect_left ( l , a + b )\n        left = bisect_right ( l , max ( a - b , b - a ) )\n        tmp = max ( 0 , right - left )\n        if left <= i < right :\n            tmp -= 1\n        if left <= j < right :\n            tmp -= 1\n        ans += tmp\nprint ( ans // 3 )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC143_D { public static void main ( String args [ ] ) { Scanner scanner = new Scanner ( System.in ) ; int N = scanner.nextInt ( ) ; List < Integer > L = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { L.add ( scanner.nextInt ( ) ) ; } Collections.sort ( L ) ; int count = 0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = i + 1 ; j < N ; j ++ ) { int a = L.get ( i ) ; int b = L.get ( j ) ; int res = find ( L , j + 1 , a + b ) ; count = count + res ; } } System.out.println ( count ) ; } public static int find ( List < Integer > li , int from , int target ) { int low = from ; int upp = li.size ( ) - 1 ; int mid = ( upp - low + 1 ) % 2 == 0 ? ( low + upp ) / 2 + 1 : ( low + upp ) / 2 ; if ( upp - low < 0 ) { return 0 ; } else if ( li.get ( from ) >= target ) { return 0 ; } else if ( li.get ( upp ) < target ) { return upp - low + 1 ; } while ( upp - low > 1 ) { if ( li.get ( mid ) >= target ) { upp = mid ; } else { low = mid ; } mid = ( upp - low + 1 ) % 2 == 0 ? ( low + upp ) / 2 + 1 : ( low + upp ) / 2 ; } return low - from + 1 ; } }\n"
    },
    {
        "filename": "codeforces_617_B",
        "Python": "from math import prod\ninput ( )\na = input ( )\nprint ( 0 if a.count ( \"1\" ) == 0 else prod ( [ i.count ( \"0\" ) + 1 for i in a.strip ( \"0 \" ).split ( '1' ) ] ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_617_B { static Scanner input = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = input.nextInt ( ) ; List < Integer > arr = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( input.nextInt ( ) == 1 ) arr.add ( i ) ; if ( arr.isEmpty ( ) ) System.out.println ( 0 ) ; else { long result = 1 ; for ( int i = 1 ; i < arr.size ( ) ; i ++ ) result *= arr.get ( i ) - arr.get ( i - 1 ) ; System.out.println ( result ) ; } } }\n"
    },
    {
        "filename": "codeforces_581_B",
        "Python": "n = int ( input ( ) )\narr = list ( map ( int , input ( ).strip ( ).split ( ) ) ) [ : n ]\nans = [ 0 ] * n\nmx = arr [ - 1 ]\nfor i in range ( n - 2 , - 1 , - 1 ) :\n    ans [ i ] = max ( 0 , mx - arr [ i ] + 1 )\n    if arr [ i ] > mx :\n        mx = arr [ i ]\nprint ( * ans )\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class codeforces_581_B { static TreeSet < Long > set ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = in.nextLong ( ) ; long [ ] dp = new long [ n + 1 ] ; Arrays.fill ( dp , - 1 ) ; dp [ n - 1 ] = a [ n - 1 ] ; for ( int i = n - 1 ; i >= 0 ; i -- ) { dp [ i ] = Math.max ( dp [ i + 1 ] , a [ i ] ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > dp [ i + 1 ] ) pw.print ( 0 + \" \" ) ; else pw.print ( ( dp [ i + 1 ] - a [ i ] + 1 ) + \" \" ) ; } pw.println ( ) ; pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC070_B",
        "Python": "A = list ( map ( int , input ( ).split ( ) ) )\nif A [ 1 ] <= A [ 2 ] or A [ 3 ] <= A [ 0 ] :\n    print ( 0 )\nelse :\n    A.sort ( )\n    print ( A [ 2 ] - A [ 1 ] )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStream ; import java.io.InputStreamReader ; import java.io.OutputStream ; import java.io.PrintWriter ; import java.util.ArrayList ; import java.util.Arrays ; import java.util.Collections ; import java.util.HashSet ; import java.util.List ; import java.util.Set ; import java.util.StringTokenizer ; public class atcoder_ABC070_B { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; int a = in.nextInt ( ) ; int b = in.nextInt ( ) ; int c = in.nextInt ( ) ; int d = in.nextInt ( ) ; if ( c > b ) { System.out.println ( 0 ) ; } else if ( a > d ) { System.out.println ( 0 ) ; } else if ( a < c ) { System.out.println ( Math.min ( b , d ) - c ) ; } else { List < Integer > l = new ArrayList < > ( ) ; l.add ( a ) ; l.add ( b ) ; l.add ( c ) ; l.add ( d ) ; Collections.sort ( l ) ; System.out.println ( l.get ( 2 ) - l.get ( 1 ) ) ; } } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } public int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } public long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC140_F",
        "Python": "import sys\ndef I ( ) : return ( int ( sys.stdin.readline ( ) ) )\ndef LI ( ) : return ( [ int ( x ) for x in sys.stdin.readline ( ).split ( ) ] )\ndef main ( ) :\n    N = I ( )\n    S = sorted ( LI ( ) , reverse = True )\n    flag = [ True ] * len ( S )\n    cur = [ ]\n    cur.append ( S [ 0 ] )\n    flag [ 0 ] = False\n    for i in range ( N ) :\n        j = 0\n        jM = len ( cur )\n        for k in range ( len ( S ) ) :\n            if flag [ k ] and S [ k ] < cur [ j ] :\n                cur.append ( S [ k ] )\n                j += 1\n                flag [ k ] = False\n                if j == jM :\n                    break\n        else :\n            return ( \"No\" )\n        cur.sort ( reverse = True )\n    return ( \"Yes\" )\nif __name__ == \"__main__\" :\n    print ( main ( ) )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC140_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int size = ( 1 << N ) ; int [ ] S = new int [ size ] ; boolean [ ] spawned = new boolean [ size ] ; spawned [ size - 1 ] = true ; for ( int i = 0 ; i < size ; i ++ ) S [ i ] = sc.nextInt ( ) ; Arrays.sort ( S ) ; List < Integer > active = new ArrayList < > ( ) ; active.add ( S [ size - 1 ] ) ; spawned [ size - 1 ] = true ; for ( int i = 0 ; i < N ; i ++ ) { active.sort ( Collections.reverseOrder ( ) ) ; List < Integer > activated = new ArrayList < > ( ) ; int next = size - 1 ; for ( int slime : active ) { while ( next >= 0 && ( S [ next ] >= slime || spawned [ next ] ) ) { next -- ; } if ( next < 0 ) { System.out.println ( \"No\" ) ; return ; } spawned [ next ] = true ; activated.add ( S [ next ] ) ; } active.addAll ( activated ) ; } System.out.println ( \"Yes\" ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC029_C",
        "Python": "import random\ninput ( )\nA = [ int ( _ ) for _ in input ( ).split ( ) ]\nA = [ A [ 0 ] ] + [ j for i , j in zip ( A , A [ 1 : ] ) if i >= j ]\nN = len ( A )\ndef cut ( array , index ) :\n    if index < 1 :\n        return [ ]\n    if index <= array [ 0 ] [ 0 ] :\n        return [ ( index , array [ 0 ] [ 1 ] ) ]\n    for _ in range ( len ( array ) - 1 , 0 , - 1 ) :\n        if array [ _ - 1 ] [ 0 ] < index :\n            return array [ : _ ] + [ ( index , array [ _ ] [ 1 ] ) ]\ndef is_possible ( K ) :\n    dp = [ ( A [ 0 ] , 0 ) ]\n    for a in A [ 1 : ] :\n        if a <= dp [ - 1 ] [ 0 ] :\n            dp = cut ( dp , a )\n        else :\n            dp += [ ( a , 0 ) ]\n        is_added = False\n        for j in range ( len ( dp ) - 1 , - 1 , - 1 ) :\n            if dp [ j ] [ 1 ] < K - 1 :\n                dp = cut ( dp , dp [ j ] [ 0 ] - 1 ) + [ ( dp [ j ] [ 0 ] , dp [ j ] [ 1 ] + 1 ) ]\n                if dp [ - 1 ] [ 0 ] < a :\n                    dp += [ ( a , 0 ) ]\n                is_added = True\n                break\n        if not is_added :\n            return False\n    return True\ndef bis ( x , y ) :\n    if y == x + 1 :\n        return y\n    elif is_possible ( ( x + y ) // 2 ) :\n        return bis ( x , ( x + y ) // 2 )\n    else :\n        return bis ( ( x + y ) // 2 , y )\nprint ( bis ( 0 , N ) )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.IOException ; import java.util.Arrays ; import java.util.TreeMap ; public class atcoder_AGC029_C { private int n ; private int [ ] a ; private TreeMap < Integer , Integer > s ; public static void main ( String [ ] args ) { atcoder_AGC029_C m = new atcoder_AGC029_C ( ) ; m.solve ( ) ; } private void set ( ) { try ( BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ) { n = Integer.parseInt ( br.readLine ( ) ) ; a = Arrays.stream ( br.readLine ( ).split ( \" \" ) ).mapToInt ( Integer :: parseInt ).toArray ( ) ; s = new TreeMap < > ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } private void solve ( ) { set ( ) ; int ng = 0 ; int ok = n ; while ( ok - ng > 1 ) { int k = ( ng + ok ) / 2 ; if ( isPossible ( k ) ) { ok = k ; } else { ng = k ; } } System.out.println ( ok ) ; } private boolean isPossible ( int k ) { s.clear ( ) ; int current = 0 ; for ( int ai : a ) { if ( ai <= current ) { if ( k == 1 ) return false ; while ( ! s.isEmpty ( ) && s.lastKey ( ) >= ai ) s.pollLastEntry ( ) ; int p = ai - 1 ; while ( true ) { if ( p < 0 ) return false ; int sp = s.getOrDefault ( p , 0 ) + 1 ; s.put ( p , sp ) ; if ( sp == k ) { s.remove ( p ) ; p -- ; } else { break ; } } } current = ai ; } return true ; } }\n"
    },
    {
        "filename": "codeforces_514_A",
        "Python": "ip = input ( )\nst = \"\"\nif len ( ip ) != 1 :\n    if ip [ 0 ] == \"9\" :\n        st = \"9\"\n        ip = ip [ 1 : ]\n    for i in ip :\n        if int ( i ) > 4 :\n            n = 9 - int ( i )\n            st += str ( n )\n        else :\n            st += i\nelse :\n    st = ip\nprint ( int ( st ) )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class codeforces_514_A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; List < Long > list = new ArrayList < > ( ) ; long x = sc.nextLong ( ) ; while ( x > 0 ) { long r = x % 10 ; if ( 9 - r < r ) { if ( x / 10 == 0 && 9 - r == 0 ) list.add ( r ) ; else list.add ( 9 - r ) ; } else list.add ( r ) ; x = x / 10 ; } int pow = 0 ; long newNumber = 0 ; for ( int i = 0 ; i < list.size ( ) ; i ++ ) { newNumber = newNumber + list.get ( i ) * ( long ) Math.pow ( 10 , pow ) ; pow ++ ; } System.out.println ( newNumber ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC046_B",
        "Python": "A , B , C , D = map ( int , input ( ).split ( ) )\nm = 998244353\nd = [ [ 0 ] * ( D + 1 ) for _ in range ( C + 1 ) ]\nd [ A ] [ B ] = 1\nfor i in range ( A , C + 1 ) :\n    for j in range ( B , D + 1 ) :\n        d [ i ] [ j ] += ( d [ i ] [ j - 1 ] * i + d [ i - 1 ] [ j ] * j - d [ i - 1 ] [ j - 1 ] * ( i - 1 ) * ( j - 1 ) ) % m\nprint ( d [ C ] [ D ] )\n\n",
        "Java": "import java.io.PrintWriter ; import java.util.HashMap ; import java.util.Map ; import java.util.Scanner ; public class atcoder_AGC046_B { long MOD = 998244353L ; long [ ] [ ] dp = new long [ 3001 ] [ 3001 ] ; void solve ( Scanner sc , PrintWriter pw ) { int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int C = sc.nextInt ( ) ; int D = sc.nextInt ( ) ; dp [ A ] [ B ] = 1 ; for ( int c = A ; c <= C ; c ++ ) { for ( int d = B ; d <= D ; d ++ ) { if ( c == A && d == B ) { continue ; } long ans = 0 ; if ( c > A ) { long part = dp [ c - 1 ] [ d ] ; ans = ( part * d ) ; } if ( d > B ) { long part = dp [ c ] [ d - 1 ] ; ans = ( ans + ( part * c ) ) ; } if ( c > A && d > B ) { ans = ( ans - ( dp [ c - 1 ] [ d - 1 ] * ( c - 1 ) * ( d - 1 ) ) ) ; } dp [ c ] [ d ] = ( ( ans % MOD ) + MOD ) % MOD ; } } pw.println ( dp [ C ] [ D ] ) ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; new atcoder_AGC046_B ( ).solve ( sc , pw ) ; pw.flush ( ) ; pw.close ( ) ; sc.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC043_B",
        "Python": "s = str ( input ( ) )\nmy_str = ''\nfor c in s :\n    if c == '0' or c == '1' :\n        my_str += c\n    elif c == 'B' and len ( my_str ) != 0 :\n        my_str = my_str [ : len ( my_str ) - 1 ]\nprint ( my_str )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.io.UncheckedIOException ; import java.util.StringTokenizer ; import java.io.IOException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; public class atcoder_ABC043_B { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; LightScanner in = new LightScanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; BUnhappyHackingABCEdit solver = new BUnhappyHackingABCEdit ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class BUnhappyHackingABCEdit { public void solve ( int testNumber , LightScanner in , PrintWriter out ) { String s = in.string ( ) ; StringBuilder d = new StringBuilder ( ) ; for ( char c : s.toCharArray ( ) ) { switch ( c ) { case '0' : d.append ( \"0\" ) ; break ; case '1' : d.append ( \"1\" ) ; break ; case 'B' : if ( d.length ( ) > 0 ) { d.setLength ( d.length ( ) - 1 ) ; d.trimToSize ( ) ; } break ; } } out.println ( d ) ; } } static class LightScanner { private BufferedReader reader = null ; private StringTokenizer tokenizer = null ; public LightScanner ( InputStream in ) { reader = new BufferedReader ( new InputStreamReader ( in ) ) ; } public String string ( ) { if ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new UncheckedIOException ( e ) ; } } return tokenizer.nextToken ( ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC155_E",
        "Python": "import sys\ninput_methods = [ 'clipboard' , 'file' , 'key' ]\nusing_method = 0\ninput_method = input_methods [ using_method ]\nIN = lambda : map ( int , input ( ).split ( ) )\nmod = 1000000007\ndef main_b ( ) :\n    s = input ( )\n    pp = 0\n    na = 0\n    for i , c in enumerate ( s [ : : - 1 ] ) :\n        cc = na + int ( c )\n        na = 0\n        if cc <= 4 :\n            pp += cc\n        else :\n            na = 1\n            if i == len ( s ) - 1 :\n                pp += 1\n            pp += 10 - cc\n    print ( pp )\ndef main ( ) :\n    s = input ( )\n    pmin = 1000\n    mmin = 0\n    s = '0' + s\n    for c in s [ : : - 1 ] :\n        v = int ( c )\n        npmin = min ( pmin + 10 - ( v + 1 ) , mmin + 10 - v )\n        nmmin = min ( pmin + v + 1 , mmin + v )\n        pmin = npmin\n        mmin = nmmin\n    return min ( pmin , mmin )\nisTest = False\ndef pa ( v ) :\n    if isTest :\n        print ( v )\ndef input_clipboard ( ) :\n    import clipboard\n    input_text = clipboard.get ( )\n    input_l = input_text.splitlines ( )\n    for l in input_l :\n        yield l\nif __name__ == \"__main__\" :\n    if sys.platform == 'ios' :\n        if input_method == input_methods [ 0 ] :\n            ic = input_clipboard ( )\n            input = lambda : ic.__next__ ( )\n        elif input_method == input_methods [ 1 ] :\n            sys.stdin = open ( 'inputFile.txt' )\n        else :\n            pass\n        isTest = True\n    else :\n        pass\n    ret = main ( )\n    if ret is not None :\n        print ( ret )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class atcoder_ABC155_E { public static void main ( String [ ] args ) { final long INF = ( long ) 1e15 ; Scanner sc = new Scanner ( System.in ) ; String number = sc.next ( ) ; int [ ] digits = new int [ number.length ( ) + 1 ] ; for ( int i = 0 ; i < number.length ( ) ; i ++ ) { digits [ i ] = number.charAt ( number.length ( ) - 1 - i ) - '0' ; } int bills = 0 ; for ( int i = 0 ; i <= number.length ( ) ; i ++ ) { if ( digits [ i ] == 10 ) { digits [ i + 1 ] ++ ; digits [ i ] = 0 ; } if ( digits [ i ] < 5 ) { bills += digits [ i ] ; } else if ( digits [ i ] == 5 ) { if ( digits [ i + 1 ] >= 5 ) { digits [ i + 1 ] ++ ; } bills += 5 ; } else { digits [ i + 1 ] ++ ; bills += 10 - digits [ i ] ; } } System.out.println ( bills ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC158_A",
        "Python": "stdin = input ( )\ns = stdin\nresult = \"Yes\" if \"A\" in s and \"B\" in s else \"No\"\nprint ( result )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.Scanner ; public class atcoder_ABC158_A { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; AStationAndBus solver = new AStationAndBus ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class AStationAndBus { public void solve ( int testNumber , Scanner in , PrintWriter out ) { String s = in.next ( ) ; if ( s.contains ( \"A\" ) && s.contains ( \"B\" ) ) { out.println ( \"Yes\" ) ; } else { out.println ( \"No\" ) ; } } } }\n"
    },
    {
        "filename": "codeforces_99_A",
        "Python": "l = input ( )\nl = l.split ( '.' )\ns = list ( l [ 0 ] )\np = list ( l [ 1 ] )\ni = int ( p [ 0 ] )\nif s [ len ( s ) - 1 ] == '9' :\n    print ( \"GOTO Vasilisa.\" )\nelif s [ len ( s ) - 1 ] != '9' and i < 5 :\n    s = \"\".join ( s )\n    print ( s )\nelse :\n    s = \"\".join ( s )\n    s = str ( int ( s ) + 1 )\n    print ( s )\n\n",
        "Java": "import java.util.Scanner ; import java.util.ArrayList ; import java.util.Arrays ; import java.math.BigInteger ; public class codeforces_99_A { public static void main ( String [ ] args ) { char [ ] str = new Scanner ( System.in ).nextLine ( ).toCharArray ( ) ; int dotIndex = 0 ; for ( int i = 0 ; i < str.length ; i ++ ) if ( str [ i ] == '.' ) { dotIndex = i ; break ; } if ( str [ dotIndex - 1 ] == '9' ) { System.out.println ( \"GOTO Vasilisa.\" ) ; } else if ( Integer.parseInt ( str [ dotIndex + 1 ] + \"\" ) > 4 ) { String _str = \"\" ; for ( int i = 0 ; i < dotIndex ; i ++ ) _str += str [ i ] ; System.out.println ( new BigInteger ( _str ).add ( new BigInteger ( \"1\" ) ).toString ( ) ) ; } else { for ( int i = 0 ; i < dotIndex ; i ++ ) System.out.print ( str [ i ] ) ; System.out.println ( ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC168_B",
        "Python": "def main ( ) :\n    K = int ( input ( ) )\n    S = input ( )\n    if len ( S ) <= K :\n        return S\n    return S [ : K ] + '...'\nif __name__ == '__main__' :\n    print ( main ( ) )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC168_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int K = in.nextInt ( ) ; String S = in.next ( ) ; if ( S.length ( ) <= K ) { System.out.println ( S ) ; } else { System.out.println ( S.substring ( 0 , K ) + \"...\" ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC123_C",
        "Python": "import math\nimport numpy as np\nfrom fractions import gcd\nimport fractions\nimport statistics\nimport collections\nfrom functools import reduce\nimport itertools\nN = int ( input ( ) )\nA = [ int ( input ( ) ) for i in range ( 5 ) ]\nprint ( math.ceil ( N / min ( A ) ) + 4 )\n\n",
        "Java": "import java.util.ArrayDeque ; import java.util.Queue ; import java.util.Random ; import java.util.Scanner ; public class atcoder_ABC123_C { private static Scanner sc = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { long N = sc.nextLong ( ) ; long min = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( i == 0 ) min = sc.nextLong ( ) ; else min = Math.min ( min , sc.nextLong ( ) ) ; } p ( ( long ) Math.ceil ( ( double ) N / min ) + 4 ) ; } static void p ( String ans ) { System.out.println ( ans ) ; } ; static void p ( int ans ) { System.out.println ( ans ) ; } ; static void p ( ) { System.out.println ( ) ; } ; static void p ( long ans ) { System.out.println ( ans ) ; } ; static void p ( double ans ) { System.out.println ( ans ) ; } ; }\n"
    },
    {
        "filename": "atcoder_ABC164_D",
        "Python": "s , l = ( input ( ) , 2019 )\nm , a , r = ( [ 1 ] + [ 0 ] * l , 0 , 0 )\nfor i , e in enumerate ( s [ : : - 1 ] ) :\n    a += int ( e ) * pow ( 10 , i , l )\n    r += m [ a % l ]\n    m [ a % l ] += 1\nprint ( r )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC164_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int N = S.length ( ) ; int [ ] mod_arr = new int [ N ] ; int [ ] mod_cnt = new int [ 2019 ] ; int radix = 1 ; for ( int i = 0 ; i < N ; i ++ ) { int tmp = ( ( int ) S.charAt ( N - 1 - i ) - ( int ) '0' ) * radix % 2019 ; if ( i != 0 ) tmp = ( tmp + mod_arr [ i - 1 ] ) % 2019 ; mod_arr [ i ] = tmp ; mod_cnt [ tmp ] ++ ; radix = radix * 10 % 2019 ; } long ans = 0L ; mod_cnt [ 0 ] ++ ; for ( int i = 0 ; i < 2019 ; i ++ ) { ans += mod_cnt [ i ] * ( mod_cnt [ i ] - 1 ) / 2 ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC145_B",
        "Python": "n = int ( input ( ) )\ns = input ( )\nif n % 2 != 0 : print ( 'No' )\nelif s [ : int ( n / 2 ) ] == s [ int ( n / 2 ) : ] : print ( 'Yes' )\nelse : print ( 'No' )\n\n",
        "Java": "import java.util.* ; import java.math.* ; public class atcoder_ABC145_B { public static void cout ( String str ) { System.out.println ( str ) ; } ; public static void main ( String args [ ] ) { Scanner cin = new Scanner ( System.in ) ; String a = \"\" , b = \"\" , str ; int n ; n = cin.nextInt ( ) ; cin.nextLine ( ) ; str = cin.nextLine ( ) ; for ( int i = 0 ; i < n / 2 ; i ++ ) { a = a + str.charAt ( i ) ; } if ( str.equals ( a + a ) ) cout ( \"Yes\" ) ; else cout ( \"No\" ) ; } } ;\n"
    },
    {
        "filename": "codeforces_387_B",
        "Python": "def main ( ) :\n    n , m = [ int ( i ) for i in input ( ).split ( ) ]\n    round_complexity = [ int ( i ) for i in input ( ).split ( ) ]\n    george_complexity = [ int ( i ) for i in input ( ).split ( ) ]\n    i = j = 0\n    while ( i < n and j < m ) :\n        i += 1 * ( round_complexity [ i ] <= george_complexity [ j ] ) ;\n        j += 1\n    print ( n - i )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.Scanner ; public class codeforces_387_B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System.in ) ; int n = input.nextInt ( ) ; int m = input.nextInt ( ) ; ArrayList < Integer > req = new ArrayList ( ) ; ArrayList < Integer > pre = new ArrayList ( ) ; for ( int i = 0 ; i < n ; i ++ ) { req.add ( input.nextInt ( ) ) ; } for ( int i = 0 ; i < m ; i ++ ) { pre.add ( input.nextInt ( ) ) ; } int i = n - 1 , j = m - 1 ; int ans = 0 ; while ( i >= 0 && j >= 0 ) { if ( req.get ( i ) > pre.get ( j ) ) { ans ++ ; } else { j -- ; } i -- ; } System.out.print ( ans + i + 1 ) ; } }\n"
    },
    {
        "filename": "codeforces_379_A",
        "Python": "import re\ncandeleIntere , b = map ( int , input ( ).split ( ) )\ns = 0\nrestoSciolte = 0\nwhile candeleIntere > 0 or restoSciolte >= b :\n    candeleIntere += restoSciolte // b\n    restoSciolte %= b\n    s += candeleIntere\n    restoSciolte += candeleIntere % b\n    candeleIntere //= b\nprint ( s )\n\n",
        "Java": "import java.util.* ; public class codeforces_379_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int a = scan.nextInt ( ) ; int b = scan.nextInt ( ) ; int res = a ; while ( a >= b ) { res += ( a / b ) ; a = ( a / b ) + ( a % b ) ; } System.out.println ( res ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC003_C",
        "Python": "N = int ( input ( ) )\nA = [ int ( input ( ) ) * N + i for i in range ( N ) ]\nA.sort ( )\ncnt = 0\nfor i in range ( N ) :\n    d = ( A [ i ] % N ) % 2\n    if d % 2 != i % 2 :\n        cnt += 1\nprint ( cnt // 2 )\n\n",
        "Java": "import java.util.* ; public class atcoder_AGC003_C { final static int NUM = ( int ) ( 1e5 + 2 ) ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; HashMap < Integer , Integer > map = new HashMap < > ( ) ; PriorityQueue < Integer > nums = new PriorityQueue < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { int tmp = sc.nextInt ( ) ; nums.add ( tmp ) ; map.put ( tmp , i ) ; } int bin = 0 ; int diff = 0 ; while ( ! nums.isEmpty ( ) ) { int num = nums.poll ( ) ; int idx = map.get ( num ) ; if ( ( bin % 2 ) != ( idx % 2 ) ) { diff ++ ; } bin ++ ; bin %= 2 ; } int ans = ( diff / 2 ) ; System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC140_D",
        "Python": "from _collections import deque\ndef parser ( ) :\n    while 1 :\n        data = list ( input ( ).split ( ' ' ) )\n        for number in data :\n            if len ( number ) > 0 :\n                yield ( number )\ninput_parser = parser ( )\ndef gw ( ) :\n    global input_parser\n    return next ( input_parser )\ndef gi ( ) :\n    data = gw ( )\n    return int ( data )\nMOD = int ( 1e9 + 7 )\nimport numpy\nimport scipy\nfrom collections import deque\nN = gi ( )\nK = gi ( )\nS = gw ( )\nseg_cnt = 0\nfor i in range ( 0 , N - 1 ) :\n    if S [ i ] != S [ i + 1 ] :\n        seg_cnt += 1\ncur_happy = N - 1 - seg_cnt\nif 2 * K >= seg_cnt :\n    ans = N - 1\nelse :\n    ans = cur_happy + 2 * K\nprint ( ans )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC140_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = Integer.parseInt ( sc.next ( ) ) ; int K = Integer.parseInt ( sc.next ( ) ) ; String S = sc.next ( ) ; char [ ] c1 = S.toCharArray ( ) ; char [ ] c3 = S.toCharArray ( ) ; boolean flag = false ; int count = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( flag && c1 [ i ] == 'R' ) { flag = false ; count ++ ; } if ( count == K ) { break ; } if ( c1 [ i ] == 'L' ) { flag = true ; c1 [ i ] = 'R' ; } } flag = false ; count = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( flag && c3 [ i ] == 'L' ) { flag = false ; count ++ ; } if ( count == K ) { break ; } if ( c3 [ i ] == 'R' ) { flag = true ; c3 [ i ] = 'L' ; } } String S1 = new String ( c1 ) ; String S3 = new String ( c3 ) ; count = 1 ; int sum1 = 0 ; char bef = S1.charAt ( 0 ) ; for ( int i = 1 ; i < N ; i ++ ) { if ( S1.charAt ( i ) == bef ) { count ++ ; if ( i == N - 1 ) { sum1 += count - 1 ; } } else { bef = S1.charAt ( i ) ; sum1 += count - 1 ; count = 1 ; } } count = 1 ; int sum3 = 0 ; bef = S3.charAt ( 0 ) ; for ( int i = 1 ; i < N ; i ++ ) { if ( S3.charAt ( i ) == bef ) { count ++ ; if ( i == N - 1 ) { sum3 += count - 1 ; } } else { bef = S3.charAt ( i ) ; sum3 += count - 1 ; count = 1 ; } } System.out.println ( Math.max ( sum1 , sum3 ) ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC120_C",
        "Python": "from collections import deque\nfrom collections import Counter\nfrom itertools import product , permutations , combinations\nfrom operator import itemgetter\nfrom heapq import heappop , heappush\nfrom bisect import bisect_left , bisect_right , bisect\nfrom fractions import gcd\nfrom math import ceil , floor , sqrt , cos , sin , pi , factorial\nimport sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit ( 10 ** 8 )\nINF = float ( 'inf' )\nMOD = 10 ** 9 + 7\ndef main ( ) :\n    s = input ( )\n    if len ( set ( s ) ) == 1 :\n        print ( 0 )\n        sys.exit ( )\n    a = Counter ( s )\n    ans = min ( a.values ( ) ) * 2\n    print ( ans )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.Vector ; import java.util.StringTokenizer ; import java.io.IOException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.util.Stack ; import java.io.InputStream ; public class atcoder_ABC120_C { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskB solver = new TaskB ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class TaskB { public void solve ( int testNumber , InputReader in , PrintWriter out ) { String x = in.next ( ) ; Stack < Character > s = new Stack < > ( ) ; int c = 0 ; for ( int i = 0 ; i < x.length ( ) ; i ++ ) { s.push ( x.charAt ( i ) ) ; while ( s.size ( ) > 1 ) { Character p = s.pop ( ) ; Character q = s.pop ( ) ; if ( ( p == '1' && q == '0' ) || ( p == '0' && q == '1' ) ) { c ++ ; continue ; } else { s.push ( q ) ; s.push ( p ) ; break ; } } } out.println ( c * 2 ) ; } } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } } }\n"
    },
    {
        "filename": "atcoder_AGC010_B",
        "Python": "n , a = int ( input ( ) ) , list ( map ( int , input ( ).split ( ) ) )\nif sum ( a ) % ( n * ( n + 1 ) / 2 ) :\n    print ( \"NO\" )\nelse :\n    k = sum ( a ) / ( n * ( n + 1 ) / 2 )\n    a += [ a [ 0 ] ]\n    if sum ( [ ( k - i + j ) % n for i , j in zip ( a [ 1 : ] , a ) ] ) or sum ( [ ( k - i + j ) / n >= 0 for i , j in zip ( a [ 1 : ] , a ) ] ) != n :\n        print ( \"NO\" )\n    else :\n        print ( \"YES\" )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_AGC010_B { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int N = scanner.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) A [ i ] = scanner.nextInt ( ) ; if ( possible ( N , A ) ) { System.out.println ( \"YES\" ) ; } else { System.out.println ( \"NO\" ) ; } } private static boolean possible ( int N , int [ ] A ) { long sum = 0 ; for ( int i = 0 ; i < N ; i ++ ) sum += A [ i ] ; long NS = ( long ) N * ( N + 1 ) / 2 ; if ( sum % NS != 0 ) return false ; long K = sum / NS ; for ( int i = 0 ; i < N ; i ++ ) { int j = i == 0 ? N - 1 : i - 1 ; long d = K - ( A [ i ] - A [ j ] ) ; if ( d < 0 || d % N != 0 ) return false ; } return true ; } }\n"
    },
    {
        "filename": "codeforces_351_A",
        "Python": "n = int ( input ( ) )\narr = list ( map ( float , input ( ).split ( ) ) )\narr = sorted ( [ x - int ( x ) for x in arr if x - int ( x ) != 0 ] )\no = 2 * n - len ( arr )\narr_sum = sum ( arr )\nres = int ( 2e9 )\nfor i in range ( n + 1 ) :\n    if i + o >= n :\n        res = min ( res , abs ( i - arr_sum ) )\nprint ( \"%.3f\" % res )\n\n",
        "Java": "import java.io.* ; import java.util.* ; final public class codeforces_351_A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; StringBuilder sb = new StringBuilder ( ) ; int n = Integer.parseInt ( br.readLine ( ) ) ; StringTokenizer st = new StringTokenizer ( br.readLine ( ) ) ; Double [ ] arr = new Double [ 2 * n ] ; int non_int = 0 ; double sum_before = 0 , sum = 0 ; for ( int i = 0 ; i < 2 * n ; i ++ ) { double num = Double.parseDouble ( st.nextToken ( ) ) ; sum_before += num ; if ( num != Math.floor ( num ) ) non_int ++ ; sum += Math.floor ( num ) ; arr [ i ] = num ; } double max_sum = Math.min ( n , non_int ) + sum ; double min_sum = Math.max ( 0 , non_int - n ) + sum ; double ans ; if ( min_sum > sum_before ) ans = ( min_sum - sum_before ) ; else if ( max_sum < sum_before ) ans = ( sum_before - max_sum ) ; else { double x = sum_before - Math.floor ( sum_before ) ; ans = Math.min ( 1 - x , x ) ; } System.out.printf ( \"%.3f\" , ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ARC086_B",
        "Python": "import sys\nimport math\nfrom collections import defaultdict\nsys.setrecursionlimit ( 10 ** 7 )\ndef input ( ) :\n    return sys.stdin.readline ( ) [ : - 1 ]\nmod = 10 ** 9 + 7\ndef I ( ) : return int ( input ( ) )\ndef II ( ) : return map ( int , input ( ).split ( ) )\ndef III ( ) : return list ( map ( int , input ( ).split ( ) ) )\ndef Line ( N , num ) :\n    if N <= 0 :\n        return [ [ ] ] * num\n    elif num == 1 :\n        return [ I ( ) for _ in range ( N ) ]\n    else :\n        read_all = [ tuple ( II ( ) ) for _ in range ( N ) ]\n        return map ( list , zip ( * read_all ) )\ndef my_sign ( x ) :\n    return ( x > 0 ) - ( x < 0 )\nN = I ( )\na = III ( )\nmax_val = 0\nmax_sign = 0\nmax_index = - 1\nfor i , a0 in enumerate ( a ) :\n    if abs ( a0 ) > max_val :\n        max_val = abs ( a0 )\n        max_sign = my_sign ( a0 )\n        max_index = i\nif max_sign == 0 :\n    print ( 0 )\nelif max_sign == 1 :\n    print ( 2 * N - 1 )\n    for i in range ( N ) :\n        print ( max_index + 1 , i + 1 )\n    for i in range ( N - 1 ) :\n        print ( i + 1 , i + 2 )\nelse :\n    print ( 2 * N - 1 )\n    for i in range ( N ) :\n        print ( max_index + 1 , i + 1 )\n    for i in range ( 1 , N ) [ : : - 1 ] :\n        print ( i + 1 , i )\n\n",
        "Java": "import java.util.* ; public class atcoder_ARC086_B { public static void main ( String [ ] $ ) { Scanner s = new Scanner ( System.in ) ; int n = s.nextInt ( ) ; int [ ] a = new int [ n ] ; Arrays.setAll ( a , i -> s.nextInt ( ) ) ; ArrayList < String > r = new ArrayList < > ( ) ; int m = 0 ; for ( int i = 1 ; i < n ; ++ i ) if ( Math.abs ( a [ m ] ) < Math.abs ( a [ i ] ) ) m = i ; for ( int i = 0 ; i < n ; ++ i ) if ( a [ m ] >= 0 ^ a [ i ] >= 0 ) r.add ( m + 1 + \" \" + ( i + 1 ) ) ; if ( a [ m ] >= 0 ) { for ( int i = 1 ; i < n ; ++ i ) r.add ( i + \" \" + ( i + 1 ) ) ; } else { for ( int i = n ; i > 1 ; -- i ) r.add ( i + \" \" + ( i - 1 ) ) ; } System.out.println ( r.size ( ) ) ; r.forEach ( System.out :: println ) ; } }\n"
    },
    {
        "filename": "codeforces_621_A",
        "Python": "n = int ( input ( ) )\nlst = list ( map ( int , input ( ).split ( ) ) )\nlst.sort ( )\nlst.reverse ( )\nod = 0\nfor i in lst :\n    if ( i & 1 ) :\n        od += 1\nsum = 0\nok = 0\nfor i in range ( n ) :\n    if ( lst [ i ] % 2 == 0 ) :\n        sum += lst [ i ]\n    else :\n        if ( ok or od > 1 ) :\n            sum += lst [ i ]\n            od -= 1\n            ok = not ok\nprint ( sum )\n\n",
        "Java": "import java.util.* ; public class codeforces_621_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; List < Long > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) list.add ( sc.nextLong ( ) ) ; List < Long > odd = new ArrayList < > ( ) ; long sum = 0 ; for ( long i : list ) { if ( i % 2 == 0 ) sum += i ; else odd.add ( i ) ; } Collections.sort ( odd ) ; for ( long i : odd ) sum += i ; if ( odd.size ( ) % 2 != 0 ) sum -= odd.get ( 0 ) ; System.out.println ( sum ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC171_B",
        "Python": "n , k = map ( int , input ( ).split ( ) )\nprint ( sum ( sorted ( list ( map ( int , input ( ).split ( ) ) ) ) [ : k ] ) )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStream ; import java.io.InputStreamReader ; import java.io.OutputStream ; import java.io.PrintWriter ; import java.util.Arrays ; import java.util.StringTokenizer ; public class atcoder_ABC171_B { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; Solution sol = new Solution ( ) ; sol.solve ( in , out ) ; out.close ( ) ; } private static class Solution { private void solve ( InputReader in , PrintWriter out ) { int n = in.ni ( ) , k = in.ni ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; ++ i ) a [ i ] = in.ni ( ) ; Arrays.parallelSort ( a ) ; int ans = 0 ; for ( int i = 0 ; i < k ; ++ i ) ans += a [ i ] ; out.println ( ans ) ; } } private static class InputReader { private BufferedReader reader ; private StringTokenizer tokenizer ; private InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } private String n ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } private int ni ( ) { return Integer.parseInt ( n ( ) ) ; } } }\n"
    },
    {
        "filename": "codeforces_400_A",
        "Python": "import collections\nimport heapq\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO , IOBase\nimport os\ndef value ( ) : return tuple ( map ( int , input ( ).split ( ) ) )\ndef values ( ) : return tuple ( map ( int , sys.stdin.readline ( ).split ( ) ) )\ndef inlst ( ) : return [ int ( i ) for i in input ( ).split ( ) ]\ndef inlsts ( ) : return [ int ( i ) for i in sys.stdin.readline ( ).split ( ) ]\ndef inp ( ) : return int ( input ( ) )\ndef inps ( ) : return int ( sys.stdin.readline ( ) )\ndef instr ( ) : return input ( )\ndef stlst ( ) : return [ i for i in input ( ).split ( ) ]\ndef help ( a , b , l ) :\n    tot = [ ]\n    for i in range ( b ) :\n        tot.append ( l [ i * a : i * a + a ] )\n    for i in zip ( * tot ) :\n        if sum ( ( i ) ) == b : return True\n    return False\ndef solve ( ) :\n    tot = [ ]\n    x = instr ( )\n    s = [ ]\n    for i in x :\n        if i == 'O' : s.append ( 0 )\n        else : s.append ( 1 )\n    for i in range ( 1 , 13 ) :\n        if 12 % i == 0 :\n            if help ( i , 12 // i , s ) : tot.append ( ( 12 // i , i ) )\n    print ( len ( tot ) , end = ' ' )\n    for a , b in sorted ( tot ) :\n        print ( f'{a}x{b}' , end = ' ' )\n    print ( )\nif __name__ == \"__main__\" :\n    for i in range ( inp ( ) ) :\n        solve ( )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.util.Arrays ; public class codeforces_400_A { public static boolean isSolution ( int columnsCount , String x ) { boolean allXs [ ] = new boolean [ columnsCount ] ; Arrays.fill ( allXs , true ) ; for ( int i = 0 ; i < 12 ; i ++ ) { if ( x.charAt ( i ) != 'X' ) allXs [ i % columnsCount ] = false ; } for ( int i = 0 ; i < columnsCount ; i ++ ) if ( allXs [ i ] ) return true ; return false ; } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int t = Integer.parseInt ( br.readLine ( ) ) ; for ( int i = 0 ; i < t ; i ++ ) { int possibleSolutions = 0 ; StringBuilder solutions = new StringBuilder ( ) ; String s = br.readLine ( ) ; if ( isSolution ( 12 , s ) ) { solutions.append ( \" 1x12\" ) ; possibleSolutions ++ ; } if ( isSolution ( 6 , s ) ) { solutions.append ( \" 2x6\" ) ; possibleSolutions ++ ; } if ( isSolution ( 4 , s ) ) { solutions.append ( \" 3x4\" ) ; possibleSolutions ++ ; } if ( isSolution ( 3 , s ) ) { solutions.append ( \" 4x3\" ) ; possibleSolutions ++ ; } if ( isSolution ( 2 , s ) ) { solutions.append ( \" 6x2\" ) ; possibleSolutions ++ ; } if ( isSolution ( 1 , s ) ) { solutions.append ( \" 12x1\" ) ; possibleSolutions ++ ; } pw.print ( possibleSolutions ++ ) ; pw.println ( solutions ) ; } pw.flush ( ) ; pw.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_579_A",
        "Python": "import math\nn = int ( input ( ) )\nx = 1\nwhile math.log2 ( n ) % 1 :\n    x += 1\n    n -= 2 ** ( int ( math.log2 ( n ) ) )\nprint ( x )\n\n",
        "Java": "import java.util.* ; import java.util.ArrayList ; public class codeforces_579_A { public static void main ( String [ ] args ) { Scanner str = new Scanner ( System.in ) ; int n = str.nextInt ( ) ; String s = \"\" ; while ( n > 0 ) { int x = n % 2 ; n /= 2 ; s += x + \"\" ; } int ans = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) { ans ++ ; } } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "codeforces_242_A",
        "Python": "x , y , a , b = map ( int , input ( ).split ( ) )\ngames = [ ]\nfor i in range ( a , x + 1 ) :\n    if ( i <= b ) : continue\n    else :\n        for j in range ( b , y + 1 ) :\n            if i > j :\n                games.append ( ( i , j ) )\nprint ( len ( games ) )\nfor i in games :\n    print ( f\"{i[0]} {i[1]}\" )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_242_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int x , y , a , b ; x = in.nextInt ( ) ; y = in.nextInt ( ) ; a = in.nextInt ( ) ; b = in.nextInt ( ) ; int count = 0 ; for ( int i = a ; i <= x ; i ++ ) { for ( int j = b ; j <= y ; ++ j ) { if ( i <= j ) continue ; count ++ ; } } System.out.println ( count ) ; for ( int i = a ; i <= x ; i ++ ) { for ( int j = b ; j <= y ; ++ j ) { if ( i <= j ) continue ; System.out.println ( i + \" \" + j ) ; } } in.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_11_A",
        "Python": "n , d = map ( int , input ( ).split ( ) )\nx = [ ]\nm = 0\nq = 0\nx = input ( ).split ( )\nfor i in range ( len ( x ) ) :\n    x [ i ] = int ( x [ i ] )\nfor a in range ( len ( x ) - 1 ) :\n    if x [ a ] >= x [ a + 1 ] :\n        q = int ( ( x [ a ] - x [ a + 1 ] ) / d + 1 )\n        m = m + q\n        x [ a + 1 ] = x [ a + 1 ] + q * d\nprint ( m )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_11_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int d = in.nextInt ( ) ; int [ ] nums = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { nums [ i ] = in.nextInt ( ) ; } int result = 0 ; int a = 0 ; for ( int i = 1 ; i < n ; i ++ ) { a = ( nums [ i - 1 ] - nums [ i ] ) ; if ( a >= 0 ) { result += a / d + 1 ; nums [ i ] += ( a / d + 1 ) * d ; } } System.out.println ( result ) ; } }\n"
    },
    {
        "filename": "codeforces_474_B",
        "Python": "L = [ ]\ninput ( )\nr = 1\nfor k in input ( ).split ( ) :\n    L += [ r ] * int ( k )\n    r += 1\ninput ( )\nfor j in input ( ).split ( ) :\n    print ( L [ int ( j ) - 1 ] )\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class codeforces_474_B { public static void main ( String args [ ] ) throws IOException { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int arr [ ] = new int [ n ] ; arr [ 0 ] = sc.nextInt ( ) ; for ( int i = 1 ; i < n ; i ++ ) { int x = sc.nextInt ( ) ; arr [ i ] = x + arr [ i - 1 ] ; } int m = sc.nextInt ( ) ; int q [ ] = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) q [ i ] = sc.nextInt ( ) ; for ( int k = 0 ; k < m ; k ++ ) System.out.println ( fun ( arr , q [ k ] , n , m ) + 1 ) ; } static int fun ( int arr [ ] , int q , int n , int m ) { int res = 0 ; int i = 0 , j = n ; while ( i <= j ) { int md = i + ( j - i ) / 2 ; if ( arr [ md ] == q ) return md ; else if ( arr [ md ] > q ) { res = md ; j = md - 1 ; } else i = md + 1 ; } return res ; } }\n"
    },
    {
        "filename": "codeforces_59_A",
        "Python": "txt = input ( )\ncu = 0\ncl = 0\nfor z in txt :\n    if z.islower ( ) :\n        cl = cl + 1\n    else :\n        cu = cu + 1\nif cu > cl :\n    out = txt.upper ( )\nelse :\n    out = txt.lower ( )\nprint ( out )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_59_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word = in.next ( ) ; int uppercase = 0 ; int lowercase = 0 ; for ( int i = 0 ; i < word.length ( ) ; i ++ ) { char ch = word.charAt ( i ) ; if ( Character.isUpperCase ( ch ) ) { uppercase ++ ; } else { lowercase ++ ; } } if ( uppercase > lowercase ) System.out.println ( word.toUpperCase ( ) ) ; else if ( lowercase > uppercase ) System.out.println ( word.toLowerCase ( ) ) ; else System.out.println ( word.toLowerCase ( ) ) ; } }\n"
    },
    {
        "filename": "codeforces_32_B",
        "Python": "s = input ( )\nresult = \"\"\ni = 0\nwhile i < len ( s ) :\n    if s [ i ] == \".\" :\n        result += '0'\n    else :\n        i += 1\n        if s [ i ] == \".\" :\n            result += '1'\n        else :\n            result += '2'\n    i += 1\nprint ( result )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_32_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; char [ ] n = in.next ( ).toCharArray ( ) ; boolean s = false ; for ( int i = 0 ; i < n.length ; i ++ ) { if ( n [ i ] == '.' ) { if ( s ) { System.out.print ( 1 ) ; s = false ; } else { System.out.print ( 0 ) ; } } else { if ( s ) { System.out.print ( 2 ) ; s = false ; } else { s = true ; } } } in.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC123_D",
        "Python": "x , y , z , k = [ int ( _ ) for _ in input ( ).split ( ) ]\na = [ int ( _ ) for _ in input ( ).split ( ) ]\nb = [ int ( _ ) for _ in input ( ).split ( ) ]\nc = [ int ( _ ) for _ in input ( ).split ( ) ]\nab = [ ]\nfor i in range ( x ) :\n    for j in range ( y ) :\n        ab.append ( a [ i ] + b [ j ] )\nab.sort ( reverse = True )\nabc = [ ]\nfor i in range ( min ( k , x * y ) ) :\n    for j in range ( z ) :\n        abc.append ( ab [ i ] + c [ j ] )\nabc.sort ( reverse = True )\nfor i in range ( k ) :\n    print ( abc [ i ] )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC123_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x [ ] = new int [ 3 ] ; int max = 0 ; for ( int i = 0 ; i < 3 ; ++ i ) { x [ i ] = sc.nextInt ( ) ; max = Math.max ( max , x [ i ] ) ; } int k = sc.nextInt ( ) ; List < Long > a [ ] = new List [ 3 ] ; for ( int i = 0 ; i < 3 ; ++ i ) a [ i ] = new ArrayList < Long > ( ) ; for ( int i = 0 ; i < 3 ; ++ i ) { for ( int j = 0 ; j < x [ i ] ; ++ j ) a [ i ].add ( sc.nextLong ( ) ) ; Collections.sort ( a [ i ] ) ; } sc.close ( ) ; List < Long > ans = new ArrayList < Long > ( ) ; for ( int i = 0 ; i < x [ 0 ] ; ++ i ) { for ( int j = 0 ; j < x [ 1 ] ; ++ j ) { for ( int m = 0 ; m < x [ 2 ] ; ++ m ) { if ( ( i + 1 ) * ( j + 1 ) * ( m + 1 ) <= k ) { long tmp = a [ 0 ].get ( x [ 0 ] - i - 1 ) + a [ 1 ].get ( x [ 1 ] - j - 1 ) + a [ 2 ].get ( x [ 2 ] - m - 1 ) ; ans.add ( tmp ) ; } } } } Collections.sort ( ans ) ; int n = ans.size ( ) ; for ( int i = 0 ; i < k ; ++ i ) System.out.println ( ans.get ( n - i - 1 ) ) ; } }\n"
    },
    {
        "filename": "codeforces_296_A",
        "Python": "n = int ( input ( ) )\nm = input ( ).split ( )\npossible = True\nfor i in set ( m ) :\n    if m.count ( i ) >= n / 2 + 1 :\n        possible = False\n        break\nprint ( 'YES' if possible else 'NO' )\n\n",
        "Java": "import java.io.* ; import java.util.StringTokenizer ; public class codeforces_296_A { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; Task solver = new Task ( ) ; solver.solve ( in , out ) ; out.close ( ) ; } static class Task { public void solve ( InputReader in , PrintWriter out ) { int n = in.nextInt ( ) ; int [ ] array = new int [ 1001 ] ; for ( int i = 0 ; i < n ; i ++ ) { int index = in.nextInt ( ) ; array [ index ] ++ ; } int countMax = - 1 ; for ( int i = 1 ; i < array.length ; i ++ ) { if ( countMax < array [ i ] ) countMax = array [ i ] ; } if ( n % 2 == 0 ) { if ( countMax <= n / 2 ) { out.println ( \"YES\" ) ; } else { out.println ( \"NO\" ) ; } } else { if ( countMax <= n / 2 + 1 ) { out.println ( \"YES\" ) ; } else { out.println ( \"NO\" ) ; } } } } static class InputReader { BufferedReader reader ; StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; } String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreElements ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = reader.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }\n"
    },
    {
        "filename": "atcoder_ABC137_D",
        "Python": "import heapq\nn , m = map ( int , input ( ).split ( ) )\nx = [ ]\ny = [ ]\nfor i in range ( n ) :\n    day , salary = map ( int , input ( ).split ( ) )\n    heapq.heappush ( x , ( - day , - salary ) )\nwhile x :\n    d , s = heapq.heappop ( x )\n    r = m - len ( y )\n    if r >= - d :\n        heapq.heappush ( y , - s )\n    else :\n        heapq.heappush ( y , - s )\n        heapq.heappop ( y )\nprint ( sum ( y ) )\n\n",
        "Java": "import java . util . Collections ; import java . util . PriorityQueue ; import java . util . Queue ; import java . util . Scanner ; class Job implements Comparable < Job > { int a ; int b ; Job ( int a , int b ) { this . a = a ; this . b = b ; } @ Override public int compareTo ( Job otherJob ) { if ( otherJob . a == this . a ) return this . b - otherJob . b ; else return this . a - otherJob . a ; } } public class atcoder_ABC137_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String [ ] line = sc . nextLine ( ) . split ( \" \\u2581 \" ) ; int N = Integer . parseInt ( line [ 0 ] ) ; int M = Integer . parseInt ( line [ 1 ] ) ; Queue < Job > q = new PriorityQueue < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { line = sc . nextLine ( ) . split ( \" \\u2581 \" ) ; q . add ( new Job ( Integer . parseInt ( line [ 0 ] ) , Integer . parseInt ( line [ 1 ] ) ) ) ; } int cnt = 0 ; Queue < Integer > jobQ = new PriorityQueue < > ( Collections . reverseOrder ( ) ) ; for ( int i = 1 ; i <= M ; i ++ ) { while ( ! q . isEmpty ( ) ) { Job job = q . peek ( ) ; if ( job . a <= i ) { jobQ . add ( q . poll ( ) . b ) ; } else break ; } if ( ! jobQ . isEmpty ( ) ) cnt += jobQ . poll ( ) ; } System . out . println ( cnt ) ; } }\n"
    },
    {
        "filename": "codeforces_25_A",
        "Python": "n = int ( input ( ) )\nlist = [ int ( x ) % 2 for x in input ( ).split ( ) ]\nif sum ( list ) == 1 :\n    print ( list.index ( 1 ) + 1 )\nelse :\n    print ( list.index ( 0 ) + 1 )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_25_A { public static void main ( String [ ] args ) { Scanner ob = new Scanner ( System.in ) ; int n = ob.nextInt ( ) ; int array [ ] = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { array [ i ] = ob.nextInt ( ) ; } int odd = 0 , even = 0 , odd_ind = 0 , even_ind = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( array [ i ] % 2 == 0 ) { even ++ ; even_ind = i ; } else { odd ++ ; odd_ind = i ; } } if ( odd > even ) System.out.println ( even_ind ) ; else System.out.println ( odd_ind ) ; } }\n"
    },
    {
        "filename": "codeforces_96_B",
        "Python": "l = [ ]\nlimit = 10000000000\ndef gen ( number , four , seven ) :\n    if ( number > limit ) :\n        return\n    if ( number > 0 and four == seven ) :\n        l.append ( number )\n    gen ( number * 10 + 4 , four + 1 , seven )\n    gen ( number * 10 + 7 , four , seven + 1 )\ndef main ( ) :\n    gen ( 0 , 0 , 0 )\n    l.sort ( )\n    n = int ( input ( ) )\n    ans = 0\n    for val in l :\n        if ( val >= n ) :\n            ans = val\n            break\n    print ( ans )\nmain ( )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_96_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; long number = in.nextLong ( ) ; long ans = - 1 , value = 0 ; int mask = 2 ; while ( value < number ) { String s = Integer.toBinaryString ( mask ++ ).substring ( 1 ) ; int zeros = 0 ; for ( char c : s.toCharArray ( ) ) if ( c == '0' ) zeros ++ ; if ( zeros != s.length ( ) - zeros ) continue ; s = s.replace ( '0' , '4' ) ; s = s.replace ( '1' , '7' ) ; value = Long.parseLong ( s ) ; } System.out.println ( value ) ; } }\n"
    },
    {
        "filename": "codeforces_333_B",
        "Python": "I = input\nn , m = map ( int , I ( ).split ( ) )\nb = [ 1 ] * n * 2\nb [ 0 ] = b [ n - 1 ] = b [ n ] = b [ 2 * n - 1 ] = 0\nfor i in range ( m ) :\n    r , c = map ( int , I ( ).split ( ) )\n    b [ r - 1 ] = b [ n + c - 1 ] = 0\nif n % 2 and b [ n // 2 ] and b [ n + n // 2 ] : b [ n // 2 ] = 0\nprint ( sum ( b ) )\n\n",
        "Java": "import java.util.* ; import java.io.* ; import static java.lang.Math.* ; public class codeforces_333_B { public static FastReader in = new FastReader ( ) ; public static PrintWriter out = new PrintWriter ( System.out ) ; public static void main ( String [ ] args ) { int n = in.nextInt ( ) , m = in.nextInt ( ) ; Set < Integer > bannedRows , bannedCols ; bannedRows = new HashSet < > ( ) ; bannedCols = new HashSet < > ( ) ; for ( int i = 0 ; i < m ; i ++ ) { int r = in.nextInt ( ) ; if ( r > 1 && r < n ) bannedRows.add ( r ) ; int c = in.nextInt ( ) ; if ( c > 1 && c < n ) bannedCols.add ( c ) ; } int answer = ( n - 2 ) * 2 ; answer -= bannedRows.size ( ) ; answer -= bannedCols.size ( ) ; if ( n % 2 != 0 ) { int mid = ( n + 1 ) / 2 ; if ( ! bannedRows.contains ( mid ) && ! bannedCols.contains ( mid ) ) { answer -- ; } } out.println ( answer ) ; out.close ( ) ; } public static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }\n"
    },
    {
        "filename": "codeforces_651_A",
        "Python": "x , y = map ( int , input ( ).split ( ) )\nprint ( max ( x + y - 3 + ( ( y - x ) % 3 > 0 ) , 0 ) )\nnum_inp = lambda : int ( input ( ) )\narr_inp = lambda : list ( map ( int , input ( ).split ( ) ) )\nsp_inp = lambda : map ( int , input ( ).split ( ) )\nstr_inp = lambda : input ( )\n\n",
        "Java": "import java.io.* ; import java.math.BigInteger ; import java.util.* ; public class codeforces_651_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int a = in.nextInt ( ) , b = in.nextInt ( ) ; int c = 0 ; if ( a == 1 && b == 1 ) { pw.println ( 0 ) ; } else { while ( a >= 1 || b >= 1 ) { if ( a >= b ) { b ++ ; a -= 2 ; } else { a ++ ; b -= 2 ; } if ( a <= 0 || b <= 0 ) { c ++ ; break ; } c ++ ; } pw.println ( c ) ; } pw.close ( ) ; } static void swap ( int a , int b ) { int t = b ; b = a ; a = t ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }\n"
    },
    {
        "filename": "codeforces_607_A",
        "Python": "n = int ( input ( ) )\nl = [ 0 for _ in range ( 1000010 ) ]\ndp = [ 0 for _ in range ( 1000010 ) ]\nfor i in range ( n ) :\n    a , b = map ( int , input ( ).split ( ) )\n    l [ a ] = b\nif l [ 0 ] > 0 :\n    dp [ 0 ] = 1\nmx = 0\nfor i in range ( 1 , 1000010 ) :\n    if ( l [ i ] == 0 ) :\n        dp [ i ] = dp [ i - 1 ]\n    else :\n        if ( l [ i ] >= i ) :\n            dp [ i ] = 1 ;\n        else :\n            dp [ i ] = dp [ i - l [ i ] - 1 ] + 1 ;\n    if ( dp [ i ] > mx ) :\n        mx = dp [ i ]\nprint ( n - mx )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_607_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int max = 0 ; int n = sc.nextInt ( ) ; int [ ] beacon = new int [ 1000001 ] ; int [ ] dp = new int [ 1000001 ] ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; beacon [ a ] = sc.nextInt ( ) ; } if ( beacon [ 0 ] != 0 ) dp [ 0 ] = 1 ; for ( int i = 1 ; i < 1000001 ; i ++ ) { if ( beacon [ i ] != 0 && beacon [ i ] < i ) { dp [ i ] = dp [ i - beacon [ i ] - 1 ] + 1 ; } else if ( beacon [ i ] != 0 ) { dp [ i ] = 1 ; } else { dp [ i ] = dp [ i - 1 ] ; } max = Math.max ( max , dp [ i ] ) ; } System.out.print ( n - max ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC106_C",
        "Python": "import math , string , itertools , fractions , heapq , collections , re , array , bisect , sys , random , time , copy , functools\nsys.setrecursionlimit ( 10 ** 7 )\ninf = 10 ** 20\neps = 1.0 / 10 ** 10\nmod = 10 ** 9 + 7\ndd = [ ( - 1 , 0 ) , ( 0 , 1 ) , ( 1 , 0 ) , ( 0 , - 1 ) ]\nddn = [ ( - 1 , 0 ) , ( - 1 , 1 ) , ( 0 , 1 ) , ( 1 , 1 ) , ( 1 , 0 ) , ( 1 , - 1 ) , ( 0 , - 1 ) , ( - 1 , - 1 ) ]\ndef LI ( ) : return [ int ( x ) for x in sys.stdin.readline ( ).split ( ) ]\ndef LI_ ( ) : return [ int ( x ) - 1 for x in sys.stdin.readline ( ).split ( ) ]\ndef LF ( ) : return [ float ( x ) for x in sys.stdin.readline ( ).split ( ) ]\ndef LS ( ) : return sys.stdin.readline ( ).split ( )\ndef I ( ) : return int ( sys.stdin.readline ( ) )\ndef F ( ) : return float ( sys.stdin.readline ( ) )\ndef S ( ) : return input ( )\ndef pf ( s ) : return print ( s , flush = True )\ndef main ( ) :\n    s = S ( )\n    k = I ( )\n    l = 0\n    for c in s :\n        if c != '1' :\n            break\n        l += 1\n    if l >= k :\n        return 1\n    return s [ l ]\nprint ( main ( ) )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC106_C { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System.in ) ; String str = sc.next ( ) ; char [ ] c = str.toCharArray ( ) ; long k = sc.nextLong ( ) ; int n = str.length ( ) ; for ( int i = 0 ; i < k ; i ++ ) { if ( c [ i ] == '1' ) { if ( i == k - 1 ) { System.out.println ( 1 ) ; return ; } } else { System.out.println ( c [ i ] ) ; return ; } } } }\n"
    },
    {
        "filename": "codeforces_672_A",
        "Python": "li = [ ]\nind = 0\nfor i in range ( 1 , 371 ) :\n    temp = [ ]\n    p , q = i , i\n    count = 0\n    while p != 0 :\n        p //= 10\n        count += 1\n    if count == 1 :\n        li.append ( i )\n    if count == 2 :\n        temp = [ ]\n        while q != 0 :\n            x = q % 10\n            q //= 10\n            temp.append ( x )\n        li = li + temp [ : : - 1 ]\n    if count == 3 :\n        temp = [ ]\n        while q != 0 :\n            x = q % 10\n            q //= 10\n            temp.append ( x )\n        li = li + temp [ : : - 1 ]\nli.pop ( )\nli.pop ( )\nn = int ( input ( '' ) )\nprint ( li [ n - 1 ] )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_672_A { static char [ ] generateString ( ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { sb.append ( i ) ; } return sb.toString ( ).toCharArray ( ) ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; System.out.println ( generateString ( ) [ n - 1 ] ) ; } }\n"
    },
    {
        "filename": "codeforces_171_A",
        "Python": "import sys\ninput = sys.stdin.readline\na , b = input ( ) [ : - 1 ].split ( )\nx = max ( len ( a ) , len ( b ) )\na = a.rjust ( x , '0' )\nb = b.ljust ( x , '0' )\ns = ''\nc = 0\nfor i in range ( x ) :\n    d = int ( b [ i ] ) + int ( a [ x - i - 1 ] ) + c\n    if d > 9 :\n        s += str ( d ) [ 1 ]\n        c = 1\n    else :\n        s += str ( d )\n        c = 0\nif c == 1 :\n    s += '1'\nprint ( int ( s [ : : - 1 ] ) )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_171_A { static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } public static void main ( String [ ] args ) { FastReader sc = new FastReader ( ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int t = reverse ( m ) ; System.out.println ( t + n ) ; } public static int reverse ( int n ) { if ( n < 10 ) return n * 10 ; int t = n , r = 0 ; while ( t > 0 ) { r = ( r * 10 ) + t % 10 ; t = t / 10 ; } return r ; } }\n"
    },
    {
        "filename": "codeforces_354_A",
        "Python": "n , L , R , QL , QR = map ( int , input ( ).split ( ) )\nW = list ( map ( int , input ( ).split ( ) ) )\nsum_el = [ 0 ]\nfor i in range ( 1 , n + 1 ) :\n    sum_el.append ( W [ i - 1 ] + sum_el [ i - 1 ] )\nanswer = QR * ( n - 1 ) + sum_el [ n ] * R\nfor i in range ( 1 , n + 1 ) :\n    energy = L * sum_el [ i ] + R * ( sum_el [ n ] - sum_el [ i ] )\n    if i > ( n - i ) :\n        energy = energy + ( i - ( n - i ) - 1 ) * QL\n    elif ( n - i ) > i :\n        energy = energy + ( ( n - i ) - i - 1 ) * QR\n    if energy < answer :\n        answer = energy\nprint ( answer )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_354_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int N = in.nextInt ( ) ; int L = in.nextInt ( ) ; int R = in.nextInt ( ) ; int QL = in.nextInt ( ) ; int QR = in.nextInt ( ) ; int [ ] W = new int [ N ] ; int [ ] sum = new int [ N + 1 ] ; for ( int n = 0 ; n < N ; n ++ ) { W [ n ] = in.nextInt ( ) ; sum [ n + 1 ] = sum [ n ] + W [ n ] ; } long min = Long.MAX_VALUE ; for ( int firstR = 0 ; firstR <= N ; firstR ++ ) { int lCount = firstR ; int rCount = N - lCount ; long cand = sum [ lCount ] * L + ( sum [ N ] - sum [ lCount ] ) * R ; int llCount = Math.max ( 0 , lCount - rCount - 1 ) ; int rrCount = Math.max ( 0 , rCount - lCount - 1 ) ; cand += llCount * QL ; cand += rrCount * QR ; min = Math.min ( cand , min ) ; } System.out.println ( min ) ; } }\n"
    },
    {
        "filename": "codeforces_49_A",
        "Python": "a = input ( )\nvo = [ 'a' , 'e' , 'i' , 'o' , 'u' , 'y' , 'A' , 'E' , 'I' , 'O' , 'U' , 'Y' ]\nfor i in range ( len ( a ) - 1 , - 1 , - 1 ) :\n    if ( a [ i ] == ' ' or a [ i ] == '?' ) :\n        continue\n    else :\n        if ( a [ i ] in vo ) :\n            print ( \"YES\" )\n        else :\n            print ( \"NO\" )\n        break\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_49_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.nextLine ( ) ; int length = s.length ( ) ; char ch = 0 ; for ( int i = length - 1 ; i >= 0 ; i -- ) { if ( s.charAt ( i ) != ' ' && s.charAt ( i ) != '?' ) { ch = s.charAt ( i ) ; break ; } } ch = Character.toLowerCase ( ch ) ; if ( ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch == 'y' ) { System.out.println ( \"YES\" ) ; } else { System.out.println ( \"NO\" ) ; } } }\n"
    },
    {
        "filename": "codeforces_189_A",
        "Python": "def cutRibbon ( ) :\n    arr = [ int ( i ) for i in input ( ).split ( ) ]\n    length = arr [ 0 ]\n    arr = sorted ( arr [ 1 : 4 ] , reverse = False )\n    if ( length % arr [ 0 ] == 0 ) :\n        print ( int ( length / arr [ 0 ] ) )\n        return\n    ans = 0\n    if ( arr [ 0 ] == arr [ 1 ] ) :\n        k = 0\n        for i in range ( int ( length / arr [ 2 ] ) + 1 ) :\n            check = length - i * arr [ 2 ]\n            if ( check >= 0 and check % arr [ 0 ] == 0 ) :\n                k = int ( check / arr [ 0 ] )\n                ans = max ( ans , k + i )\n    else :\n        k = 0\n        for i in range ( int ( length / arr [ 2 ] ) + 1 ) :\n            for j in range ( int ( length / arr [ 1 ] ) + 1 ) :\n                check = length - i * arr [ 2 ] - j * arr [ 1 ]\n                if ( check >= 0 and check % arr [ 0 ] == 0 ) :\n                    k = int ( check / arr [ 0 ] )\n                    ans = max ( ans , k + i + j )\n    print ( ans )\n    return\ncutRibbon ( )\n\n",
        "Java": "import java.util.* ; public class codeforces_189_A { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int n = scanner.nextInt ( ) ; int maxn = 4010 ; int a = scanner.nextInt ( ) ; int b = scanner.nextInt ( ) ; int c = scanner.nextInt ( ) ; int [ ] arr = { a , b , c } ; int [ ] dp = new int [ maxn ] ; for ( int i = 0 ; i < n ; i ++ ) { dp [ i ] = Integer.MIN_VALUE ; } dp [ 0 ] = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = arr [ i ] ; j < dp.length ; j ++ ) { dp [ j ] = Math.max ( dp [ j ] , dp [ j - arr [ i ] ] + 1 ) ; } } System.out.println ( dp [ n ] ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC170_A",
        "Python": "a = list ( map ( int , input ( ).split ( ) ) )\nfor e , i in enumerate ( a ) :\n    if i == 0 :\n        print ( e + 1 )\n        break\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.PrintWriter ; public class atcoder_ABC170_A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new java.io.InputStreamReader ( System.in ) ) ; PrintWriter pw = new PrintWriter ( System.out ) ; String [ ] input_array = br.readLine ( ).split ( \" \" ) ; int result = 0 ; for ( String str : input_array ) { result += 1 ; if ( \"0\".equals ( str ) ) break ; } pw.println ( result ) ; br.close ( ) ; pw.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC019_A",
        "Python": "import sys , re\nfrom collections import deque , defaultdict , Counter\nfrom math import sqrt , hypot , factorial , pi , sin , cos , radians\nif sys.version_info.minor >= 5 : from math import gcd\nelse : from fractions import gcd\nfrom heapq import heappop , heappush , heapify , heappushpop\nfrom bisect import bisect_left , bisect_right\nfrom itertools import permutations , combinations , product\nfrom operator import itemgetter , mul\nfrom copy import deepcopy\nfrom functools import reduce , partial\nfrom fractions import Fraction\nfrom string import ascii_lowercase , ascii_uppercase , digits\ndef input ( ) : return sys.stdin.readline ( ).strip ( )\ndef ceil ( a , b = 1 ) : return int ( - ( - a // b ) )\ndef round ( x ) : return int ( ( x * 2 + 1 ) // 2 )\ndef fermat ( x , y , MOD ) : return x * pow ( y , MOD - 2 , MOD ) % MOD\ndef lcm ( x , y ) : return ( x * y ) // gcd ( x , y )\ndef lcm_list ( nums ) : return reduce ( lcm , nums , initial = 1 )\ndef INT ( ) : return int ( input ( ) )\ndef MAP ( ) : return map ( int , input ( ).split ( ) )\ndef LIST ( ) : return list ( map ( int , input ( ).split ( ) ) )\nsys.setrecursionlimit ( 10 ** 9 )\nINF = float ( 'inf' )\nMOD = 10 ** 9 + 7\nq , h , s , d = MAP ( )\nn = INT ( )\nbest1L = min ( q * 4 , h * 2 , s )\nbest2L = min ( d , best1L * 2 )\nif n % 2 == 0 :\n    print ( best2L * ( n // 2 ) )\nelse :\n    print ( best2L * ( n // 2 ) + best1L )\n\n",
        "Java": "import java.util.* ; import static java.lang.System.* ; public class atcoder_AGC019_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long Q = sc.nextLong ( ) ; long H = sc.nextLong ( ) ; long S = sc.nextLong ( ) ; long D = sc.nextLong ( ) ; long N = sc.nextLong ( ) ; long onePrice = Math.min ( Math.min ( Q * 4 , H * 2 ) , S ) ; if ( ( double ) onePrice <= ( double ) D / 2 ) { out.println ( N * onePrice ) ; } else { out.println ( ( N / 2 ) * D + ( N % 2 ) * onePrice ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC150_C",
        "Python": "n = int ( input ( ) )\nimport itertools\norig = list ( itertools.permutations ( list ( range ( 1 , n + 1 ) ) ) )\np = tuple ( map ( int , input ( ).split ( ) ) )\nq = tuple ( map ( int , input ( ).split ( ) ) )\npn = orig.index ( p )\nqn = orig.index ( q )\nprint ( abs ( pn - qn ) )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.Arrays ; import java.util.List ; import java.util.Scanner ; public class atcoder_ABC150_C { public static List < String > permutation ( List < String > list , String target , String ans ) { if ( target.length ( ) <= 1 ) { list.add ( ans + target ) ; } else { for ( int i = 0 ; i < target.length ( ) ; i ++ ) { permutation ( list , target.substring ( 0 , i ) + target.substring ( i + 1 ) , ans + target.charAt ( i ) ) ; } } return list ; } public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; Integer n = Integer.parseInt ( scanner.next ( ) ) ; String [ ] [ ] line = new String [ 2 ] [ 1 ] ; for ( int i = 0 ; i < 2 ; i ++ ) { Arrays.fill ( line [ i ] , \"\" ) ; for ( int j = 0 ; j < n ; j ++ ) { line [ i ] [ 0 ] += scanner.next ( ) ; } } String number = \"\" ; for ( int i = 1 ; i <= n ; i ++ ) { number += i ; } List < String > listA = new ArrayList < > ( ) ; permutation ( listA , number , \"\" ) ; int sum = 0 ; for ( int j = 0 ; j < line.length ; j ++ ) { for ( int i = 0 ; i < listA.size ( ) ; i ++ ) { if ( listA.get ( i ).equals ( line [ j ] [ 0 ] ) ) { if ( sum == 0 ) { sum += i ; } else { sum -= i ; } } } } System.out.println ( Math.abs ( sum ) ) ; } }\n"
    },
    {
        "filename": "codeforces_268_A",
        "Python": "n = int ( input ( ) )\nq = [ ]\ncount = 0\nfor i in range ( n ) :\n    a = input ( ).split ( )\n    q.append ( a )\nfor j in q :\n    for k in q :\n        if k == j :\n            continue\n        elif j [ 0 ] == k [ len ( k ) - 1 ] :\n            count += 1\n        else :\n            continue\nprint ( count )\n\n",
        "Java": "import java.util.* ; public class codeforces_268_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.nextLine ( ) ) ; int result = 0 ; int [ ] h = new int [ n ] ; int [ ] g = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = sc.nextInt ( ) ; g [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) if ( h [ i ] == g [ j ] ) result ++ ; System.out.println ( result ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC151_A",
        "Python": "import sys\nimport math\ndebug = False\ndef log ( text ) :\n    if debug :\n        print ( text )\ndef parse_input ( lines_as_string = None ) :\n    global debug\n    lines = [ ]\n    if lines_as_string is None :\n        debug = False\n        lines.append ( input ( ) )\n    else :\n        debug = True\n        lines = [ e for e in lines_as_string.split ( \"\\n\" ) ] [ 1 : - 1 ]\n    c = [ e for e in lines [ 0 ].split ( \" \" ) ] [ 0 ]\n    return ( c , )\ndef solve ( c ) :\n    a = \"abcdefghijklmnopqrstuvwxyz\"\n    i = a.index ( c )\n    return a [ i + 1 ]\ndef main ( ) :\n    result = solve ( * parse_input ( ) )\n    if isinstance ( result , list ) :\n        for r in result :\n            print ( \"%s\" % r , sep = '' )\n    else :\n        print ( \"%s\" % result , sep = '' )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; public class atcoder_ABC151_A { public static void main ( String [ ] args ) throws IOException { BufferedReader r = new BufferedReader ( new InputStreamReader ( System.in ) , 1 ) ; String s ; String sl [ ] ; s = r.readLine ( ) ; System.out.printf ( \"%c\" , s.charAt ( 0 ) + 1 ) ; } } class RemRing { long module ; public RemRing ( long module ) { this.module = module ; } public long sum ( long a , long b ) { return ( a + b + module ) % module ; } public long sub ( long a , long b ) { return ( a - b + module ) % module ; } public long prod ( long a , long b ) { return ( a * b ) % module ; } public long div ( long a , long b ) { return ( a * inv ( b ) ) % module ; } public long inv ( long a ) { long b = this.module ; long u = 1 ; long v = 0 ; while ( b > 0 ) { long t = a / b ; a -= t * b ; u -= t * v ; long z = a ; a = b ; b = z ; z = u ; u = v ; v = z ; } u %= this.module ; if ( u < 0 ) u += this.module ; return u ; } }\n"
    },
    {
        "filename": "codeforces_7_B",
        "Python": "t , m = map ( int , input ( ).split ( ) )\nalocuente = [ 0 ] * m\nind = 1\nfor i in range ( t ) :\n    op = input ( ).split ( )\n    if op [ 0 ] == 'alloc' :\n        pos = 0\n        for j in range ( m ) :\n            if alocuente [ j ] == 0 :\n                pos += 1\n                if pos == int ( op [ 1 ] ) :\n                    alocuente [ j - int ( op [ 1 ] ) + 1 : j + 1 ] = [ ind ] * int ( op [ 1 ] )\n                    print ( ind )\n                    ind += 1\n                    break\n            else :\n                pos = 0\n        else :\n            print ( \"NULL\" )\n    if op [ 0 ] == 'erase' :\n        pos = 0\n        if int ( op [ 1 ] ) not in alocuente or int ( op [ 1 ] ) == 0 :\n            print ( 'ILLEGAL_ERASE_ARGUMENT' )\n        else :\n            for j in range ( m ) :\n                if int ( op [ 1 ] ) > 0 and alocuente [ j ] == int ( op [ 1 ] ) :\n                    alocuente [ j ] = 0\n    if op [ 0 ] == \"defragment\" :\n        cnt = 0\n        cnt = alocuente.count ( 0 )\n        alocuente = [ j for j in alocuente if j != 0 ]\n        for j in range ( cnt ) :\n            alocuente.append ( 0 )\n\n",
        "Java": "import java.util.* ; public class codeforces_7_B { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; int t = s.nextInt ( ) ; int m = s.nextInt ( ) ; int [ ] memory = new int [ m ] ; int allocIdx = 0 ; for ( int j = 0 ; j < t ; j ++ ) { switch ( s.next ( ) ) { case \"alloc\" : int n = s.nextInt ( ) ; int len = 0 ; boolean canAlloc = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) len ++ ; else len = 0 ; if ( len == n ) { canAlloc = true ; len = i - n + 1 ; break ; } } if ( canAlloc ) { allocIdx ++ ; for ( int i = len ; i < len + n ; i ++ ) memory [ i ] = allocIdx ; System.out.println ( allocIdx ) ; } else System.out.println ( \"NULL\" ) ; break ; case \"erase\" : int x = s.nextInt ( ) ; if ( x <= 0 ) { System.out.println ( \"ILLEGAL_ERASE_ARGUMENT\" ) ; break ; } boolean hasErased = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == x ) { memory [ i ] = 0 ; hasErased = true ; } } if ( ! hasErased ) System.out.println ( \"ILLEGAL_ERASE_ARGUMENT\" ) ; break ; case \"defragment\" : int d = 0 ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) d ++ ; else memory [ i - d ] = memory [ i ] ; } for ( int i = m - d ; i < m ; i ++ ) memory [ i ] = 0 ; break ; default : System.out.println ( \"h\" ) ; break ; } } s.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_203_A",
        "Python": "xxs = input ( ).split ( \" \" )\nx , t , a , b , da , db = int ( xxs [ 0 ] ) , int ( xxs [ 1 ] ) , int ( xxs [ 2 ] ) , int ( xxs [ 3 ] ) , int ( xxs [ 4 ] ) , int ( xxs [ 5 ] )\ndef main ( ) :\n    if x == 0 :\n        print ( \"YES\" )\n        return \"Result Found\"\n    a_time = min ( [ a // da , t - 1 ] )\n    b_time = min ( [ b // db , t - 1 ] )\n    for i in range ( a_time + 1 ) :\n        for j in range ( b_time + 1 ) :\n            if a - da * i == x or b - db * j == x :\n                print ( \"YES\" )\n                return \"Result Found\"\n            if ( a - da * i ) + ( b - db * j ) == x :\n                print ( \"YES\" )\n                return \"Result Found\"\n    return \"Result Not Found\"\nff = main ( )\nif ff == \"Result Not Found\" :\n    print ( \"NO\" )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_203_A { private void solve ( ) { int x = nextInt ( ) ; int t = nextInt ( ) ; int a = nextInt ( ) ; int b = nextInt ( ) ; int da = nextInt ( ) ; int db = nextInt ( ) ; int first ; int second ; boolean ok = false ; for ( int i = 0 ; i < t ; i ++ ) { first = a - ( da * i ) ; for ( int j = 0 ; j < t ; j ++ ) { second = b - ( db * j ) ; if ( second + first == x || second == x || first == x || x == 0 ) { ok = true ; break ; } } } if ( ok ) out.print ( \"YES\" ) ; else out.print ( \"NO\" ) ; } public static void main ( String [ ] args ) { new codeforces_203_A ( ).run ( ) ; } BufferedReader br ; StringTokenizer st ; PrintWriter out ; private void run ( ) { try { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; out = new PrintWriter ( System.out ) ; solve ( ) ; br.close ( ) ; out.close ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } private int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } private String next ( ) { while ( st == null || ! st.hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; return \"END_OF_FILE\" ; } } return st.nextToken ( ) ; } }\n"
    },
    {
        "filename": "codeforces_567_A",
        "Python": "inp = int ( input ( ) )\nlista = [ ]\nlista = [ int ( x ) for x in input ( ).split ( ) ]\nfor i in range ( len ( lista ) ) :\n    if i == 0 :\n        print ( f\"{lista[i+1] - lista[i]} {lista[len(lista)-1] - lista[i]}\" )\n        continue\n    elif i == len ( lista ) - 1 :\n        print ( f\"{lista[len(lista)-1] - lista[len(lista)-2]} {lista[len(lista)-1] - lista[0]}\" )\n        continue\n    elif lista [ i ] - lista [ i - 1 ] > lista [ i + 1 ] - lista [ i ] :\n        print ( lista [ i + 1 ] - lista [ i ] , end = \" \" )\n    else :\n        print ( lista [ i ] - lista [ i - 1 ] , end = \" \" )\n    if lista [ len ( lista ) - 1 ] - lista [ i ] > lista [ i ] - lista [ 0 ] :\n        print ( lista [ len ( lista ) - 1 ] - lista [ i ] )\n    else :\n        print ( lista [ i ] - lista [ 0 ] )\n\n",
        "Java": "import java.util.Scanner ; import javax.swing.JOptionPane ; public class codeforces_567_A { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; int a = s.nextInt ( ) ; int ar [ ] = new int [ a ] ; int max = 0 , min = 0 ; for ( int i = 0 ; i < ar.length ; i ++ ) ar [ i ] = s.nextInt ( ) ; for ( int i = 0 ; i < ar.length ; i ++ ) { max = Math.max ( ar [ i ] - ar [ 0 ] , ar [ ar.length - 1 ] - ar [ i ] ) ; if ( i == 0 ) min = ar [ i + 1 ] - ar [ i ] ; else if ( i == ar.length - 1 ) min = ar [ i ] - ar [ i - 1 ] ; else min = Math.min ( ar [ i ] - ar [ i - 1 ] , ar [ i + 1 ] - ar [ i ] ) ; System.out.println ( min + \" \" + max ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC108_B",
        "Python": "p = input ( ).split ( \" \" )\nx1 = int ( p [ 0 ] )\ny1 = int ( p [ 1 ] )\nx2 = int ( p [ 2 ] )\ny2 = int ( p [ 3 ] )\nDIF1 = x2 - x1\nDIF2 = y2 - y1\nx3 = x2 - DIF2\ny3 = y2 + DIF1\nx4 = x1 - DIF2\ny4 = y1 + DIF1\nprint ( str ( x3 ) + \" \" + str ( y3 ) + \" \" + str ( x4 ) + \" \" + str ( y4 ) )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC108_B { public static int [ ] revpos ( int [ ] p , int [ ] q ) { int [ ] vec = { 0 , 0 } ; for ( int i = 0 ; i < vec.length ; i ++ ) { vec [ i ] = p [ i ] - q [ i ] ; } int tmp = 0 ; tmp = vec [ 0 ] ; vec [ 0 ] = vec [ 1 ] ; vec [ 1 ] = - tmp ; int [ ] newpos = { 0 , 0 } ; for ( int i = 0 ; i < newpos.length ; i ++ ) { newpos [ i ] = q [ i ] + vec [ i ] ; } return newpos ; } public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int [ ] input = { 0 , 0 , 0 , 0 } ; for ( int i = 0 ; i < input.length ; i ++ ) { input [ i ] = scan.nextInt ( ) ; } scan.close ( ) ; int [ ] [ ] position = { { 0 , 0 } , { 0 , 0 } , { 0 , 0 } , { 0 , 0 } } ; position [ 0 ] [ 0 ] = input [ 0 ] ; position [ 0 ] [ 1 ] = input [ 1 ] ; position [ 1 ] [ 0 ] = input [ 2 ] ; position [ 1 ] [ 1 ] = input [ 3 ] ; position [ 2 ] = revpos ( position [ 0 ] , position [ 1 ] ) ; position [ 3 ] = revpos ( position [ 1 ] , position [ 2 ] ) ; if ( position [ 0 ] == revpos ( position [ 2 ] , position [ 3 ] ) ) { System.out.println ( \"OK\" ) ; } int [ ] output = { 0 , 0 , 0 , 0 } ; output [ 0 ] = position [ 2 ] [ 0 ] ; output [ 1 ] = position [ 2 ] [ 1 ] ; output [ 2 ] = position [ 3 ] [ 0 ] ; output [ 3 ] = position [ 3 ] [ 1 ] ; for ( int i : output ) { System.out.println ( i ) ; } } }\n"
    },
    {
        "filename": "codeforces_569_A",
        "Python": "t , s , q = map ( int , input ( ).split ( ) )\nans = 0\nwhile ( s < t ) :\n    s *= q\n    ans += 1\nprint ( ans )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_569_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int T = in.nextInt ( ) ; int S = in.nextInt ( ) ; int q = in.nextInt ( ) ; long previous = S ; int answer = 0 ; while ( previous < T ) { answer ++ ; previous *= q ; } System.out.println ( answer ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC145_C",
        "Python": "import sys\nimport itertools\ndef solve ( N : int , x : \"List[int]\" , y : \"List[int]\" ) :\n    indices = [ i for i in range ( N ) ]\n    permutations = itertools.permutations ( indices )\n    distances = [ ]\n    for permutation in permutations :\n        total_distance = 0\n        for i in range ( 0 , N - 1 ) :\n            f , t = permutation [ i : i + 2 ]\n            distance = ( ( x [ t ] - x [ f ] ) ** 2 + ( y [ t ] - y [ f ] ) ** 2 ) ** 0.5\n            total_distance += distance\n        distances.append ( total_distance )\n    result = sum ( distances ) / len ( distances )\n    print ( result )\n    return\ndef main ( ) :\n    def iterate_tokens ( ) :\n        for line in sys.stdin :\n            for word in line.split ( ) :\n                yield word\n    tokens = iterate_tokens ( )\n    N = int ( next ( tokens ) )\n    x = [ int ( ) ] * ( N )\n    y = [ int ( ) ] * ( N )\n    for i in range ( N ) :\n        x [ i ] = int ( next ( tokens ) )\n        y [ i ] = int ( next ( tokens ) )\n    solve ( N , x , y )\nif __name__ == \"__main__\" :\n    main ( )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC145_C { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int N = scanner.nextInt ( ) ; int [ ] [ ] pos = new int [ N ] [ 2 ] ; for ( int i = 0 ; i < N ; i ++ ) { pos [ i ] [ 0 ] = scanner.nextInt ( ) ; pos [ i ] [ 1 ] = scanner.nextInt ( ) ; } double sum = 0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { if ( i == j ) continue ; sum += dist ( pos [ i ] [ 0 ] , pos [ i ] [ 1 ] , pos [ j ] [ 0 ] , pos [ j ] [ 1 ] ) ; } } System.out.println ( sum / N ) ; } private static double dist ( int x1 , int y1 , int x2 , int y2 ) { return Math.sqrt ( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) ) ; } }\n"
    },
    {
        "filename": "codeforces_79_A",
        "Python": "x , y = list ( map ( int , input ( ).split ( ) ) )\na = 0\nwhile x >= 0 and y >= 22 or x >= 1 and y >= 12 or x >= 2 and y >= 2 :\n    if a :\n        if y >= 22 :\n            y -= 22\n        elif x >= 1 and y >= 12 :\n            x -= 1\n            y -= 12\n        else :\n            x -= 2\n            y -= 2\n    else :\n        if x >= 2 and y >= 2 :\n            x -= 2\n            y -= 2\n        elif x >= 1 and y >= 12 :\n            x -= 1\n            y -= 12\n        else :\n            y -= 22\n    a = 1 - a\nprint ( [ 'Ciel' , 'Hanako' ] [ 1 - a ] )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.StringTokenizer ; public class codeforces_79_A { public static boolean canTake ( int xNeeded , int xAvailable , int yNeeded , int yAvailable ) { if ( xNeeded > xAvailable ) return false ; if ( yNeeded > yAvailable ) return false ; return true ; } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; StringTokenizer st = new StringTokenizer ( br.readLine ( ) ) ; int x = Integer.parseInt ( st.nextToken ( ) ) ; int y = Integer.parseInt ( st.nextToken ( ) ) ; int turn = 0 ; while ( true ) { if ( turn % 2 == 0 ) { if ( canTake ( 2 , x , 2 , y ) ) { x -= 2 ; y -= 2 ; } else if ( canTake ( 1 , x , 12 , y ) ) { x -= 1 ; y -= 12 ; } else if ( canTake ( 0 , x , 22 , y ) ) { y -= 22 ; } else { System.out.println ( \"Hanako\" ) ; return ; } } else { if ( canTake ( 0 , x , 22 , y ) ) { y -= 22 ; } else if ( canTake ( 1 , x , 12 , y ) ) { x -= 1 ; y -= 12 ; } else if ( canTake ( 2 , x , 2 , y ) ) { x -= 2 ; y -= 2 ; } else { System.out.println ( \"Ciel\" ) ; return ; } } turn ++ ; } } }\n"
    },
    {
        "filename": "codeforces_518_B",
        "Python": "s , t = input ( ) , input ( )\nfreqs = dict ( )\nfreqt = dict ( )\nyay , whoops = 0 , 0\nfor letra in s :\n    if letra in freqs :\n        freqs [ letra ] += 1\n    else :\n        freqs [ letra ] = 1\nfor letra in t :\n    if letra in freqt :\n        freqt [ letra ] += 1\n    else :\n        freqt [ letra ] = 1\nfor letra in freqs.keys ( ) :\n    while ( freqs [ letra ] > 0 and letra in freqt and freqt [ letra ] > 0 ) :\n        yay += 1\n        freqs [ letra ] -= 1\n        freqt [ letra ] -= 1\nfor letra in freqs.keys ( ) :\n    while ( freqs [ letra ] > 0 ) :\n        if letra.islower ( ) and letra.upper ( ) in freqt.keys ( ) and freqt [ letra.upper ( ) ] > 0 :\n            whoops += 1\n            freqs [ letra ] -= 1\n            freqt [ letra.upper ( ) ] -= 1\n        elif letra.isupper ( ) and letra.lower ( ) in freqt.keys ( ) and freqt [ letra.lower ( ) ] > 0 :\n            whoops += 1\n            freqs [ letra ] -= 1\n            freqt [ letra.lower ( ) ] -= 1\n        else :\n            break ;\nprint ( yay , whoops )\n\n",
        "Java": "import java.util.* ; public class codeforces_518_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; StringBuilder s = new StringBuilder ( scan.next ( ) ) ; String t = scan.next ( ) ; int ura = 0 ; int opa = 0 ; Map < Character , Integer > tmap = new HashMap < > ( ) ; for ( int i = 0 ; i < t.length ( ) ; i ++ ) { Character ch = t.charAt ( i ) ; if ( ! tmap.containsKey ( ch ) ) tmap.put ( ch , 1 ) ; else tmap.put ( ch , tmap.get ( ch ) + 1 ) ; } int length = s.length ( ) ; for ( int i = 0 ; i < length ; i ++ ) { Character ch = s.charAt ( i ) ; Integer num = tmap.get ( ch ) ; if ( num == null ) continue ; int inum = num ; if ( inum == 1 ) tmap.remove ( ch ) ; else tmap.put ( ch , inum - 1 ) ; s.setCharAt ( i , '\u042f' ) ; ura ++ ; } for ( int i = 0 ; i < length ; i ++ ) { Character ch = s.charAt ( i ) ; Character rch = reverse ( ch ) ; Integer num = tmap.get ( rch ) ; if ( num == null ) continue ; int inum = num ; if ( inum == 1 ) tmap.remove ( rch ) ; else tmap.put ( rch , inum - 1 ) ; opa ++ ; } System.out.println ( ura + \" \" + opa ) ; } public static Character reverse ( Character ch ) { if ( Character.isLowerCase ( ch ) ) { return Character.toUpperCase ( ch ) ; } else return Character.toLowerCase ( ch ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC167_D",
        "Python": "from collections import defaultdict\nN , K = map ( int , input ( ).split ( ) )\nL = list ( map ( int , input ( ).split ( ) ) )\nL.insert ( 0 , - 1 )\npath = [ 1 ]\nind = 0\ncount = 0\nx = 1\nt = - 1\nflag = False\nHash = defaultdict ( lambda : 0 )\nfor i in range ( N + 1 ) :\n    ne = L [ x ]\n    if Hash [ ne ] :\n        flag = True\n        t = Hash [ ne ]\n        break\n    path.append ( ne )\n    ind += 1\n    Hash [ ne ] = ind\n    x = ne\nif flag == True :\n    loop = path [ t : : ]\n    if K < ( len ( path ) ) :\n        print ( path [ K ] )\n    else :\n        K = K - len ( path )\n        K = K % len ( loop )\n        print ( loop [ K ] )\nelse :\n    print ( path [ K - 1 ] )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC167_D { Scanner sc = new Scanner ( System.in ) ; final int MOD = 1000000007 ; final int MAX = Integer.MAX_VALUE ; final long LMAX = Long.MAX_VALUE ; int len = ( int ) 1e6 + 1 ; void doIt ( ) { int N = sc.nextInt ( ) ; long K = sc.nextLong ( ) ; int A [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) - 1 ; } Set < Integer > used = new HashSet < > ( ) ; int idx [ ] = new int [ N ] ; int pos [ ] = new int [ N ] ; int next = 0 , cur = 0 ; while ( ! used.contains ( next ) ) { used.add ( next ) ; idx [ next ] = cur ; pos [ cur ] = next ; next = A [ next ] ; cur ++ ; } long a = ( long ) cur - idx [ next ] ; long b = ( long ) idx [ next ] ; int ans = ( int ) ( ( 10000 * a + K - b ) % a + b ) ; if ( b > K ) ans = ( int ) K ; System.out.println ( pos [ ans ] + 1 ) ; } public static void main ( String [ ] args ) { new atcoder_ABC167_D ( ).doIt ( ) ; } }\n"
    },
    {
        "filename": "codeforces_682_B",
        "Python": "import os , sys , io , math\nfrom array import array\nfrom math import *\nI = lambda : [ * map ( int , sys.stdin.readline ( ).split ( ) ) ]\nIS = lambda : input ( )\nIN = lambda : int ( input ( ) )\nIF = lambda : float ( input ( ) )\nn = IN ( )\nl = I ( )\nf = 1\nl.sort ( )\nc = 0\nfor i in l :\n    if i > c : c += 1\nprint ( c + 1 )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_682_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; ArrayList < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { list.add ( in.nextInt ( ) ) ; } Collections.sort ( list ) ; int c = 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( list.get ( i ) >= c ) { c ++ ; } } pw.println ( c ) ; pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC007_C",
        "Python": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN , d , x = map ( int , read ( ).split ( ) )\ndef main ( N , d , x ) :\n    ret = 0\n    while N :\n        ret += d + ( N - 0.5 ) * x\n        d = d + ( d / N ) + ( 5 * x ) / ( 2 * N )\n        x += 2 * x / N\n        N -= 1\n    return ret\nprint ( main ( N , d , x ) )\n\n",
        "Java": "import java.math.BigDecimal ; import java.text.DecimalFormat ; import java.util.Scanner ; public class atcoder_AGC007_C { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; double N = scan.nextDouble ( ) ; double d = scan.nextDouble ( ) ; double x = scan.nextDouble ( ) ; BigDecimal ans = new BigDecimal ( \"0.0\" ) ; while ( N > 0.5 ) { BigDecimal adnum = BigDecimal.valueOf ( d + x * ( N - 0.5 ) ) ; ans = ans.add ( adnum ) ; d = ( N + 1.0 ) * d / N + ( 5.0 * x ) / ( 2.0 * N ) ; x = ( 1.0 + ( 2.0 / N ) ) * x ; -- N ; } DecimalFormat format = new DecimalFormat ( \"#.#\" ) ; format.setMinimumFractionDigits ( 20 ) ; System.out.println ( format.format ( ans ) ) ; } }\n"
    },
    {
        "filename": "codeforces_665_A",
        "Python": "a , at = map ( int , input ( ).split ( ) )\nb , bt = map ( int , input ( ).split ( ) )\nt1 , t2 = map ( int , input ( ).split ( ':' ) )\nst = t2 + ( t1 - 5 ) * 60\nfin = st + at\nnow = 0\nans = 0\nwhile now < fin and now < 1140 :\n    if now + bt > st :\n        ans += 1\n    now += b\nprint ( ans )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.util.StringTokenizer ; public class codeforces_665_A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter pw = new PrintWriter ( System.out ) ; StringTokenizer st = new StringTokenizer ( br.readLine ( ) ) ; int a = Integer.parseInt ( st.nextToken ( ) ) ; int tA = Integer.parseInt ( st.nextToken ( ) ) ; st = new StringTokenizer ( br.readLine ( ) ) ; int b = Integer.parseInt ( st.nextToken ( ) ) ; int tB = Integer.parseInt ( st.nextToken ( ) ) ; String timing = br.readLine ( ) ; int hrs = Integer.parseInt ( timing.substring ( 0 , 2 ) ) ; int mins = Integer.parseInt ( timing.substring ( 3 ) ) ; int simDeparture = hrs * 60 + mins ; int simArrival = simDeparture + tA ; int counter = 0 ; for ( int i = 300 ; i < 1440 ; i += b ) { int busDeparture = i ; int busArrival = i + tB ; if ( busDeparture >= simArrival || simDeparture >= busArrival ) continue ; counter ++ ; } pw.println ( counter ) ; pw.flush ( ) ; pw.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_705_B",
        "Python": "import sys\ninput = sys.stdin.readline\nn = int ( input ( ) )\nw = list ( map ( int , input ( ).split ( ) ) )\nc = 2\nfor i in w :\n    if i == 1 :\n        print ( c )\n    elif i % 2 == 0 :\n        c = 3 - c\n        print ( c )\n    else :\n        print ( c )\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class codeforces_705_B { static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } static FastReader scan = new FastReader ( ) ; public static void main ( String [ ] args ) { int t = 1 ; while ( t -- > 0 ) { solve ( ) ; } } public static void solve ( ) { int t = scan.nextInt ( ) ; int [ ] arr = new int [ t ] ; for ( int i = 0 ; i < arr.length ; i ++ ) { arr [ i ] = scan.nextInt ( ) ; } int prevWinner = 0 ; for ( int i = 0 ; i < arr.length ; i ++ ) { if ( arr [ i ] == 1 ) { if ( prevWinner == 0 ) { prevWinner = 2 ; } } if ( prevWinner == 2 || prevWinner == 0 ) { if ( ( arr [ i ] - 1 ) % 2 == 0 ) { System.out.println ( 2 ) ; prevWinner = 2 ; } else { System.out.println ( 1 ) ; prevWinner = 1 ; } } else { if ( ( arr [ i ] - 1 ) % 2 == 0 ) { System.out.println ( 1 ) ; prevWinner = 1 ; } else { System.out.println ( 2 ) ; prevWinner = 2 ; } } } } }\n"
    },
    {
        "filename": "codeforces_287_A",
        "Python": "t = [ ]\nfor i in range ( 4 ) :\n    l = list ( map ( str , input ( ) ) )\n    t.append ( l )\nblack = 0\nwhite = 0\ncorrect = 0\nfor i in range ( 3 ) :\n    for j in range ( 3 ) :\n        if t [ i ] [ j ] == '#' :\n            black += 1\n        else :\n            white += 1\n        if t [ i ] [ j + 1 ] == '#' :\n            black += 1\n        else :\n            white += 1\n        if t [ i + 1 ] [ j ] == '#' :\n            black += 1\n        else :\n            white += 1\n        if t [ i + 1 ] [ j + 1 ] == '#' :\n            black += 1\n        else :\n            white += 1\n        if ( black == 0 or black == 3 or white == 0 or white == 3 or white == 4 or black == 4 ) :\n            correct = 1\n            break\n        black = 0\n        white = 0\nif correct == 1 :\n    print ( 'YES' )\nelse :\n    print ( 'NO' )\n\n",
        "Java": "import java.util.* ; public class codeforces_287_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String [ ] str = new String [ 4 ] ; int i = - 1 ; while ( i != 3 ) { i = i + 1 ; str [ i ] = sc.next ( ) ; } int u = - 1 ; i = - 1 ; int yes = 0 ; while ( u != 2 ) { u = u + 1 ; i = - 1 ; while ( i != 2 ) { i = i + 1 ; if ( ( str [ u ].charAt ( i ) == str [ u ].charAt ( i + 1 ) && ( str [ u + 1 ].charAt ( i ) == str [ u ].charAt ( i ) || str [ u + 1 ].charAt ( i + 1 ) == str [ u ].charAt ( i ) ) ) || ( str [ u + 1 ].charAt ( i ) == str [ u + 1 ].charAt ( i + 1 ) && ( str [ u ].charAt ( i ) == str [ u + 1 ].charAt ( i ) || str [ u ].charAt ( i + 1 ) == str [ u + 1 ].charAt ( i ) ) ) ) { yes = 1 ; System.out.println ( \"YES\" ) ; break ; } } if ( yes == 1 ) { break ; } } if ( yes == 0 ) { System.out.println ( \"NO\" ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC169_E",
        "Python": "def resolve ( ) :\n    n = int ( input ( ) )\n    low = [ ]\n    high = [ ]\n    for i in range ( n ) :\n        a , b = map ( int , input ( ).split ( ) )\n        low.append ( a )\n        high.append ( b )\n    low.sort ( )\n    high.sort ( )\n    if n % 2 :\n        print ( high [ ( n + 1 ) // 2 - 1 ] - low [ ( n + 1 ) // 2 - 1 ] + 1 )\n    else :\n        hh = ( high [ ( n ) // 2 - 1 ] + high [ ( n ) // 2 ] ) / 2\n        ll = ( low [ ( n ) // 2 - 1 ] + low [ ( n ) // 2 ] ) / 2\n        print ( int ( ( hh - ll ) * 2 ) + 1 )\nif __name__ == \"__main__\" :\n    resolve ( )\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class atcoder_ABC169_E { public static void main ( String [ ] args ) throws Exception { int num = 998244353 ; BufferedReader bf = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter out = new PrintWriter ( System.out ) ; int n = Integer.parseInt ( bf.readLine ( ) ) ; ArrayList < Integer > ai = new ArrayList < Integer > ( ) ; ArrayList < Integer > bi = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { StringTokenizer st = new StringTokenizer ( bf.readLine ( ) ) ; ai.add ( Integer.parseInt ( st.nextToken ( ) ) ) ; bi.add ( Integer.parseInt ( st.nextToken ( ) ) ) ; } Collections.sort ( ai ) ; Collections.sort ( bi ) ; if ( n % 2 == 1 ) { out.println ( bi.get ( bi.size ( ) / 2 ) - ai.get ( ai.size ( ) / 2 ) + 1 ) ; out.close ( ) ; } else { double b = ( ai.get ( ai.size ( ) / 2 ) + ai.get ( ai.size ( ) / 2 - 1 ) + 0.0 ) / 2 ; double c = ( bi.get ( bi.size ( ) / 2 ) + bi.get ( bi.size ( ) / 2 - 1 ) + 0.0 ) / 2 ; out.println ( ( int ) ( 2 * ( c - b ) + 1 ) ) ; out.close ( ) ; } } }\n"
    },
    {
        "filename": "codeforces_86_A",
        "Python": "l , r = [ int ( x ) for x in input ( ).split ( ) ]\ncurr = r\ns = 0\nwhile curr :\n    s += 1\n    curr //= 10\nfirst = 10 ** s\nsecond = first // 2\nans = - 1\nfor i in [ l , r , first , second ] :\n    if i >= l and i <= r :\n        curr = i\n        rev = ''\n        for k in str ( curr ) :\n            rev += str ( 9 - int ( k ) )\n        ans = max ( ans , int ( rev ) * curr )\nprint ( ans )\n\n",
        "Java": "import java.util.Scanner ; import java.util.Arrays ; public class codeforces_86_A { public static int power ( Long a ) { int res = 0 ; while ( a > 0 ) { res ++ ; a = a / 10 ; } return res ; } public static long mult ( Long a ) { int pow = power ( a ) ; long max = 0 ; for ( int j = 0 ; j < pow ; ++ j ) { max = max * 10 + 9 ; } return a * ( max - a ) ; } public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; long l = in.nextLong ( ) ; long r = in.nextLong ( ) ; long res = 0 ; long [ ] maxxes = new long [ 10 ] ; long temp = 0 ; for ( int i = 0 ; i < 10 ; ++ i ) { temp = temp * 10 + 9 ; maxxes [ i ] = temp / 2 * ( temp - temp / 2 ) ; } res = Math.max ( mult ( l ) , res ) ; res = Math.max ( mult ( r ) , res ) ; temp = 0 ; for ( int i = 0 ; i < 10 ; ++ i ) { temp = temp * 10 + 9 ; if ( l <= temp / 2 && temp / 2 <= r ) res = Math.max ( maxxes [ i ] , res ) ; } System.out.println ( res ) ; } }\n"
    },
    {
        "filename": "codeforces_70_B",
        "Python": "import re\nn = int ( input ( ) )\nans , sumL = 1 , 0\nfor s in re.split ( \"[.?!]\" , input ( ) ) :\n    s = s.strip ( ) + '.'\n    L = len ( s )\n    if L > 1 :\n        if L > n :\n            print ( \"Impossible\" )\n            exit ( )\n        if sumL + L + ( sumL > 0 ) > n :\n            ans += 1\n            sumL = L\n        else :\n            sumL = sumL + L + ( sumL > 0 )\nprint ( ans )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; public class codeforces_70_B { public static void main ( String [ ] args ) throws NumberFormatException , IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; int n = Integer.parseInt ( br.readLine ( ) ) ; String input = br.readLine ( ) ; int max = - 1 ; int [ ] msgLength = new int [ input.length ( ) / 2 ] ; int count = 0 ; int idx = 0 ; for ( int i = 0 ; i < input.length ( ) ; i ++ ) { char c = input.charAt ( i ) ; if ( c == '.' || c == '?' || c == '!' ) { msgLength [ idx ++ ] = ++ count ; if ( count > max ) max = count ; i ++ ; count = 0 ; } else count ++ ; } if ( max > n ) System.out.println ( \"Impossible\" ) ; else { int ans = 0 ; for ( int i = 0 ; i < idx ; i ++ ) { int l = msgLength [ i ] ; while ( i < idx - 1 && l + msgLength [ i + 1 ] + 1 <= n ) { l += msgLength [ i + 1 ] + 1 ; i ++ ; } ans ++ ; } System.out.println ( ans ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC133_E",
        "Python": "from collections import defaultdict\nimport sys\nsys.setrecursionlimit ( 10 ** 7 )\ngraph = defaultdict ( list )\nN , K = map ( int , input ( ).split ( ) )\nfor i in range ( N - 1 ) :\n    a , b = map ( int , input ( ).split ( ) )\n    graph [ a - 1 ].append ( b - 1 )\n    graph [ b - 1 ].append ( a - 1 )\nmod = 10 ** 9 + 7\ndef dfs ( fro , to , f ) :\n    caseNum = f\n    colorNum = K - 1 if f == K else K - 2\n    for u in graph [ fro ] :\n        if u == to :\n            continue\n        pat = dfs ( u , fro , colorNum )\n        if pat == 0 :\n            caseNum = 0\n            break\n        caseNum = caseNum * pat % mod\n        colorNum -= 1\n    return caseNum\nans = dfs ( 0 , - 1 , K )\nprint ( ans )\n\n",
        "Java": "import java.util.LinkedList ; import java.util.Scanner ; public class atcoder_ABC133_E { private class Node { public long pattern = 0 ; public int index ; public LinkedList < Integer > children = new LinkedList < Integer > ( ) ; public int parent = - 1 ; public Node ( int i ) { this.index = i ; } public void setParent ( int K , int parent , int use , Node [ ] nodes ) { this.pattern = K - use ; this.parent = parent ; int count = 1 ; if ( parent != - 1 ) { count ++ ; } for ( int n : children ) { if ( n == this.parent ) { continue ; } nodes [ n ].setParent ( K , index , count , nodes ) ; count ++ ; } } } public void solve ( ) { Scanner in = new Scanner ( System.in ) ; int N = in.nextInt ( ) ; int K = in.nextInt ( ) ; Node [ ] nodes = new Node [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { nodes [ i ] = new Node ( i ) ; } for ( int i = 0 ; i < N - 1 ; i ++ ) { int a = in.nextInt ( ) - 1 ; int b = in.nextInt ( ) - 1 ; nodes [ a ].children.add ( b ) ; nodes [ b ].children.add ( a ) ; } in.close ( ) ; nodes [ 0 ].setParent ( K , - 1 , 0 , nodes ) ; long patterns = 1 ; for ( int i = 0 ; i < N ; i ++ ) { patterns = ( patterns * nodes [ i ].pattern ) % 1_000_000_007 ; } System.out.println ( patterns ) ; } public static void main ( String [ ] args ) { atcoder_ABC133_E main = new atcoder_ABC133_E ( ) ; main.solve ( ) ; } }\n"
    },
    {
        "filename": "codeforces_55_A",
        "Python": "n = int ( input ( ) )\nwhile n % 2 == 0 :\n    n /= 2\nif n == 1 :\n    print ( 'YES' )\nelse :\n    print ( 'NO' )\n\n",
        "Java": "import java.util.* ; import java.lang.* ; import java.io.* ; public class codeforces_55_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n , i = 1 , k = 0 , p = 1 ; boolean flag = true ; int [ ] a = new int [ 1000 ] ; n = scan.nextInt ( ) ; i = 0 ; while ( k <= n ) { i += k ; if ( i >= n ) { while ( ! ( i < n ) ) i = i - n ; } ++ a [ i ] ; ++ k ; } for ( i = 0 ; i < n ; ++ i ) if ( a [ i ] == 0 ) { flag = false ; break ; } if ( flag ) System.out.println ( \"YES\" ) ; else System.out.println ( \"NO\" ) ; } }\n"
    },
    {
        "filename": "codeforces_222_A",
        "Python": "def main ( ) :\n    n , k = list ( map ( int , input ( ).split ( ' ' ) ) )\n    elems = list ( map ( int , input ( ).split ( ' ' ) ) )\n    all_same = lambda arr : all ( [ x == arr [ 0 ] for x in arr ] )\n    if all_same ( elems ) :\n        print ( 0 )\n        return\n    if k == 1 :\n        print ( - 1 )\n        return\n    if not all_same ( elems [ k - 1 : ] ) :\n        print ( - 1 )\n        return\n    target = elems [ - 1 ]\n    to_delete = elems [ 0 : k - 1 ]\n    while to_delete and to_delete [ - 1 ] == target :\n        to_delete.pop ( )\n    print ( len ( to_delete ) )\nif __name__ == \"__main__\" :\n    main ( )\n\n",
        "Java": "import java.util.* ; public class codeforces_222_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) , k = in.nextInt ( ) , l = 0 , c = 1 ; for ( int i = 0 ; i < n ; i ++ ) { int a = in.nextInt ( ) ; if ( a == l ) c += 1 ; else c = 1 ; l = a ; } if ( c + k > n ) System.out.println ( n - c ) ; else System.out.println ( - 1 ) ; } }\n"
    },
    {
        "filename": "codeforces_265_B",
        "Python": "n = int ( input ( ) )\nl = [ ]\nfor i in range ( n ) :\n    l.append ( int ( input ( ) ) )\nans = n - 1\nlast = 0\nfor i in l :\n    ans += abs ( last - i ) + 1\n    last = i\nprint ( ans )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_265_B { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System.in ) ; int n = scn.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < arr.length ; i ++ ) { arr [ i ] = scn.nextInt ( ) ; } int ans = arr [ 0 ] + 1 ; for ( int i = 1 ; i < arr.length ; i ++ ) { ans += Math.abs ( arr [ i ] - arr [ i - 1 ] ) + 2 ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC178_B",
        "Python": "import math , itertools , fractions , heapq , collections , bisect , sys , queue , copy\nsys.setrecursionlimit ( 10 ** 7 )\ninf = 10 ** 20\nmod = 10 ** 9 + 7\ndd = [ ( - 1 , 0 ) , ( 0 , 1 ) , ( 1 , 0 ) , ( 0 , - 1 ) ]\nddn = [ ( - 1 , 0 ) , ( - 1 , 1 ) , ( 0 , 1 ) , ( 1 , 1 ) , ( 1 , 0 ) , ( 1 , - 1 ) , ( 0 , - 1 ) , ( - 1 , - 1 ) ]\ndef LI ( ) : return [ int ( x ) for x in sys.stdin.readline ( ).split ( ) ]\ndef I ( ) : return int ( sys.stdin.readline ( ) )\ndef F ( ) : return float ( sys.stdin.readline ( ) )\ndef LS ( ) : return sys.stdin.readline ( ).split ( )\ndef S ( ) : return input ( )\ndef main ( ) :\n    a , b , c , d = LI ( )\n    return max ( a * c , b * d , a * d , b * c )\nprint ( main ( ) )\n\n",
        "Java": "import java.util.* ; import java.lang.* ; import java.io.* ; public class atcoder_ABC178_B { static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( Exception e ) { e.printStackTrace ( ) ; } return str ; } } static int modPower ( int x , int y , int mod ) { int res = 1 ; x %= mod ; if ( x == 0 ) return 0 ; while ( y > 0 ) { if ( y % 2 == 1 ) { res = ( res * x ) % mod ; } y = y >> 1 ; x = ( x * x ) % mod ; } return res ; } static class pair < T1 , T2 > { T1 first ; T2 second ; pair ( T1 first , T2 second ) { this.first = first ; this.second = second ; } } public static void main ( String [ ] args ) throws java.lang.Exception { FastReader in = new FastReader ( ) ; long [ ] a = new long [ 4 ] ; for ( int i = 0 ; i < 4 ; i ++ ) a [ i ] = in.nextLong ( ) ; System.out.println ( Math.max ( a [ 0 ] * a [ 2 ] , Math.max ( a [ 1 ] * a [ 3 ] , Math.max ( a [ 0 ] * a [ 3 ] , a [ 1 ] * a [ 2 ] ) ) ) ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC013_A",
        "Python": "import sys , re\nfrom collections import deque , defaultdict , Counter\nfrom math import ceil , sqrt , hypot , factorial , pi , sin , cos , radians\nfrom itertools import groupby , accumulate , permutations , combinations , product\nfrom operator import itemgetter , mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase , ascii_uppercase , digits\nfrom bisect import bisect , bisect_left\nfrom fractions import gcd\nfrom heapq import heappush , heappop\nfrom functools import reduce\ndef input ( ) : return sys.stdin.readline ( ).strip ( )\ndef INT ( ) : return int ( input ( ) )\ndef MAP ( ) : return map ( int , input ( ).split ( ) )\ndef LIST ( ) : return list ( map ( int , input ( ).split ( ) ) )\ndef ZIP ( n ) : return zip ( * ( MAP ( ) for _ in range ( n ) ) )\nsys.setrecursionlimit ( 10 ** 9 )\nINF = float ( 'inf' )\nmod = 10 ** 9 + 7\nN = INT ( )\nA = LIST ( )\nA = [ k for k , g in groupby ( A ) ]\nN = len ( A )\ni = 1\nans = 0\nwhile i < N - 1 :\n    if A [ i - 1 ] < A [ i ] > A [ i + 1 ] or A [ i - 1 ] > A [ i ] < A [ i + 1 ] :\n        ans += 1\n        i += 1\n    i += 1\nprint ( ans + 1 )\n\n",
        "Java": "import java.util.* ; public class atcoder_AGC013_A { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = stdIn.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( i == N - 1 ) count ++ ; else if ( A [ i ] == A [ i + 1 ] ) ; else if ( A [ i ] < A [ i + 1 ] ) { while ( A [ i ] <= A [ i + 1 ] ) { i ++ ; if ( i == N - 1 ) break ; } count ++ ; } else { while ( A [ i ] >= A [ i + 1 ] ) { i ++ ; if ( i == N - 1 ) break ; } count ++ ; } } System.out.println ( count ) ; } }\n"
    },
    {
        "filename": "atcoder_ARC062_B",
        "Python": "s = list ( input ( ) )\nnum_g , num_p = 0 , 0\nscore = 0\nfor x in s :\n    if x == 'g' :\n        if num_g - num_p > 0 :\n            score += 1\n            num_p += 1\n        else :\n            score = score\n            num_g += 1\n    elif x == 'p' :\n        if num_g - num_p > 0 :\n            score = score\n            num_p += 1\n        else :\n            score -= 1\n            num_g += 1\nprint ( score )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.StringTokenizer ; import java.io.IOException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; public class atcoder_ARC062_B { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskD solver = new TaskD ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class TaskD { public void solve ( int testNumber , InputReader in , PrintWriter out ) { String S = in.next ( ) ; int score = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { char my = i % 2 == 0 ? 'g' : 'p' ; char his = S.charAt ( i ) ; if ( my != his ) { score += my == 'p' ? 1 : - 1 ; } } out.println ( score ) ; } } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC135_D",
        "Python": "import sys\nimport math\nfrom collections import defaultdict\nsys.setrecursionlimit ( 10 ** 7 )\ndef input ( ) :\n    return sys.stdin.readline ( ) [ : - 1 ]\nmod = 10 ** 9 + 7\ndef I ( ) : return int ( input ( ) )\ndef II ( ) : return map ( int , input ( ).split ( ) )\ndef III ( ) : return list ( map ( int , input ( ).split ( ) ) )\ndef Line ( N ) :\n    read_all = [ tuple ( map ( int , input ( ).split ( ) ) ) for _ in range ( N ) ]\n    return map ( list , zip ( * read_all ) )\nS = str ( input ( ) )\nn = len ( S )\nif n == 1 :\n    if S == '5' or S == '?' :\n        print ( 1 )\n    else :\n        print ( 0 )\n    exit ( )\ndp = [ [ 0 ] * 13 for i in range ( n ) ]\nfor i in range ( n ) :\n    if i == 0 :\n        if S [ i ] != '?' :\n            dp [ i ] [ int ( S [ i ] ) ] += 1\n        else :\n            for j in range ( 10 ) :\n                dp [ i ] [ j ] += 1\n    else :\n        if S [ i ] != '?' :\n            for k in range ( 13 ) :\n                dp [ i ] [ ( k * 10 + int ( S [ i ] ) ) % 13 ] += dp [ i - 1 ] [ k ]\n        else :\n            for j in range ( 10 ) :\n                for k in range ( 13 ) :\n                    dp [ i ] [ ( k * 10 + j ) % 13 ] += dp [ i - 1 ] [ k ]\n        for k in range ( 13 ) :\n            dp [ i ] [ k ] %= mod\nprint ( dp [ n - 1 ] [ 5 ] )\n\n",
        "Java": "import java.io.PrintWriter ; import java.util.ArrayList ; import java.util.Arrays ; import java.util.Scanner ; public class atcoder_ABC135_D { public static void main ( String [ ] args ) { new atcoder_ABC135_D ( ).run ( ) ; } final long MOD = ( long ) 1e9 + 7 ; void run ( ) { Scanner sc = new Scanner ( System.in ) ; char [ ] cs = sc.next ( ).toCharArray ( ) ; long [ ] [ ] dp = new long [ cs.length ] [ 13 ] ; int base = 1 ; for ( int i = 0 ; i < cs.length ; ++ i ) { if ( cs [ cs.length - 1 - i ] == '?' ) { for ( int pre = 0 ; pre < 13 ; ++ pre ) { for ( int next = 0 ; next < 10 ; ++ next ) { dp [ i ] [ ( base * next + pre ) % 13 ] += ( i > 0 ? dp [ i - 1 ] [ pre ] : ( pre == 0 ? 1 : 0 ) ) ; dp [ i ] [ ( base * next + pre ) % 13 ] %= MOD ; } } } else { int next = cs [ cs.length - 1 - i ] - '0' ; for ( int pre = 0 ; pre < 13 ; ++ pre ) { dp [ i ] [ ( base * next + pre ) % 13 ] += ( i > 0 ? dp [ i - 1 ] [ pre ] : ( pre == 0 ? 1 : 0 ) ) ; dp [ i ] [ ( base * next + pre ) % 13 ] %= MOD ; } } base = base * 10 % 13 ; } System.out.println ( dp [ dp.length - 1 ] [ 5 ] ) ; } void tr ( Object...objects ) { System.out.println ( Arrays.deepToString ( objects ) ) ; } }\n"
    },
    {
        "filename": "codeforces_456_A",
        "Python": "n = int ( input ( ) )\nm = [ [ int ( x ) for x in input ( ).split ( ) ] for i in range ( n ) ]\nm.sort ( reverse = True )\na = m [ 0 ]\nfor i in m [ 1 : ] :\n    if i [ 1 ] > a [ 1 ] :\n        print ( 'Happy Alex' )\n        break\n    a = i\nelse :\n    print ( 'Poor Alex' )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.Arrays ; import java.util.Scanner ; public class codeforces_456_A { static ArrayList md = new ArrayList ( ) ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; int temp = 0 ; int q = 0 ; int w = 0 , e = 0 ; boolean f = false ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; b [ i ] = in.nextInt ( ) ; if ( temp < a [ i ] ) { if ( q > b [ i ] ) { f = true ; } q = b [ i ] ; temp = a [ i ] ; } if ( temp > a [ i ] ) { if ( q < b [ i ] ) { f = true ; } q = b [ i ] ; temp = a [ i ] ; } if ( a [ i ] > w ) { w = a [ i ] ; if ( b [ i ] < e ) { f = true ; } e = b [ i ] ; } if ( a [ i ] < w ) { if ( b [ i ] > e ) { f = true ; } } } if ( f == true ) { System.out.println ( \"Happy Alex\" ) ; } else System.out.println ( \"Poor Alex\" ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC089_C",
        "Python": "import sys , re\nfrom collections import deque , defaultdict , Counter\nfrom math import ceil , sqrt , hypot , factorial , pi , sin , cos , radians\nfrom itertools import accumulate , permutations , combinations , combinations_with_replacement , product , groupby\nfrom operator import itemgetter , mul\nfrom copy import deepcopy , copy\nfrom string import ascii_lowercase , ascii_uppercase , digits\nfrom bisect import bisect , bisect_left , insort , insort_left\nfrom fractions import gcd\nfrom heapq import heappush , heappop\nfrom functools import reduce\ndef input ( ) : return sys.stdin.readline ( ).strip ( )\ndef INT ( ) : return int ( input ( ) )\ndef MAP ( ) : return map ( int , input ( ).split ( ) )\ndef LIST ( ) : return list ( map ( int , input ( ).split ( ) ) )\ndef ZIP ( n ) : return zip ( * ( MAP ( ) for _ in range ( n ) ) )\nsys.setrecursionlimit ( 10 ** 9 )\nINF = float ( 'inf' )\nmod = 10 ** 9 + 7\nimport numpy as np\nN = INT ( )\nS = [ input ( ) for _ in range ( N ) ]\nmarch = [ \"M\" , \"A\" , \"R\" , \"C\" , \"H\" ]\nmarch_lis = [ 0 ] * 5\nfor s in S :\n    if s [ 0 ].upper ( ) in march :\n        march_lis [ march.index ( s [ 0 ].upper ( ) ) ] += 1\nans = 0\nfor x , y , z in combinations ( march_lis , 3 ) :\n    ans += x * y * z\nprint ( ans )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.Arrays ; import java.util.Scanner ; public class atcoder_ABC089_C { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskC solver = new TaskC ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class TaskC { public void solve ( int testNumber , Scanner in , PrintWriter out ) { int n = in.nextInt ( ) ; long [ ] cnt = new long [ 5 ] ; Arrays.fill ( cnt , 0 ) ; for ( int i = 0 ; i < n ; ++ i ) { String str = in.next ( ) ; if ( str.charAt ( 0 ) == 'M' ) { cnt [ 0 ] ++ ; } else if ( str.charAt ( 0 ) == 'A' ) { cnt [ 1 ] ++ ; } else if ( str.charAt ( 0 ) == 'R' ) { cnt [ 2 ] ++ ; } else if ( str.charAt ( 0 ) == 'C' ) { cnt [ 3 ] ++ ; } else if ( str.charAt ( 0 ) == 'H' ) { cnt [ 4 ] ++ ; } } long res = cnt [ 0 ] * cnt [ 1 ] * cnt [ 2 ] + cnt [ 0 ] * cnt [ 1 ] * cnt [ 3 ] + cnt [ 0 ] * cnt [ 1 ] * cnt [ 4 ] + cnt [ 0 ] * cnt [ 2 ] * cnt [ 3 ] + cnt [ 0 ] * cnt [ 2 ] * cnt [ 4 ] + cnt [ 0 ] * cnt [ 3 ] * cnt [ 4 ] + cnt [ 1 ] * cnt [ 2 ] * cnt [ 3 ] + cnt [ 1 ] * cnt [ 2 ] * cnt [ 4 ] + cnt [ 1 ] * cnt [ 3 ] * cnt [ 4 ] + cnt [ 2 ] * cnt [ 3 ] * cnt [ 4 ] ; out.println ( res ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC154_A",
        "Python": "import sys\ndef solve ( S : str , T : str , A : int , B : int , U : str ) :\n    if S == U :\n        A -= 1\n    if T == U :\n        B -= 1\n    print ( A , B )\n    return\ndef main ( ) :\n    def iterate_tokens ( ) :\n        for line in sys.stdin :\n            for word in line.split ( ) :\n                yield word\n    tokens = iterate_tokens ( )\n    S = next ( tokens )\n    T = next ( tokens )\n    A = int ( next ( tokens ) )\n    B = int ( next ( tokens ) )\n    U = next ( tokens )\n    solve ( S , T , A , B , U )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.IOException ; import java.util.* ; public class atcoder_ABC154_A { public static void main ( String [ ] args ) throws IOException { BufferedReader in = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String [ ] str = in.readLine ( ).split ( \" \" ) ; StringTokenizer st = new StringTokenizer ( in.readLine ( ) ) ; int a = Integer.parseInt ( st.nextToken ( ) ) ; int b = Integer.parseInt ( st.nextToken ( ) ) ; String u = in.readLine ( ) ; System.out.println ( u.equals ( str [ 0 ] ) ? ( a - 1 ) + \" \" + b : a + \" \" + ( b - 1 ) ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC043_B",
        "Python": "def twos_in_factorial ( n ) :\n    return n - bin ( n ).count ( '1' )\ndef parity_of_nCr ( n , i ) :\n    f = twos_in_factorial\n    return f ( n ) - f ( n - i ) - f ( i ) > 0\nif __name__ == \"__main__\" :\n    n = int ( input ( ) )\n    nums = list ( map ( lambda x : int ( x ) - 1 , input ( ).strip ( ) ) )\n    no_one = False\n    if 1 not in nums :\n        nums = [ num // 2 for num in nums ]\n        no_one = True\n    is_odd = False\n    for i , num in enumerate ( nums ) :\n        if not parity_of_nCr ( n - 1 , i ) and num & 1 :\n            is_odd ^= 1\n    if not is_odd :\n        print ( 0 )\n    else :\n        print ( 1 << no_one )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class atcoder_AGC043_B { private int cal ( String s , char c ) { int n = s.length ( ) ; int m = n - 1 ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) == c && ( m & i ) == i ) { ans ^= 1 ; } } return ans ; } private void solve ( ) { int n = sc.nextInt ( ) ; String s = sc.next ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i < n ; i ++ ) { sb.append ( Math.abs ( s.charAt ( i ) - s.charAt ( i - 1 ) ) ) ; } if ( n == 2 ) { out.println ( sb.charAt ( 0 ) ) ; return ; } s = sb.toString ( ) ; if ( s.contains ( \"1\" ) ) { out.println ( cal ( s , '1' ) ) ; } else { out.println ( cal ( s , '2' ) * 2 ) ; } } private static PrintWriter out ; private static MyScanner sc ; private static class MyScanner { BufferedReader br ; StringTokenizer st ; private MyScanner ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } } public static void main ( String [ ] args ) { out = new PrintWriter ( new BufferedOutputStream ( System.out ) ) ; sc = new MyScanner ( ) ; new atcoder_AGC043_B ( ).solve ( ) ; out.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC149_C",
        "Python": "X = int ( input ( ) )\nprime = [ True ] * ( 100010 )\nprime [ 0 ] = False ;\nprime [ 1 ] = False ;\nfor i in range ( 4 , 100010 , 2 ) :\n    prime [ i ] = False\ni = 3\nwhile ( i * i <= 100008 ) :\n    if prime [ i ] :\n        for j in range ( i + i , 100008 , i ) :\n            prime [ j ] = False\n    i += 2\nfor i in range ( X , 100008 ) :\n    if prime [ i ] :\n        print ( i )\n        break\n\n",
        "Java": "import java.util.Scanner ; import java.lang.Math ; public class atcoder_ABC149_C { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int x = Integer.parseInt ( stdIn.next ( ) ) ; if ( x != 2 && x % 2 == 0 ) x ++ ; while ( true ) { int i ; double sqrtNum = Math.sqrt ( x ) ; for ( i = 3 ; i <= sqrtNum ; i += 2 ) { if ( x % i == 0 ) break ; } if ( i > sqrtNum ) break ; x += 2 ; } System.out.println ( x ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC042_A",
        "Python": "ABC = tuple ( map ( int , input ( ).split ( ) ) )\nif ABC.count ( 5 ) == 2 :\n    print ( 'YES' if sum ( ABC ) == 17 else 'NO' )\nelse :\n    print ( 'NO' )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; public class atcoder_ABC042_A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String line = br.readLine ( ) ; String [ ] list = line.split ( \" \" ) ; int x = Integer.parseInt ( list [ 0 ] ) ; int a = Integer.parseInt ( list [ 1 ] ) ; int y = Integer.parseInt ( list [ 2 ] ) ; String h = \"NO\" ; if ( x == 5 | x == 7 | a == 5 | a == 7 | y == 5 | y == 7 ) { if ( x + y + a == 17 ) { h = \"YES\" ; } } System.out.println ( h ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC152_E",
        "Python": "from fractions import gcd\ndef lcm ( a , b ) :\n    return a * b / gcd ( a , b )\nMOD = 10 ** 9 + 7\nN = int ( input ( ) )\nA = list ( map ( int , input ( ).split ( ) ) )\n_lcm = 1\nfor a in A :\n    _lcm = _lcm * a // gcd ( _lcm , a )\nans = _lcm * sum ( [ pow ( s , MOD - 2 , MOD ) for s in A ] ) % MOD\nprint ( int ( ans % MOD ) )\n\n",
        "Java": "import java.math.* ; import java.util.* ; import java.util.function.* ; public class atcoder_ABC152_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } sc.close ( ) ; BigInteger lcm = BigInteger.ONE ; for ( int ai : A ) { BigInteger a = BigInteger.valueOf ( ai ) ; lcm = lcm.divide ( lcm.gcd ( a ) ).multiply ( a ) ; } long mod = 1000000007 ; long modLcm = lcm.remainder ( BigInteger.valueOf ( mod ) ).longValue ( ) ; long ans = 0 ; for ( int ai : A ) ans = ( ans + modDiv ( modLcm , ai , mod ) ) % mod ; System.out.println ( ans ) ; } private static long modDiv ( long a , long b , long mod ) { return ( a % mod ) * modInv ( b , mod ) % mod ; } private static long modInv ( long x , long mod ) { return modPow ( x , mod - 2 , mod ) ; } private static long modPow ( long b , long e , long mod ) { long ans = 1 ; long x = b % mod ; for ( long y = e ; y != 0 ; y >>= 1 ) { if ( ( y & 1 ) == 1 ) ans = ( ans * x ) % mod ; x = ( x * x ) % mod ; } return ans ; } }\n"
    },
    {
        "filename": "atcoder_AGC038_A",
        "Python": "import sys\ndef solve ( H : int , W : int , A : int , B : int ) :\n    answer = [ [ \"0\" ] * W for _ in range ( H ) ]\n    for i in range ( H ) :\n        for j in range ( W ) :\n            if i < B :\n                if j < A :\n                    answer [ i ] [ j ] = \"0\"\n                else :\n                    answer [ i ] [ j ] = \"1\"\n            else :\n                if j < A :\n                    answer [ i ] [ j ] = \"1\"\n                else :\n                    answer [ i ] [ j ] = \"0\"\n    for i in range ( H ) :\n        print ( ''.join ( answer [ i ] ) )\n    return\ndef main ( ) :\n    def iterate_tokens ( ) :\n        for line in sys.stdin :\n            for word in line.split ( ) :\n                yield word\n    tokens = iterate_tokens ( )\n    H = int ( next ( tokens ) )\n    W = int ( next ( tokens ) )\n    A = int ( next ( tokens ) )\n    B = int ( next ( tokens ) )\n    solve ( H , W , A , B )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.io.BufferedWriter ; import java.io.IOException ; import java.io.OutputStreamWriter ; import java.util.Scanner ; public class atcoder_AGC038_A { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System.in ) ; BufferedWriter bw = new BufferedWriter ( new OutputStreamWriter ( System.out ) ) ; int H = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; if ( W < 2 * A || H < 2 * B ) { System.out.println ( - 1 ) ; return ; } for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { if ( ( i < B && j < A ) || ( i >= B ) && ( j >= A ) ) bw.write ( \"0\" ) ; else bw.write ( \"1\" ) ; } bw.newLine ( ) ; } bw.flush ( ) ; } }\n"
    },
    {
        "filename": "codeforces_459_B",
        "Python": "n = int ( input ( ) )\nl1 = list ( map ( int , input ( ).split ( ) ) )\nl1.sort ( )\na = l1 [ - 1 ]\nb = l1 [ 0 ]\nif a == b :\n    print ( a - b , ( n ) * ( n - 1 ) // 2 )\nelse :\n    ac = l1.count ( a )\n    bc = l1.count ( b )\n    print ( a - b , ac * bc )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_459_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int N = in.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int n = 0 ; n < N ; n ++ ) { A [ n ] = in.nextInt ( ) ; } Arrays.sort ( A ) ; int min = A [ 0 ] ; int max = A [ N - 1 ] ; long mins = 0 ; long maxs = 0 ; for ( int value : A ) { if ( value == min ) mins ++ ; if ( value == max ) maxs ++ ; } if ( min == max ) { pw.println ( ( max - min ) + \" \" + mins * ( mins - 1 ) / 2 ) ; } else { pw.println ( ( max - min ) + \" \" + mins * maxs ) ; } pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }\n"
    },
    {
        "filename": "codeforces_544_B",
        "Python": "n , k = map ( int , input ( ).split ( ) )\nx = 0\nif k <= max ( n ** 2 // 2 , n ** 2 - ( n ** 2 // 2 ) ) :\n    print ( 'YES' )\n    for i in range ( n ) :\n        for j in range ( n ) :\n            if i % 2 == j % 2 and x < k :\n                print ( 'L' , end = '' )\n                x += 1\n            else : print ( 'S' , end = '' )\n        print ( )\nelse : print ( 'NO' )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_544_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int count = scan.nextInt ( ) ; printIsland ( n , count ) ; } public static void printIsland ( int n , int count ) { int a = ( n + 1 ) / 2 ; int b = n / 2 ; int max = a * a + b * b ; if ( count > max ) { System.out.println ( \"NO\" ) ; return ; } System.out.println ( \"YES\" ) ; for ( int i = 0 ; i < n ; i ++ ) { StringBuilder sb = new StringBuilder ( ) ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( i + j ) % 2 == 0 && count > 0 ) { sb.append ( 'L' ) ; count -- ; } else { sb.append ( 'S' ) ; } } System.out.println ( sb ) ; } } }\n"
    },
    {
        "filename": "codeforces_106_B",
        "Python": "n = int ( input ( ) )\ninput_array = [ ]\nfor i in range ( n ) :\n    S , R , H , C = map ( int , input ( ).split ( ) )\n    input_array.append ( ( S , R , H , C ) )\noutdated = [ ]\nfor i in range ( n ) :\n    for j in range ( n ) :\n        if ( input_array [ i ] [ 0 ] < input_array [ j ] [ 0 ] and input_array [ i ] [ 1 ] < input_array [ j ] [ 1 ] and input_array [ i ] [ 2 ] < input_array [ j ] [ 2 ] ) :\n            outdated.append ( input_array [ i ] )\noutdated = set ( outdated )\nminimum_cost = 100000\ninput_number = 0\nfor i in range ( n ) :\n    current_item = input_array [ i ]\n    cost = current_item [ 3 ]\n    if ( current_item not in outdated and cost < minimum_cost ) :\n        minimum_cost = current_item [ 3 ]\n        input_number = i + 1\nprint ( input_number )\n\n",
        "Java": "import java.util.Arrays ; import java.util.* ; import java.io.PrintWriter ; import java.util.Scanner ; public class codeforces_106_B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ; int n = input.nextInt ( ) ; int [ ] [ ] vec = new int [ n ] [ 4 ] ; for ( int i = 0 ; i < n ; i ++ ) { vec [ i ] [ 0 ] = input.nextInt ( ) ; vec [ i ] [ 1 ] = input.nextInt ( ) ; vec [ i ] [ 2 ] = input.nextInt ( ) ; vec [ i ] [ 3 ] = input.nextInt ( ) ; } int ans = 500 ; int ansprice = 20000 ; for ( int i = 0 ; i < n ; i ++ ) { int fl = 1 ; for ( int j = 0 ; j < n ; j ++ ) { if ( vec [ i ] [ 0 ] < vec [ j ] [ 0 ] && vec [ i ] [ 1 ] < vec [ j ] [ 1 ] && vec [ i ] [ 2 ] < vec [ j ] [ 2 ] ) { fl = 0 ; } } if ( fl == 1 ) { if ( vec [ i ] [ 3 ] < ansprice ) { ansprice = vec [ i ] [ 3 ] ; ans = i + 1 ; } } } System.out.println ( ans ) ; out.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC139_B",
        "Python": "a , b = map ( int , input ( ).split ( ) )\nhole = 1\ni = 0\ncheck = True\nwhile check :\n    if hole >= b :\n        check = False\n    else :\n        hole = a * ( i + 1 ) - i\n        i += 1\nprint ( i )\n\n",
        "Java": "import java.io.PrintWriter ; import java.util.Scanner ; public class atcoder_ABC139_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int A = Integer.parseInt ( sc.next ( ) ) ; int B = Integer.parseInt ( sc.next ( ) ) ; int amari = 0 ; int result = 0 ; result = ( B - 1 ) / ( A - 1 ) ; amari = ( B - 1 ) % ( A - 1 ) ; if ( amari != 0 ) { result += 1 ; } PrintWriter out = new PrintWriter ( System.out ) ; out.println ( result ) ; sc.close ( ) ; out.flush ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC158_B",
        "Python": "import sys\ninput = sys.stdin.readline\ndef I ( ) : return int ( input ( ) )\ndef MI ( ) : return map ( int , input ( ).split ( ) )\ndef LI ( ) : return list ( map ( int , input ( ).split ( ) ) )\ndef main ( ) :\n    mod = 10 ** 9 + 7\n    N , A , B = MI ( )\n    ans = 0\n    rep = N // ( A + B )\n    ans += rep * A\n    res = N - rep * ( A + B )\n    ans += min ( res , A )\n    print ( ans )\nmain ( )\n\n",
        "Java": "import java.util.* ; import java.lang.* ; public class atcoder_ABC158_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; long N = scan.nextLong ( ) ; long A = scan.nextLong ( ) ; long B = scan.nextLong ( ) ; long k = 0 ; if ( 1 <= N && N <= Math.pow ( 10 , 18 ) && 0 <= A && 0 <= B && 0 < A + B && A + B <= Math.pow ( 10 , 18 ) ) { if ( A + B <= N ) { k = N / ( A + B ) ; if ( N - k * ( A + B ) > A ) { System.out.println ( A * k + ( N - k * ( A + B ) ) - ( N - ( k * ( A + B ) + A ) ) ) ; } else { System.out.println ( A * k + ( N - k * ( A + B ) ) ) ; } } else if ( A + B > N && A <= N ) { System.out.println ( A ) ; } else { System.out.println ( N ) ; } } } }\n"
    },
    {
        "filename": "codeforces_581_A",
        "Python": "a , b = map ( int , input ( ).split ( ) )\nprint ( min ( a , b ) , ( max ( a , b ) - min ( a , b ) ) // 2 )\n\n",
        "Java": "import java.util.* ; public class codeforces_581_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a , b ; a = sc.nextInt ( ) ; b = sc.nextInt ( ) ; int count = 0 ; while ( true ) { if ( a > 0 && b > 0 ) { count ++ ; a -- ; b -- ; } else break ; } int ans = a / 2 + b / 2 ; System.out.println ( count + \" \" + ans ) ; } }\n"
    },
    {
        "filename": "codeforces_23_B",
        "Python": "n = int ( input ( ) )\nfor i in range ( n ) :\n    a = int ( input ( ) )\n    if a < 2 :\n        print ( 0 )\n    if a >= 2 :\n        print ( a - 2 )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_23_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int t = scan.nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scan.nextInt ( ) ; System.out.println ( maxLeft ( n ) ) ; } } public static int maxLeft ( int n ) { return n > 2 ? n - 2 : 0 ; } }\n"
    },
    {
        "filename": "atcoder_ABC174_C",
        "Python": "from sys import stdin , stdout , setrecursionlimit\nfrom math import gcd , ceil , sqrt\nfrom collections import Counter\nfrom bisect import bisect_left , bisect_right\nii1 = lambda : int ( stdin.readline ( ).strip ( ) )\nis1 = lambda : stdin.readline ( ).strip ( )\niia = lambda : list ( map ( int , stdin.readline ( ).strip ( ).split ( ) ) )\nisa = lambda : stdin.readline ( ).strip ( ).split ( )\nsetrecursionlimit ( 100000 )\nmod = 1000000007\nk = ii1 ( )\nt = 0\nfor i in range ( 1 , k + 1 ) :\n    t = ( t % k ) * 10 + 7\n    if t % k == 0 :\n        print ( i )\n        break\nelse :\n    print ( - 1 )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class atcoder_ABC174_C { private static final BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; private static final PrintWriter pw = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System.out ) ) ) ; private static StringTokenizer st ; private static int readInt ( ) throws IOException { while ( st == null || ! st.hasMoreTokens ( ) ) st = new StringTokenizer ( br.readLine ( ) ) ; return Integer.parseInt ( st.nextToken ( ) ) ; } public static void main ( String [ ] args ) throws IOException { pw.println ( solve ( ) ) ; pw.close ( ) ; } private static int solve ( ) throws IOException { int K = readInt ( ) ; if ( K % 2 == 0 || K % 5 == 0 ) return - 1 ; if ( K % 7 == 0 ) K /= 7 ; K *= 9 ; int ans = 1 ; int remainder = 10 % K ; while ( remainder != 1 ) { ans ++ ; remainder = remainder * 10 % K ; } return ans ; } }\n"
    },
    {
        "filename": "atcoder_AGC006_A",
        "Python": "n = int ( input ( ) )\ns = list ( input ( ) )\nt = list ( input ( ) )\nif s == t :\n    print ( n )\nelse :\n    cnt = 0\n    for i in range ( n ) :\n        for j in range ( n - i ) :\n            if s [ i + j ] != t [ j ] :\n                break\n            if j == n - i - 1 :\n                cnt = n - i\n    print ( 2 * n - cnt )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class atcoder_AGC006_A { static int N = 200 + 10 ; static int f [ ] = new int [ N ] ; static char b [ ] = new char [ N ] ; static void getFail ( char b [ ] , int m ) { int j = 0 ; f [ 0 ] = f [ 1 ] = 0 ; for ( int i = 2 ; i <= m ; i ++ ) { while ( j > 0 && b [ j + 1 ] != b [ i ] ) j = f [ j ] ; if ( b [ j + 1 ] == b [ i ] ) j ++ ; f [ i ] = j ; } } public static void main ( String [ ] args ) { InputReader in = new InputReader ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; String s1 = in.next ( ) , str = in.next ( ) ; int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) b [ ++ cnt ] = str.charAt ( i ) ; for ( int i = 0 ; i < n ; i ++ ) b [ ++ cnt ] = s1.charAt ( i ) ; getFail ( b , cnt ) ; int len = Math.min ( f [ cnt ] , Math.min ( n , n ) ) ; out.println ( 2 * n - len ) ; out.flush ( ) ; } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } public int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC165_C",
        "Python": "import sys\ndef solve ( N : int , M : int , Q : int , a : \"List[int]\" , b : \"List[int]\" , c : \"List[int]\" , d : \"List[int]\" ) :\n    res = 0\n    def rec ( A ) :\n        nonlocal res\n        if len ( A ) == N :\n            ans = 0\n            for i in range ( Q ) :\n                if A [ b [ i ] - 1 ] - A [ a [ i ] - 1 ] == c [ i ] :\n                    ans += d [ i ]\n            res = max ( res , ans )\n            return\n        last_max = 1 if len ( A ) == 0 else A [ - 1 ]\n        for i in range ( last_max , M + 1 ) :\n            rec ( A + [ i ] )\n    rec ( [ ] )\n    print ( res )\n    return\ndef main ( ) :\n    def iterate_tokens ( ) :\n        for line in sys.stdin :\n            for word in line.split ( ) :\n                yield word\n    tokens = iterate_tokens ( )\n    N = int ( next ( tokens ) )\n    M = int ( next ( tokens ) )\n    Q = int ( next ( tokens ) )\n    a = [ int ( ) ] * ( Q )\n    b = [ int ( ) ] * ( Q )\n    c = [ int ( ) ] * ( Q )\n    d = [ int ( ) ] * ( Q )\n    for i in range ( Q ) :\n        a [ i ] = int ( next ( tokens ) )\n        b [ i ] = int ( next ( tokens ) )\n        c [ i ] = int ( next ( tokens ) )\n        d [ i ] = int ( next ( tokens ) )\n    solve ( N , M , Q , a , b , c , d )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.Scanner ; public class atcoder_ABC165_C { static int [ ] a = null ; static int [ ] b = null ; static int [ ] c = null ; static int [ ] d = null ; static int n = 0 ; static int m = 0 ; static int q = 0 ; static long ans = - 100L ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; n = sc.nextInt ( ) ; m = sc.nextInt ( ) ; q = sc.nextInt ( ) ; a = new int [ q ] ; b = new int [ q ] ; c = new int [ q ] ; d = new int [ q ] ; for ( int i = 0 ; i < q ; ++ i ) { a [ i ] = sc.nextInt ( ) - 1 ; b [ i ] = sc.nextInt ( ) - 1 ; c [ i ] = sc.nextInt ( ) ; d [ i ] = sc.nextInt ( ) ; } dfs ( new ArrayList < Integer > ( ) ) ; System.out.println ( ans ) ; } public static void dfs ( ArrayList < Integer > list ) { if ( list.size ( ) == n ) { long score = 0L ; for ( int i = 0 ; i < q ; ++ i ) { score += ( list.get ( b [ i ] ) - list.get ( a [ i ] ) == c [ i ] ) ? d [ i ] : 0L ; } ans = Math.max ( ans , score ) ; return ; } if ( ! list.isEmpty ( ) ) { for ( int num = list.get ( list.size ( ) - 1 ) ; num <= m ; ++ num ) { list.add ( num ) ; dfs ( list ) ; list.remove ( list.size ( ) - 1 ) ; } } else { for ( int num = 1 ; num <= m ; ++ num ) { list.add ( num ) ; dfs ( list ) ; list.remove ( list.size ( ) - 1 ) ; } } } }\n"
    },
    {
        "filename": "codeforces_242_B",
        "Python": "import os , sys , io , math\nfrom tokenize import Triple\nfrom math import *\nI = lambda : [ * map ( int , sys.stdin.readline ( ).split ( ) ) ]\nIS = lambda : input ( )\nIN = lambda : int ( input ( ) )\nIF = lambda : float ( input ( ) )\nn = IN ( )\nid = 0\nl , r = map ( int , input ( ).split ( ) )\nfor i in range ( 1 , n ) :\n    li , ri = map ( int , input ( ).split ( ) )\n    if li <= l and r <= ri : id = i\n    elif li < l or r < ri : id = n\n    l = min ( l , li )\n    r = max ( r , ri )\nprint ( - 1 if id == n else id + 1 )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.Scanner ; import java.lang.Math ; public class codeforces_242_B { static final int INF = ( int ) 1e9 + 5 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n ; n = sc.nextInt ( ) ; ArrayList < Integer > a = new ArrayList < > ( ) ; ArrayList < Integer > b = new ArrayList < > ( ) ; int left = INF , right = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a.add ( sc.nextInt ( ) ) ; b.add ( sc.nextInt ( ) ) ; left = Math.min ( left , a.get ( i ) ) ; right = Math.max ( right , b.get ( i ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( left == a.get ( i ) && right == b.get ( i ) ) { System.out.println ( ++ i ) ; return ; } } System.out.println ( - 1 ) ; } }\n"
    },
    {
        "filename": "codeforces_412_A",
        "Python": "n , k = map ( int , input ( ).split ( ) )\nv = input ( )\nd = [ \"LEFT\" , \"RIGHT\" ]\nf = k - 1 < n - k\nm = min ( k - 1 , n - k )\na = [ ]\nfor i in range ( 0 , m ) :\n    a.append ( d [ not f ] )\nfor i in v [ : : - 1 + 2 * f ] :\n    a.append ( \"PRINT \" + i )\n    a.append ( d [ f ] )\nprint ( * a [ : - 1 ] , sep = \"\\n\" )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_412_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) , k = sc.nextInt ( ) ; String a = sc.next ( ) ; if ( k > n / 2 ) { while ( k < n ) { System.out.println ( \"RIGHT\" ) ; k ++ ; } } else { while ( k > 1 ) { System.out.println ( \"LEFT\" ) ; k -- ; } } if ( k == 1 ) { for ( int i = 0 ; i < a.length ( ) ; i ++ ) { System.out.println ( \"PRINT \" + a.charAt ( i ) ) ; if ( ( i + 1 ) < a.length ( ) ) { System.out.println ( \"RIGHT\" ) ; } } } else { for ( int i = a.length ( ) - 1 ; i >= 0 ; i -- ) { System.out.println ( \"PRINT \" + a.charAt ( i ) ) ; if ( ( i - 1 ) >= 0 ) { System.out.println ( \"LEFT\" ) ; } } } } }\n"
    },
    {
        "filename": "codeforces_469_A",
        "Python": "max_level = int ( input ( ) )\nx = list ( map ( int , input ( ).split ( ) ) )\ny = list ( map ( int , input ( ).split ( ) ) )\nx.pop ( 0 )\ny.pop ( 0 )\nx = set ( x )\ny = set ( y )\nif 0 in x :\n    x.discard ( 0 )\nelif 0 in y :\n    y.discard ( 0 )\nz = x.union ( y )\nif len ( z ) != max_level :\n    print ( \"Oh, my keyboard!\" )\nelse :\n    print ( \"I become the guy.\" )\n\n",
        "Java": "import java.util.* ; public class codeforces_469_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int levels = sc.nextInt ( ) ; int sum = 0 ; int sum2 = 0 ; int sum3 = 0 ; int [ ] arr = new int [ levels ] ; int count = 0 ; for ( int i = 0 ; i < levels ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int level2 = sc.nextInt ( ) ; int level3 = levels + level2 ; int [ ] arr2 = new int [ level3 ] ; for ( int i = 0 ; i < arr.length ; i ++ ) { arr2 [ i ] = arr [ i ] ; } for ( int i = arr.length ; i < level3 ; i ++ ) { arr2 [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < arr2.length ; i ++ ) { } int [ ] arr3 = new int [ n ] ; int j = 0 ; for ( int i = 0 ; i < n ; i ++ ) { arr3 [ i ] = ++ j ; } for ( int i = 0 ; i < n ; i ++ ) { for ( int x = 0 ; x < arr2.length ; x ++ ) { if ( arr3 [ i ] == arr2 [ x ] ) { count ++ ; break ; } } } if ( count == n ) { System.out.println ( \"I become the guy.\" ) ; } else { System.out.println ( \"Oh, my keyboard!\" ) ; } } }\n"
    },
    {
        "filename": "codeforces_154_A",
        "Python": "s = input ( )\nn = int ( input ( ) )\nans = 0\nfor i in range ( n ) :\n    x = input ( )\n    a , b = 0 , 0\n    for j in s :\n        if j == x [ 0 ] :\n            a += 1\n        elif j == x [ 1 ] :\n            b += 1\n        else :\n            ans = ans + min ( a , b )\n            a , b = 0 , 0\n    ans = ans + min ( a , b )\nprint ( ans )\n\n",
        "Java": "import java.util.* ; import java.io.* ; import java.math.* ; public class codeforces_154_A { public static void main ( String hi [ ] ) throws Exception { BufferedReader infile = new BufferedReader ( new InputStreamReader ( System.in ) ) ; char [ ] arr = infile.readLine ( ).toCharArray ( ) ; int N = arr.length ; HashSet < String > set = new HashSet < String > ( ) ; int K = Integer.parseInt ( infile.readLine ( ) ) ; int res = 0 ; for ( int k = 0 ; k < K ; k ++ ) { String input = infile.readLine ( ) ; int a = 0 ; int b = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( arr [ i ] == input.charAt ( 0 ) ) a ++ ; else if ( arr [ i ] == input.charAt ( 1 ) ) b ++ ; else { res += Math.min ( a , b ) ; a = b = 0 ; } } res += Math.min ( a , b ) ; } System.out.println ( res ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC112_A",
        "Python": "age = int ( input ( ) )\nif age == 1 :\n    print ( 'Hello World' )\nelse :\n    a , b = [ int ( input ( ) ) for i in range ( 2 ) ]\n    print ( a + b )\n\n",
        "Java": "import java.io.* ; import java.util.* ; import java.util.stream.* ; public class atcoder_ABC112_A { private static BufferedReader br = null ; public static void main ( String [ ] args ) { int n = Integer.parseInt ( read ( 1 ) [ 0 ] ) ; if ( n == 1 ) { System.out.println ( \"Hello World\" ) ; } else { String [ ] strs = read ( 2 ) ; System.out.println ( Integer.parseInt ( strs [ 0 ] ) + Integer.parseInt ( strs [ 1 ] ) ) ; } } private static String [ ] read ( int len ) { List < String > strList = new ArrayList < > ( ) ; try { if ( br == null ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } for ( int i = 0 ; i < len ; i ++ ) { strList.add ( br.readLine ( ) ) ; } } catch ( IOException e ) { } return strList.toArray ( new String [ 0 ] ) ; } private static void close ( ) { try { if ( br != null ) { br.close ( ) ; } } catch ( IOException e ) { } } }\n"
    },
    {
        "filename": "codeforces_632_B",
        "Python": "def main ( ) :\n    input ( )\n    pieces = tuple ( zip ( map ( int , input ( ).split ( ) ) , input ( ) ) )\n    return Bob_sMaxStrength ( pieces )\ndef Bob_sMaxStrength ( pieces ) :\n    pScore = sScore = pMaxScore = sMaxScore = sum ( piece [ 0 ] for piece in pieces if piece [ 1 ] == 'B' )\n    for piece in pieces :\n        if piece [ 1 ] == 'A' :\n            pScore += piece [ 0 ]\n            if pScore > pMaxScore :\n                pMaxScore = pScore\n        else :\n            pScore -= piece [ 0 ]\n    for i in range ( len ( pieces ) - 1 , - 1 , - 1 ) :\n        if pieces [ i ] [ 1 ] == 'A' :\n            sScore += pieces [ i ] [ 0 ]\n            if sScore > sMaxScore :\n                sMaxScore = sScore\n        else :\n            sScore -= pieces [ i ] [ 0 ]\n    if pMaxScore > sMaxScore :\n        return pMaxScore\n    return sMaxScore\nif __name__ == '__main__' :\n    print ( main ( ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_632_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } String s = sc.next ( ) ; long sum = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { char ch = s.charAt ( i ) ; if ( ch == 'B' ) sum += a [ i ] ; } long ans = sum ; long sum1 = sum ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == 'A' ) sum1 += a [ i ] ; else sum1 -= a [ i ] ; ans = Math.max ( ans , sum1 ) ; } sum1 = sum ; for ( int i = s.length ( ) - 1 ; i >= 0 ; i -- ) { if ( s.charAt ( i ) == 'A' ) sum1 += a [ i ] ; else sum1 -= a [ i ] ; ans = Math.max ( ans , sum1 ) ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ARC102_C",
        "Python": "K , N = list ( map ( int , input ( ).split ( ) ) )\ndprint = lambda * x : x\ndef cmb ( n , r , mod ) :\n    if ( r < 0 or r > n ) :\n        return 0\n    r = min ( r , n - r )\n    return g1 [ n ] * g2 [ r ] * g2 [ n - r ] % mod\nmod = 998244353\n__N = 8000\ng1 = [ 1 , 1 ]\ng2 = [ 1 , 1 ]\ninverse = [ 0 , 1 ]\nfor i in range ( 2 , __N + 1 ) :\n    g1.append ( ( g1 [ - 1 ] * i ) % mod )\n    inverse.append ( ( - inverse [ mod % i ] * ( mod // i ) ) % mod )\n    g2.append ( ( g2 [ - 1 ] * inverse [ - 1 ] ) % mod )\ndef kumiawase ( p , q ) :\n    return cmb ( p + q - 1 , q - 1 , mod )\ndef solve ( n ) :\n    assert n <= K + 1\n    ans = 0\n    kumi = ( n - 1 ) // 2\n    for p in range ( kumi + 1 ) :\n        if p > N :\n            break\n        ans += 2 ** p * cmb ( kumi , p , mod ) * kumiawase ( N - p , p + ( K - kumi * 2 - int ( n % 2 == 0 ) ) )\n        if n % 2 == 0 and N - p - 1 >= 0 :\n            ans += 2 ** p * cmb ( kumi , p , mod ) * kumiawase ( N - p - 1 , p + ( K - kumi * 2 - int ( n % 2 == 0 ) ) )\n    return ans\nans = [ ]\nfor i in range ( 2 , 2 * K + 1 ) :\n    if i <= K + 1 :\n        tmp = solve ( i ) % 998244353\n        ans.append ( tmp )\n        print ( tmp )\n    else :\n        print ( ans [ - i + K ] )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ARC102_C { static int mod = 998244353 ; static long [ ] [ ] nchoosek ; public static void main ( String [ ] args ) { nchoosek = new long [ 4001 ] [ 4001 ] ; for ( int i = 0 ; i < nchoosek.length ; i ++ ) { nchoosek [ i ] [ 0 ] = nchoosek [ i ] [ i ] = 1 ; } for ( int i = 2 ; i < nchoosek.length ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { nchoosek [ i ] [ j ] = ( nchoosek [ i - 1 ] [ j ] + nchoosek [ i - 1 ] [ j - 1 ] ) % mod ; } } Scanner sc = new Scanner ( System.in ) ; int k = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; for ( int i = 2 ; i <= 2 * k ; i ++ ) { int pairs ; if ( i > k ) { pairs = k - i / 2 ; } else { pairs = ( i - 1 ) / 2 ; } int active = k - 2 * pairs ; if ( i % 2 == 0 ) active -= 1 ; long times2 = 1 ; long total = 0 ; for ( int j = 0 ; j <= pairs ; j ++ ) { long choice = times2 * nchoosek [ pairs ] [ j ] % mod ; times2 = times2 * 2 % mod ; if ( active + j - 1 < 0 ) continue ; total += choice * nchoosek [ n + active - 1 ] [ active + j - 1 ] ; if ( i % 2 == 0 ) { total += choice * nchoosek [ n + active - 2 ] [ active + j - 1 ] ; } total %= mod ; } System.out.println ( total ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC168_C",
        "Python": "a , b , h , m = map ( int , input ( ).split ( ) )\nimport math\nC = abs ( 360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m )\nif C > 180 :\n    C = 360 - C\ncosC = math.cos ( math.radians ( C ) )\nprint ( math.sqrt ( a ** 2 + b ** 2 - 2 * a * b * cosC ) )\n\n",
        "Java": "import java.util.* ; import java.math.BigDecimal ; public class atcoder_ABC168_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int H = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; BigDecimal AA = new BigDecimal ( A ) ; BigDecimal BB = new BigDecimal ( B ) ; BigDecimal HH = new BigDecimal ( H ) ; BigDecimal MM = new BigDecimal ( M ) ; BigDecimal ans2 ; BigDecimal kaku ; BigDecimal mkaku ; BigDecimal hkaku ; BigDecimal AA2 ; BigDecimal BB2 ; BigDecimal CC ; BigDecimal DD ; double dkaku ; double dans2 ; mkaku = MM.multiply ( BigDecimal.valueOf ( 6 ) ) ; hkaku = HH.multiply ( BigDecimal.valueOf ( 30 ) ) ; hkaku = hkaku.add ( BigDecimal.valueOf ( ( double ) M / 2 ) ) ; kaku = mkaku.subtract ( hkaku ) ; dkaku = Math.abs ( Math.toRadians ( kaku.doubleValue ( ) ) ) ; AA2 = AA.multiply ( AA ) ; BB2 = BB.multiply ( BB ) ; CC = AA2.add ( BB2 ) ; DD = BigDecimal.valueOf ( Math.cos ( dkaku ) ) ; DD = DD.multiply ( BigDecimal.valueOf ( 2 ) ) ; DD = DD.multiply ( AA ) ; DD = DD.multiply ( BB ) ; ans2 = CC.subtract ( DD ) ; dans2 = ans2.doubleValue ( ) ; double ans = Math.sqrt ( dans2 ) ; System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC172_D",
        "Python": "import sys\ndef rs ( ) : return sys.stdin.readline ( ).rstrip ( )\ndef ri ( ) : return int ( rs ( ) )\ndef rs_ ( ) : return [ _ for _ in rs ( ).split ( ) ]\ndef ri_ ( ) : return [ int ( _ ) for _ in rs ( ).split ( ) ]\nN = ri ( )\nans = 0\nfor i in range ( 1 , N + 1 ) :\n    ans += i * ( N // i ) * ( N // i + 1 ) // 2\nprint ( ans )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC172_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long ans = 0 ; for ( int i = 1 ; i < n + 1 ; i ++ ) { ans += ( long ) i * ( ( long ) n / ( long ) i ) * ( ( ( long ) n / ( long ) i ) + 1 ) / 2 ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC126_E",
        "Python": "import sys\nfrom collections import deque\nsys.setrecursionlimit ( 10 ** 9 )\nINF = 10 ** 18\ndef input ( ) :\n    return sys.stdin.readline ( ).rstrip ( )\ndef main ( ) :\n    N , M = map ( int , input ( ).split ( ) )\n    edge = [ [ ] for _ in range ( N ) ]\n    for i in range ( M ) :\n        X , Y , Z = map ( lambda x : int ( x ) - 1 , input ( ).split ( ) )\n        edge [ X ].append ( Y )\n        edge [ Y ].append ( X )\n    used = [ False ] * N\n    ans = 0\n    for i in range ( N ) :\n        if not used [ i ] :\n            ans += 1\n            queue = deque ( )\n            queue.append ( i )\n            while queue :\n                node = queue.popleft ( )\n                used [ node ] = True\n                for nextnode in edge [ node ] :\n                    if not used [ nextnode ] :\n                        queue.append ( nextnode )\n    print ( ans )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC126_E { Scanner sc = new Scanner ( System.in ) ; final int MOD = 1000000007 ; void doIt ( ) { int n = sc.nextInt ( ) ; UnionFindTree utf = new UnionFindTree ( n ) ; int m = sc.nextInt ( ) ; for ( int i = 0 ; i < m ; i ++ ) { int x = sc.nextInt ( ) - 1 ; int y = sc.nextInt ( ) - 1 ; int z = sc.nextInt ( ) ; utf.unite ( x , y ) ; } int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( utf.par [ i ] == i ) { cnt ++ ; } } System.out.println ( cnt ) ; } class UnionFindTree { int n ; int [ ] par ; int [ ] rank ; UnionFindTree ( int n ) { this.n = n ; par = new int [ n ] ; rank = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { par [ i ] = i ; rank [ i ] = 0 ; } } int find ( int x ) { if ( par [ x ] == x ) { return x ; } else { return par [ x ] = find ( par [ x ] ) ; } } void unite ( int x , int y ) { x = find ( x ) ; y = find ( y ) ; if ( x == y ) return ; if ( rank [ x ] < rank [ y ] ) par [ x ] = y ; else { par [ y ] = x ; if ( rank [ x ] == rank [ y ] ) rank [ x ] ++ ; } } boolean same ( int x , int y ) { return find ( x ) == find ( y ) ; } } public static void main ( String [ ] args ) { new atcoder_ABC126_E ( ).doIt ( ) ; } }\n"
    },
    {
        "filename": "codeforces_462_B",
        "Python": "n , k = map ( int , input ( ).split ( ) )\ns = input ( )\ncount = [ 0 ] * 26\nfor c in s :\n    count [ ord ( c ) - ord ( \"A\" ) ] += 1\ncount.sort ( reverse = True )\nres = 0\nfor i in range ( 26 ) :\n    if count [ i ] >= k :\n        res += k * k\n        print ( res )\n        exit ( )\n    k -= count [ i ]\n    res += count [ i ] ** 2\nprint ( res )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_462_B { public static void main ( String [ ] args ) throws Exception { BufferedReader f = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter out = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System.out ) ) ) ; StringTokenizer st = new StringTokenizer ( f.readLine ( ) ) ; int n = Integer.parseInt ( st.nextToken ( ) ) ; int k = Integer.parseInt ( st.nextToken ( ) ) ; c462b [ ] cards = new c462b [ 26 ] ; for ( int i = 0 ; i < 26 ; i ++ ) { cards [ i ] = new c462b ( ) ; } String s = f.readLine ( ) ; for ( int t = 0 ; t < n ; t ++ ) { cards [ s.charAt ( t ) - 'A' ].left ++ ; } long ans = 0 ; for ( int i = 0 ; i < k ; i ++ ) { Arrays.sort ( cards ) ; long change = Math.min ( cards [ 25 ].left , k - i ) ; ans += change * change ; cards [ 25 ].left -= change ; i += change - 1 ; } out.println ( ans ) ; out.close ( ) ; } } class c462b implements Comparable { int left = 0 ; @ Override public int compareTo ( Object o ) { return left - ( ( c462b ) o ).left ; } }\n"
    },
    {
        "filename": "atcoder_ABC174_E",
        "Python": "def check ( lis , k , mid ) :\n    for i in lis :\n        if ( i % mid == 0 ) :\n            k += 1\n        k -= ( i // mid )\n    return k >= 0\nn , k = map ( int , input ( ).split ( ) )\nlis = list ( map ( int , input ( ).split ( ) ) )\na , b = 1 , max ( lis )\nans = b\nwhile ( a <= b ) :\n    mid = ( a + b ) // 2\n    if ( check ( lis , k , mid ) ) :\n        ans = mid\n        b = mid - 1\n    else :\n        a = mid + 1\nprint ( ans )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStream ; import java.io.InputStreamReader ; import java.io.OutputStream ; import java.io.PrintWriter ; import java.util.StringTokenizer ; public class atcoder_ABC174_E { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; Solution sol = new Solution ( ) ; sol.solve ( in , out ) ; out.close ( ) ; } private static class Solution { private void solve ( InputReader in , PrintWriter out ) { int n = in.nextInt ( ) , k = in.nextInt ( ) ; int [ ] logsLength = in.readArray ( n ) ; int min = 1 , max = ( int ) 1e9 + 1000 ; while ( min < max ) { int mid = ( min + max ) / 2 ; if ( nei ( mid , logsLength , k ) ) max = mid ; else min = mid + 1 ; } out.println ( min ) ; } private boolean nei ( int mid , int [ ] logsLength , int k ) { for ( int log : logsLength ) k -= ( log + mid - 1 ) / mid - 1 ; return k >= 0 ; } } private static class InputReader { private BufferedReader reader ; private StringTokenizer tokenizer ; private InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } private String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } private int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } private int [ ] readArray ( int n ) { int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; ++ i ) a [ i ] = nextInt ( ) ; return a ; } } }\n"
    },
    {
        "filename": "codeforces_678_A",
        "Python": "vamshi , z = map ( int , input ( ).split ( ) )\nprint ( ( vamshi // z + 1 ) * z )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_678_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int k = scan.nextInt ( ) ; n ++ ; int z = 0 ; if ( n % k != 0 ) z = k - n % k ; System.out.println ( n + z ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC178_A",
        "Python": "import os\nfrom sys import stdin , stdout\ndef solve ( tc ) :\n    a = int ( stdin.readline ( ).strip ( ) )\n    print ( 1 if a == 0 else 0 )\ntcs = 1\ntc = 1\nwhile tc <= tcs :\n    solve ( tc )\n    tc += 1\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class atcoder_ABC178_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int x = Integer.parseInt ( scan.next ( ) ) ; boolean bool = x == 1 ? true : false ; int result = ! bool ? 1 : 0 ; PrintWriter out = new PrintWriter ( System.out ) ; out.println ( result ) ; out.flush ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC124_A",
        "Python": "a , b = map ( int , input ( ).split ( ) )\nc = 0\nfor i in range ( 2 ) :\n    c += max ( a , b )\n    if a >= b :\n        a -= 1\n    else :\n        b -= 1\nprint ( c )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC124_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = Integer.parseInt ( sc.next ( ) ) ; int b = Integer.parseInt ( sc.next ( ) ) ; ; int sum = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) { if ( a >= b ) { sum += a ; a = a - 1 ; } else { sum += b ; b = b - 1 ; } } System.out.println ( sum ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC125_A",
        "Python": "a , b , t = map ( int , input ( ).split ( ) )\ncookie = 0\ntime = a\nwhile time <= t + 0.5 :\n    cookie += b\n    time += a\nprint ( cookie )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC125_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int sec = sc.nextInt ( ) ; int per_num = sc.nextInt ( ) ; double max_sec = ( double ) sc.nextInt ( ) + 0.5 ; int ans_num = 0 ; for ( int i = sec ; i < max_sec ; i += sec ) { ans_num += per_num ; } System.out.println ( ans_num ) ; } }\n"
    },
    {
        "filename": "codeforces_55_B",
        "Python": "def rememberTheNumber ( nums , i , operations , ans ) :\n    if i >= 3 :\n        return\n    for j in range ( 4 ) :\n        for k in range ( j + 1 , 4 ) :\n            if ( nums [ j ] != - 1 and nums [ k ] != - 1 ) :\n                s = nums [ j ]\n                nums [ j ] = - 1\n                t = nums [ k ]\n                if ( operations [ i ] == '+' ) :\n                    nums [ k ] = s + t\n                elif ( operations [ i ] == '*' ) :\n                    nums [ k ] = s * t\n                if ( i == 2 and nums [ k ] < ans [ 0 ] ) :\n                    ans [ 0 ] = nums [ k ]\n                rememberTheNumber ( nums , i + 1 , operations , ans )\n                nums [ j ] = s\n                nums [ k ] = t\nnums = list ( map ( int , input ( ).split ( ) ) )\noperations = list ( map ( str , input ( ).split ( ) ) )\nans = [ 10000000000000000000000000 ]\nrememberTheNumber ( nums , 0 , operations , ans )\nprint ( ans [ 0 ] )\n\n",
        "Java": "import java.util.* ; public class codeforces_55_B { static long min ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; min = Long.MAX_VALUE ; ArrayList < Long > arr = new ArrayList < > ( ) ; for ( int i = 0 ; i < 4 ; i ++ ) { arr.add ( sc.nextLong ( ) ) ; } String [ ] ops = new String [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { ops [ i ] = sc.next ( ) ; } util ( arr , ops , 0 ) ; System.out.println ( min ) ; } public static void util ( ArrayList < Long > arr , String [ ] ops , int idx ) { if ( idx == 3 ) { min = Math.min ( min , arr.get ( 0 ) ) ; return ; } for ( int i = 0 ; i < arr.size ( ) ; i ++ ) { for ( int j = i + 1 ; j < arr.size ( ) ; j ++ ) { ArrayList < Long > a = new ArrayList < > ( ) ; for ( int k = 0 ; k < arr.size ( ) ; k ++ ) { if ( k != j && k != i ) { a.add ( arr.get ( k ) ) ; } } long res ; if ( idx < 3 && ops [ idx ].equals ( \"+\" ) ) { res = arr.get ( i ) + arr.get ( j ) ; } else { res = arr.get ( i ) * arr.get ( j ) ; } a.add ( res ) ; util ( a , ops , idx + 1 ) ; } } } }\n"
    },
    {
        "filename": "atcoder_AGC014_D",
        "Python": "import sys\nfrom collections import deque\ninput = sys.stdin.buffer.readline\nN = int ( input ( ) )\nadj = [ [ ] for _ in range ( N + 1 ) ]\nfor _ in range ( N - 1 ) :\n    a , b = map ( int , input ( ).split ( ) )\n    adj [ a ].append ( b )\n    adj [ b ].append ( a )\nque = deque ( )\nque.append ( 1 )\nseen = [ 0 ] * ( N + 1 )\nseen [ 1 ] = 1\npar = [ 0 ] * ( N + 1 )\nchild_num = [ 0 ] * ( N + 1 )\nwhile que :\n    v = que.popleft ( )\n    for u in adj [ v ] :\n        if seen [ u ] == 0 :\n            seen [ u ] = 1\n            par [ u ] = v\n            child_num [ v ] += 1\n            que.append ( u )\nseq = deque ( )\nfor i in range ( 1 , N + 1 ) :\n    if child_num [ i ] == 0 :\n        seq.append ( i )\nwhile seq :\n    c = seq.pop ( )\n    seen [ c ] = 0\n    if seen [ par [ c ] ] == 0 :\n        print ( 'First' )\n        exit ( )\n    seen [ par [ c ] ] = 0\n    child_num [ par [ par [ c ] ] ] -= 1\n    if child_num [ par [ par [ c ] ] ] == 0 :\n        seq.append ( par [ par [ c ] ] )\nprint ( 'Second' )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class atcoder_AGC014_D { static ArrayList < Integer > [ ] g ; static int maxMatching ( int v , int p ) { int a = 0 ; int o = 0 ; for ( int w : g [ v ] ) { if ( w == p ) continue ; int r = maxMatching ( w , v ) ; a += r / 2 ; o += r % 2 ; } return 2 * a + Math.min ( 1 , o ) + 1 ; } @ SuppressWarnings ( \"unchecked\" ) public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System.out ) ) ; int n = sc.nextInt ( ) ; g = new ArrayList [ n ] ; Arrays.setAll ( g , x -> new ArrayList < Integer > ( ) ) ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; g [ a ].add ( b ) ; g [ b ].add ( a ) ; } int m = maxMatching ( 0 , - 1 ) / 2 ; out.println ( 2 * m == n ? \"Second\" : \"First\" ) ; out.close ( ) ; } public static PrintWriter out ; public static class MyScanner { BufferedReader br ; StringTokenizer st ; public MyScanner ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }\n"
    },
    {
        "filename": "atcoder_AGC002_A",
        "Python": "import bisect , collections , copy , heapq , itertools , math , numpy , string\nimport sys\ndef S ( ) : return sys.stdin.readline ( ).rstrip ( )\ndef I ( ) : return int ( sys.stdin.readline ( ).rstrip ( ) )\ndef LI ( ) : return list ( map ( int , sys.stdin.readline ( ).rstrip ( ).split ( ) ) )\ndef LS ( ) : return list ( sys.stdin.readline ( ).rstrip ( ).split ( ) )\na , b = LI ( )\nif a > 0 :\n    print ( 'Positive' )\nelif a <= 0 and b >= 0 :\n    print ( 'Zero' )\nelse :\n    if ( a + b ) % 2 == 0 :\n        print ( 'Negative' )\n    else :\n        print ( 'Positive' )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_AGC002_A { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int a = scanner.nextInt ( ) ; int b = scanner.nextInt ( ) ; if ( a > 0 ) { System.out.println ( \"Positive\" ) ; } else if ( b >= 0 ) { System.out.println ( \"Zero\" ) ; } else if ( ( b - a + 1 ) % 2 == 0 ) { System.out.println ( \"Positive\" ) ; } else { System.out.println ( \"Negative\" ) ; } } }\n"
    },
    {
        "filename": "codeforces_92_A",
        "Python": "n , m = map ( int , input ( ).split ( ) )\ni = 1\nwhile m >= i :\n    m -= i\n    i = ( i % n ) + 1\nprint ( m )\n\n",
        "Java": "import java.util.* ; public class codeforces_92_A { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System.in ) ; int n = scn.nextInt ( ) ; int k = scn.nextInt ( ) ; int i = 1 , req = 1 ; while ( k - req >= 0 ) { if ( k - req >= 0 ) { k = k - req ; } else { break ; } i ++ ; if ( i % n != 0 ) req = i % n ; else req = n ; } System.out.println ( k ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC105_D",
        "Python": "from sys import stdin\nfrom collections import Counter\nimport numpy as np\nN , M = [ int ( x ) for x in stdin.readline ( ).split ( ) ]\nA = np.array ( [ int ( a ) for a in stdin.readline ( ).split ( ) ] , dtype = np.int64 )\ncum_remainders = ( np.hstack ( [ 0 , A ] ) % M ).cumsum ( ) % M\nremainder_counts = Counter ( cum_remainders )\ncombinations = 0\nfor count in remainder_counts.values ( ) :\n    combinations += count * ( count - 1 ) // 2\nprint ( combinations )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.StringTokenizer ; import java.util.HashMap ; import java.io.IOException ; import java.util.InputMismatchException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; public class atcoder_ABC105_D { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskD solver = new TaskD ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class TaskD { public void solve ( int testNumber , InputReader in , PrintWriter out ) { int n = in.nextInt ( ) ; int m = in.nextInt ( ) ; int [ ] a = in.nextIntArray ( n ) ; HashMap < Integer , Integer > dp = new HashMap < > ( ) ; long ans = 0 ; int base = 0 ; for ( int i = 0 ; i < n ; i ++ ) { base = ( base - a [ i ] % m + m ) % m ; dp.merge ( ( base + a [ i ] ) % m , 1 , Integer :: sum ) ; ans += dp.getOrDefault ( base , 0 ) ; } out.println ( ans ) ; } } static class InputReader { private BufferedReader br ; private StringTokenizer st ; public InputReader ( InputStream inputStream ) { br = new BufferedReader ( new InputStreamReader ( inputStream ) ) ; st = new StringTokenizer ( \"\" ) ; } public String nextString ( ) { while ( ! st.hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) , \" \" ) ; } catch ( IOException e ) { throw new InputMismatchException ( ) ; } } return st.nextToken ( ) ; } public int nextInt ( ) { return Integer.parseInt ( nextString ( ) ) ; } public int [ ] nextIntArray ( int n ) { int [ ] res = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { res [ i ] = nextInt ( ) ; } return res ; } } }\n"
    },
    {
        "filename": "atcoder_ABC150_D",
        "Python": "import fractions\nimport math\nn , num = map ( int , input ( ).split ( ) )\nnum_set = set ( map ( lambda x : int ( x ) , input ( ).split ( ) ) )\ntwo_times_set = set ( )\nfor i in num_set :\n    for j in range ( 1 , 30 ) :\n        i //= 2\n        if i % 2 != 0 :\n            two_times_set.add ( j )\n            break\n    if len ( two_times_set ) != 1 :\n        print ( 0 )\n        break\nelse :\n    num_list = list ( num_set )\n    lcm = num_list [ 0 ]\n    for i in range ( 1 , len ( num_list ) ) :\n        lcm = lcm * num_list [ i ] // fractions.gcd ( lcm , num_list [ i ] )\n    print ( ( num - lcm // 2 ) // ( lcm ) + 1 )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC150_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.next ( ) ) ; int m = Integer.parseInt ( sc.next ( ) ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = Integer.parseInt ( sc.next ( ) ) / 2 ; } long gcd ; long lcd = 1 ; for ( int i = 0 ; i < n ; i ++ ) { gcd = getGCD ( lcd , a [ i ] ) ; lcd = lcd * a [ i ] / gcd ; if ( lcd > m ) { System.out.println ( 0 ) ; return ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( ( lcd / a [ i ] ) % 2 == 0 ) { System.out.println ( 0 ) ; return ; } } System.out.println ( ( m / lcd + 1 ) / 2 ) ; } public static long getGCD ( long a , long b ) { if ( b == 0 ) { return a ; } else { return getGCD ( b , a % b ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC153_A",
        "Python": "h , a = map ( int , input ( ).split ( \" \" ) )\nsho = int ( h / a )\nam = int ( h % a )\nif am != 0 :\n    sho += 1\nelse :\n    pass\nprint ( sho )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.IOException ; public class atcoder_ABC153_A { public static void main ( String [ ] args ) throws IOException { BufferedReader in = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String [ ] str = in.readLine ( ).split ( \" \" ) ; int h = Integer.parseInt ( str [ 0 ] ) ; int a = Integer.parseInt ( str [ 1 ] ) ; int num = 0 ; for ( int i = 1 ; h > 0 ; i ++ ) { h = h - a ; num ++ ; } System.out.println ( num ) ; } }\n"
    },
    {
        "filename": "codeforces_644_B",
        "Python": "import queue\nn , b = list ( map ( int , input ( ).split ( ) ) )\nclass Task :\n    def __init__ ( self , time : int , duration : int , index : int ) -> None :\n        super ( ).__init__ ( )\n        self.time = time\n        self.duration = duration\n        self.index = index\nremaining = queue.Queue ( )\nrunning = False\nfinish_time = 0\ndef run_task ( remaining : queue.Queue , finish_time : int ) :\n    task_to_run = remaining.get ( )\n    finish_time = max ( finish_time , task_to_run.time ) + task_to_run.duration\n    result [ task_to_run.index ] = finish_time\n    return finish_time , result\nresult = { }\nfor i in range ( n ) :\n    time , duration = list ( map ( int , input ( ).split ( ) ) )\n    task = Task ( time , duration , index = i )\n    result.update ( { i : 0 } )\n    if task.time > finish_time and remaining.empty ( ) :\n        running = True\n        finish_time = task.time + task.duration\n        result [ i ] = finish_time\n    else :\n        if task.time >= finish_time and not remaining.empty ( ) :\n            finish_time , result = run_task ( remaining = remaining , finish_time = finish_time )\n        if remaining.qsize ( ) < b :\n            remaining.put ( task )\n        else :\n            result [ i ] = - 1\nwhile not remaining.empty ( ) :\n    finish_time , result = run_task ( remaining = remaining , finish_time = finish_time )\nfor key in result :\n    print ( result.get ( key ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_644_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; long [ ] ans = new long [ n ] ; LinkedList < Long > q = new LinkedList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int t = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; while ( ! q.isEmpty ( ) && q.getFirst ( ) <= t ) { q.pollFirst ( ) ; } if ( q.size ( ) <= b ) { ans [ i ] = ( q.isEmpty ( ) ? t : q.getLast ( ) ) + d ; q.add ( ans [ i ] ) ; } else { ans [ i ] = - 1 ; } } for ( int i = 0 ; i < n ; ++ i ) { System.out.print ( ans [ i ] + \" \" ) ; } } }\n"
    },
    {
        "filename": "codeforces_61_B",
        "Python": "import collections\nimport heapq\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO , IOBase\nimport os\ndef valid ( i , j , n , m ) :\n    if i < n and i >= 0 and j >= 0 and j < m : return True\n    return False\ndef sumn ( i , n ) :\n    return ( n - i ) * ( i + n ) / 2\ndef sqfun ( a , b , c ) :\n    return ( - b + math.sqrt ( b * b - 4 * a * c ) ) / 2 * a\ndef value ( ) : return tuple ( map ( int , input ( ).split ( ) ) )\ndef values ( ) : return tuple ( map ( int , sys.stdin.readline ( ).split ( ) ) )\ndef inlst ( ) : return [ int ( i ) for i in input ( ).split ( ) ]\ndef inlsts ( ) : return [ int ( i ) for i in sys.stdin.readline ( ).split ( ) ]\ndef inp ( ) : return int ( input ( ) )\ndef inps ( ) : return int ( sys.stdin.readline ( ) )\ndef instr ( ) : return input ( )\ndef stlst ( ) : return [ i for i in input ( ).split ( ) ]\ndef f ( s ) :\n    r = ''\n    for i in s :\n        if i not in [ '-' , ';' , '_' ] : r += i.lower ( )\n    return r\ndef solve ( ) :\n    l = [ ]\n    for i in range ( 3 ) :\n        l.append ( f ( input ( ) ) )\n    t = itertools.permutations ( l , len ( l ) )\n    l = [ ]\n    for i in t : l.append ( \"\".join ( i ) )\n    for i in range ( inp ( ) ) :\n        if f ( instr ( ) ) in l : print ( 'ACC' )\n        else : print ( 'WA' )\nif __name__ == \"__main__\" :\n    solve ( )\n\n",
        "Java": "import java.util.* ; public class codeforces_61_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word1 = in.nextLine ( ).replaceAll ( \"[^a-zA-Z]\" , \"\" ).toLowerCase ( ) ; String word2 = in.nextLine ( ).replaceAll ( \"[^a-zA-Z]\" , \"\" ).toLowerCase ( ) ; String word3 = in.nextLine ( ).replaceAll ( \"[^a-zA-Z]\" , \"\" ).toLowerCase ( ) ; String perm1 = word1 + word2 + word3 ; String perm2 = word1 + word3 + word2 ; String perm3 = word2 + word1 + word3 ; String perm4 = word2 + word3 + word1 ; String perm5 = word3 + word2 + word1 ; String perm6 = word3 + word1 + word2 ; int students = in.nextInt ( ) ; in.nextLine ( ) ; for ( int i = 0 ; i < students ; i ++ ) { String testCase = in.nextLine ( ).replaceAll ( \"[^a-zA-Z]\" , \"\" ).toLowerCase ( ) ; if ( testCase.equals ( perm1 ) || testCase.equals ( perm2 ) || testCase.equals ( perm3 ) || testCase.equals ( perm4 ) || testCase.equals ( perm5 ) || testCase.equals ( perm6 ) ) { System.out.println ( \"ACC\" ) ; } else { System.out.println ( \"WA\" ) ; } } } }\n"
    },
    {
        "filename": "codeforces_342_B",
        "Python": "R = lambda : map ( int , input ( ).split ( ) )\nn , m , s , f = R ( )\nif s < f :\n    d = 1\n    c = 'R'\nelse :\n    d = - 1\n    c = 'L'\nres = \"\"\ni = 1\nj = s\nt , l , r = R ( )\nk = 1\nwhile j != f :\n    if i > t and k < m :\n        t , l , r = R ( )\n        k += 1\n    if i == t and ( l <= j <= r or l <= j + d <= r ) :\n        res += 'X'\n    else :\n        res += c\n        j += d\n    i += 1\nprint ( res )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; public class codeforces_342_B { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String input [ ] = reader.readLine ( ).split ( \" \" ) ; int m = Integer.parseInt ( input [ 1 ] ) ; int s = Integer.parseInt ( input [ 2 ] ) ; int f = Integer.parseInt ( input [ 3 ] ) ; int maxT = - 1 ; HashMap < Integer , ArrayList < Integer >> map = new HashMap < > ( ) ; while ( m > 0 ) { String mth [ ] = reader.readLine ( ).split ( \" \" ) ; int k = Integer.parseInt ( mth [ 0 ] ) ; map.put ( k , new ArrayList < > ( ) ) ; map.get ( k ).add ( Integer.parseInt ( mth [ 1 ] ) ) ; map.get ( k ).add ( Integer.parseInt ( mth [ 2 ] ) ) ; maxT = Math.max ( maxT , k ) ; m -- ; } StringBuilder actions = new StringBuilder ( ) ; final char M = ( s < f ) ? 'R' : 'L' ; int d = ( s < f ) ? + 1 : - 1 ; int cur = s ; int a = - 1 ; int b = - 1 ; for ( int t = 1 ; t <= maxT ; t ++ ) { if ( map.containsKey ( t ) ) { a = map.get ( t ).get ( 0 ).intValue ( ) ; b = map.get ( t ).get ( 1 ).intValue ( ) ; } if ( map.containsKey ( t ) && ( ( cur >= a && cur <= b ) || ( cur + d >= a && cur + d <= b ) ) ) { actions.append ( 'X' ) ; } else { actions.append ( M ) ; cur += d ; } if ( cur == f ) break ; } while ( cur != f ) { actions.append ( M ) ; cur += d ; } System.out.println ( actions ) ; } }\n"
    },
    {
        "filename": "codeforces_653_A",
        "Python": "n = int ( input ( ) )\nl = list ( map ( int , input ( ).split ( ) ) )\nl.sort ( )\nfor i in l :\n    if i + 1 in l and i + 2 in l :\n        print ( 'YES' )\n        break\nelse :\n    print ( 'NO' )\n\n",
        "Java": "import java.io.PrintWriter ; import java.util.* ; import java.util.stream.Collectors ; public class codeforces_653_A { public static void main ( String [ ] args ) { try ( Scanner in = new Scanner ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ) { int n = in.nextInt ( ) ; List < Integer > a = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int value = in.nextInt ( ) ; a.add ( value ) ; } a = a.stream ( ).distinct ( ).sorted ( ).collect ( Collectors.toList ( ) ) ; boolean found = false ; for ( int i = 0 ; i < a.size ( ) ; i ++ ) { if ( i + 1 < a.size ( ) && i + 2 < a.size ( ) ) { if ( a.get ( i ) + 1 == a.get ( i + 1 ) && a.get ( i + 1 ) + 1 == a.get ( i + 2 ) ) { found = true ; } } } out.println ( found ? \"YES\" : \"NO\" ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC149_B",
        "Python": "cookies = [ int ( x ) for x in input ( ).split ( ) ]\nleftOver = cookies [ 0 ] - cookies [ 2 ]\ntakahashi = max ( 0 , leftOver )\nprint ( str ( takahashi ) + ' ' + ( str ( cookies [ 1 ] ) if takahashi > 0 else str ( max ( 0 , cookies [ 1 ] - abs ( leftOver ) ) ) ) )\n\n",
        "Java": "import java.util.* ; import java.io.* ; import java.nio.charset.StandardCharsets ; public class atcoder_ABC149_B { long A , B , K ; long x , y ; public static void main ( String [ ] args ) throws IOException { InputStreamReader reader = new InputStreamReader ( System.in , StandardCharsets.UTF_8 ) ; BufferedReader in = new BufferedReader ( reader ) ; atcoder_ABC149_B ins = new atcoder_ABC149_B ( in ) ; ins.calc ( ) ; ins.showResult ( ) ; } atcoder_ABC149_B ( BufferedReader in ) throws IOException { String [ ] tokens = in.readLine ( ).split ( \" \" ) ; A = Long.parseLong ( tokens [ 0 ] ) ; B = Long.parseLong ( tokens [ 1 ] ) ; K = Long.parseLong ( tokens [ 2 ] ) ; } void calc ( ) { x = A ; y = B ; x = A - K ; if ( x < 0 ) { y = B + x ; x = 0 ; if ( y < 0 ) { y = 0 ; } } } void showResult ( ) { System.out.println ( x + \" \" + y ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC147_D",
        "Python": "import numpy as np\nN = int ( input ( ) )\nA = np.fromiter ( map ( int , input ( ).split ( ) ) , np.int64 )\nresult = 0\nfor b in range ( 60 ) :\n    bs = int ( ( ( A >> b ) & 1 ).sum ( ) )\n    result = ( result + bs * ( N - bs ) * ( 1 << b ) ) % 1000000007\nprint ( result )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC147_D { public static void main ( String [ ] args ) { long startTime = System.currentTimeMillis ( ) ; Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long div = ( long ) Math.pow ( 10 , 9 ) + 7 ; long [ ] A = new long [ n ] ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { A [ i ] = sc.nextLong ( ) ; } for ( int i = 0 ; i < 60 ; i ++ ) { long a = 0 ; long count1 = 0 ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( A [ j ] >> i & 1 ) == 1 ) count1 ++ ; } a = a + count1 * ( n - count1 ) ; for ( int j = 0 ; j < i ; j ++ ) { a = ( a << 1 ) % div ; } ans += a ; ans %= div ; } System.out.println ( ans ) ; long endTime = System.currentTimeMillis ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC124_C",
        "Python": "import collections\ns = list ( input ( ) )\neven = collections.Counter ( s [ 0 : : 2 ] )\nodd = collections.Counter ( s [ 1 : : 2 ] )\nprint ( min ( len ( s ) - ( even [ \"0\" ] + odd [ \"1\" ] ) , len ( s ) - ( even [ \"1\" ] + odd [ \"0\" ] ) ) )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.StringTokenizer ; import java.io.IOException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; public class atcoder_ABC124_C { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; CColoringColorfully solver = new CColoringColorfully ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class CColoringColorfully { public void solve ( int testNumber , InputReader in , PrintWriter out ) { String x = in.next ( ) ; StringBuilder a = new StringBuilder ( x ) ; StringBuilder b = new StringBuilder ( x ) ; int a1 = 0 ; int a2 = 0 ; for ( int i = 1 ; i < x.length ( ) ; i ++ ) { if ( a.charAt ( i ) == a.charAt ( i - 1 ) ) { if ( a.charAt ( i ) == '1' ) a.setCharAt ( i , '0' ) ; else a.setCharAt ( i , '1' ) ; a1 ++ ; } } for ( int i = x.length ( ) - 1 ; i > 0 ; i -- ) { if ( b.charAt ( i ) == b.charAt ( i - 1 ) ) { if ( b.charAt ( i - 1 ) == '1' ) b.setCharAt ( i - 1 , '0' ) ; else b.setCharAt ( i - 1 , '1' ) ; a2 ++ ; } } out.println ( Math.min ( a1 , a2 ) ) ; } } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } } }\n"
    },
    {
        "filename": "codeforces_408_B",
        "Python": "from collections import defaultdict , deque\nfrom functools import lru_cache\nfrom heapq import heappush , heappop\nfrom typing import Counter\nfrom bisect import bisect_right , bisect_left\nimport math\nhpop = heappop\nhpush = heappush\ndef solution ( ) :\n    line = input ( )\n    bought_count = Counter ( line )\n    line = input ( )\n    made_cout = Counter ( line )\n    res = 0\n    for color in made_cout :\n        if color not in bought_count :\n            return print ( - 1 )\n        res += min ( bought_count [ color ] , made_cout [ color ] )\n    print ( res )\ndef main ( ) :\n    t = 1\n    for _ in range ( t ) :\n        solution ( )\nmain ( )\n\n",
        "Java": "import java.io.* ; import java.lang.* ; import java.util.* ; public class codeforces_408_B { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; String s1 = s.next ( ) ; String s2 = s.next ( ) ; if ( isValid ( s1 , s2 ) == false ) { System.out.println ( - 1 ) ; } else { HashMap < Character , Integer > m1 = new HashMap < > ( ) ; HashMap < Character , Integer > m2 = new HashMap < > ( ) ; for ( char c : s1.toCharArray ( ) ) { if ( m1.containsKey ( c ) ) { m1.put ( c , m1.get ( c ) + 1 ) ; } else { m1.put ( c , 1 ) ; } } for ( char c : s2.toCharArray ( ) ) { if ( m2.containsKey ( c ) ) { m2.put ( c , m2.get ( c ) + 1 ) ; } else { m2.put ( c , 1 ) ; } } int ans = 0 ; HashSet < Character > hs = new HashSet < > ( ) ; for ( char c : s2.toCharArray ( ) ) { if ( ! hs.contains ( c ) ) { hs.add ( c ) ; int x1 = m1.get ( c ) ; int x2 = m2.get ( c ) ; x1 = Math.min ( x1 , x2 ) ; ans += x1 ; } } System.out.println ( ans ) ; } } public static boolean isValid ( String s1 , String s2 ) { int n1 = s1.length ( ) ; int n2 = s2.length ( ) ; HashMap < Character , Boolean > map = new HashMap < > ( ) ; for ( char c : s1.toCharArray ( ) ) { map.put ( c , true ) ; } for ( char c : s2.toCharArray ( ) ) { if ( ! map.containsKey ( c ) ) return false ; } return true ; } }\n"
    },
    {
        "filename": "codeforces_276_B",
        "Python": "s = list ( input ( ) )\nx = True\ndt = { }\nfor i in s :\n    if i in dt :\n        dt [ i ] += 1\n    else :\n        dt [ i ] = 1\ncnt = 0\nx = True\nfor key , value in dt.items ( ) :\n    if value % 2 != 0 and cnt < 1 :\n        cnt += 1\n    elif value % 2 != 0 and cnt >= 1 :\n        x = False\n        break\nif x :\n    print ( \"First\" )\nelif not x and len ( s ) % 2 == 0 :\n    print ( \"Second\" )\nelif not x and len ( s ) % 2 != 0 :\n    print ( \"First\" )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.math.BigInteger ; import java.util.* ; public class codeforces_276_B { public static void main ( String [ ] args ) throws NumberFormatException , IOException { InputStreamReader inputStreamReader = new InputStreamReader ( System.in ) ; BufferedReader bufferedReader = new BufferedReader ( inputStreamReader ) ; PrintWriter writer = new PrintWriter ( System.out ) ; String str = bufferedReader.readLine ( ) ; Map < Character , Integer > map = new HashMap < > ( ) ; int oddCount = 0 ; for ( int i = 0 ; i < str.length ( ) ; i ++ ) { char ch = str.charAt ( i ) ; if ( map.containsKey ( ch ) ) { map.put ( ch , map.get ( ch ) + 1 ) ; } else { map.put ( ch , 1 ) ; } } for ( Map.Entry < Character , Integer > entry : map.entrySet ( ) ) { if ( entry.getValue ( ) % 2 != 0 ) { oddCount ++ ; } } if ( oddCount <= 1 || oddCount % 2 != 0 ) { writer.println ( \"First\" ) ; } else { writer.println ( \"Second\" ) ; } writer.flush ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC150_E",
        "Python": "mod = 10 ** 9 + 7\nn = int ( input ( ) )\nc = list ( map ( int , input ( ).split ( ) ) )\nc.sort ( reverse = True )\nb = pow ( 2 , 2 * n - 2 , mod )\na = 2 * b % mod\nans = 0\nfor i in range ( n ) :\n    ans += c [ i ] * ( a + i * b )\n    ans %= mod\nprint ( ans )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.util.Arrays ; public class atcoder_ABC150_E { public static void main ( String [ ] args ) throws Exception { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String [ ] sa = br.readLine ( ).split ( \" \" ) ; int n = Integer.parseInt ( sa [ 0 ] ) ; sa = br.readLine ( ).split ( \" \" ) ; int [ ] c = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = Integer.parseInt ( sa [ i ] ) ; } br.close ( ) ; int mod = 1000000007 ; if ( n == 1 ) { System.out.println ( c [ 0 ] * 2 % mod ) ; return ; } Arrays.parallelSort ( c ) ; long b = power ( 2 , n ) ; long a = power ( 2 , n - 2 ) ; long ans = 0 ; for ( int i = 2 ; i <= n + 1 ; i ++ ) { long val = a * i % mod ; val *= c [ n + 1 - i ] ; val %= mod ; ans += val ; ans %= mod ; } ans *= b ; ans %= mod ; System.out.println ( ans ) ; } static long power ( long x , long n ) { if ( n == 0 ) { return 1 ; } int mod = 1000000007 ; long val = power ( x , n / 2 ) ; val = val * val % mod ; if ( n % 2 == 1 ) { val = val * x % mod ; } return val ; } }\n"
    },
    {
        "filename": "codeforces_609_B",
        "Python": "def _input ( ) : return map ( int , input ( ).split ( ) )\nn , m = _input ( )\nlst = list ( _input ( ) )\nl = { }\nfor i in range ( n ) :\n    if lst [ i ] not in l :\n        l [ lst [ i ] ] = 1\n    else : l [ lst [ i ] ] += 1\nres = 0\nfor i in range ( n ) :\n    if l [ lst [ i ] ] > 1 :\n        res += n - i - l [ lst [ i ] ]\n        l [ lst [ i ] ] -= 1\n    else :\n        res += n - i - 1\nprint ( res )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_609_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int m = in.nextInt ( ) ; int arr [ ] = new int [ n ] ; int gen [ ] = new int [ 11 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = in.nextInt ( ) ; gen [ arr [ i ] ] ++ ; } long ans = 0 ; for ( int i = 1 ; i <= m ; i ++ ) { for ( int k = 1 ; k <= m ; k ++ ) { if ( i != k ) { ans += ( long ) gen [ i ] * gen [ k ] ; } } } System.out.println ( ans / 2 ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC035_B",
        "Python": "import numpy as np\nfrom collections import deque\nimport heapq\nN , M = map ( int , input ( ).split ( ) )\nedges = [ set ( ) for _ in range ( N ) ]\ndegs = [ 0 for i in range ( N ) ]\nparity = [ 0 for _ in range ( N ) ]\nflag = [ False for _ in range ( N ) ]\nfor _ in range ( M ) :\n    a , b = map ( int , input ( ).split ( ) )\n    edges [ a - 1 ].add ( b - 1 )\n    edges [ b - 1 ].add ( a - 1 )\n    degs [ a - 1 ] += 1\n    degs [ b - 1 ] += 1\nif M % 2 != 0 :\n    print ( - 1 )\n    exit ( )\nQ = [ ]\nfor i , d in enumerate ( degs ) :\n    Q.append ( ( d , i ) )\nheapq.heapify ( Q )\nwhile len ( Q ) > 0 :\n    _ , u = Q [ 0 ]\n    heapq.heappop ( Q )\n    if flag [ u ] :\n        continue\n    flag [ u ] = True\n    for i , v in enumerate ( edges [ u ] ) :\n        edges [ v ].remove ( u )\n        if parity [ u ] != 0 and i == 0 :\n            print ( u + 1 , v + 1 )\n            parity [ u ] = 1 - parity [ u ]\n        else :\n            print ( v + 1 , u + 1 )\n            parity [ v ] = 1 - parity [ v ]\n        degs [ v ] -= 1\n        heapq.heappush ( Q , ( degs [ v ] , v ) )\n\n",
        "Java": "import java.util.* ; public class atcoder_AGC035_B { @ SuppressWarnings ( \"unchecked\" ) public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int numNode = sc.nextInt ( ) ; int numEdge = sc.nextInt ( ) ; connect = new ArrayList [ numNode ] ; for ( int i = 0 ; i < numNode ; i ++ ) { connect [ i ] = new ArrayList < > ( ) ; } for ( int i = 0 ; i < numEdge ; i ++ ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; connect [ a ].add ( b ) ; connect [ b ].add ( a ) ; } if ( numEdge % 2 != 0 ) { System.out.println ( - 1 ) ; return ; } visited = new int [ numNode ] ; odd = new boolean [ numNode ] ; print = new StringBuilder ( ) ; dfs ( 0 , - 1 ) ; System.out.println ( print ) ; } static ArrayList < Integer > connect [ ] ; static int visited [ ] ; static boolean odd [ ] ; static StringBuilder print ; static void dfs ( int crt , int parent ) { visited [ crt ] = 1 ; ArrayList < Integer > crtConnect = connect [ crt ] ; for ( int child : crtConnect ) { if ( child == parent || visited [ child ] == 1 ) { continue ; } else if ( visited [ child ] == 2 ) { print.append ( ( crt + 1 ) + \" \" + ( child + 1 ) + \"\\n\" ) ; odd [ crt ] = ! odd [ crt ] ; } else { dfs ( child , crt ) ; if ( odd [ child ] ) { print.append ( ( child + 1 ) + \" \" + ( crt + 1 ) + \"\\n\" ) ; odd [ child ] = ! odd [ child ] ; } else { print.append ( ( crt + 1 ) + \" \" + ( child + 1 ) + \"\\n\" ) ; odd [ crt ] = ! odd [ crt ] ; } } } visited [ crt ] = 2 ; } }\n"
    },
    {
        "filename": "codeforces_421_A",
        "Python": "n , a , b = [ int ( x ) for x in input ( ).split ( \" \" ) ]\nlista = [ int ( x ) for x in input ( ).split ( \" \" ) ]\nlistb = [ int ( x ) for x in input ( ).split ( \" \" ) ]\nfor k in range ( n ) :\n    if k + 1 in lista :\n        print ( 1 , end = \" \" )\n    else :\n        print ( 2 , end = \" \" )\n\n",
        "Java": "import java.math.BigInteger ; import java.nio.charset.IllegalCharsetNameException ; import java.util.* ; public class codeforces_421_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n , a , b ; n = sc.nextInt ( ) ; a = sc.nextInt ( ) ; b = sc.nextInt ( ) ; ArrayList < Integer > list1 = new ArrayList < > ( ) ; ArrayList < Integer > list2 = new ArrayList < > ( ) ; for ( int i = 0 ; i < a ; i ++ ) { list1.add ( sc.nextInt ( ) ) ; } for ( int i = 0 ; i < b ; i ++ ) { list2.add ( sc.nextInt ( ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( list1.contains ( i + 1 ) ) { System.out.print ( 1 + \" \" ) ; } else { System.out.print ( 2 + \" \" ) ; } } } }\n"
    },
    {
        "filename": "atcoder_AGC027_B",
        "Python": "from itertools import accumulate\nN , X , * A = map ( int , open ( 0 ).read ( ).split ( ) )\nS = list ( accumulate ( A ) )\nans = float ( \"inf\" )\nfor k , s in enumerate ( S , 1 ) :\n    E = k * X + 2 * sum ( S [ j ] for j in range ( N - 2 * k - 1 , - 1 , - k ) )\n    ans = min ( ans , E )\nprint ( ans + N * X + 5 * S [ - 1 ] )\n\n",
        "Java": "import java.util.* ; public class atcoder_AGC027_B { int INF = Integer.MAX_VALUE ; public static void main ( String [ ] args ) { new atcoder_AGC027_B ( ).solve ( ) ; } void solve ( ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; long X = sc.nextLong ( ) ; long [ ] x = new long [ N ] ; long [ ] xsum = new long [ N + 1 ] ; for ( int i = 0 ; i < N ; i ++ ) { x [ i ] = sc.nextInt ( ) ; xsum [ i + 1 ] = xsum [ i ] + x [ i ] ; } long ans = X * N + 5 * xsum [ N ] ; for ( int i = 1 ; i < N ; i ++ ) { long cost = X * i + 5 * ( xsum [ N ] - xsum [ N - i ] ) ; for ( int j = 5 , k = N - i ; k >= 0 ; j += 2 , k -= i ) { if ( cost > ans ) { break ; } cost += j * ( xsum [ k ] - xsum [ Math.max ( k - i , 0 ) ] ) ; } ans = Math.min ( ans , cost ) ; } System.out.println ( ans + N * X ) ; } }\n"
    },
    {
        "filename": "codeforces_397_B",
        "Python": "class CodeforcesTask397BSolution :\n    def __init__ ( self ) :\n        self.result = ''\n        self.t = 0\n        self.queries = [ ]\n    def read_input ( self ) :\n        self.t = int ( input ( ) )\n        for _ in range ( self.t ) :\n            self.queries.append ( [ int ( x ) for x in input ( ).split ( \" \" ) ] )\n    def process_task ( self ) :\n        res = [ ]\n        for query in self.queries :\n            k = query [ 0 ] // query [ 1 ]\n            res.append ( \"Yes\" if k * query [ 2 ] >= query [ 0 ] else \"No\" )\n        self.result = \"\\n\".join ( res )\n    def get_result ( self ) :\n        return self.result\nif __name__ == \"__main__\" :\n    Solution = CodeforcesTask397BSolution ( )\n    Solution.read_input ( )\n    Solution.process_task ( )\n    print ( Solution.get_result ( ) )\n\n",
        "Java": "import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.ArrayList ; import java.util.Arrays ; import java.util.Collection ; import java.util.Collections ; import java.util.Comparator ; import java.util.HashMap ; import java.util.HashSet ; import java.util.InputMismatchException ; import java.util.PriorityQueue ; import java.util.Random ; import java.util.Scanner ; import java.util.Stack ; import java.util.TreeMap ; import java.util.TreeSet ; public class codeforces_397_B { static int N ; static int MOD = ( int ) ( 1e9 + 7 ) ; public static void main ( String args [ ] ) { Scanner in = new Scanner ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ; int t = in.nextInt ( ) ; while ( t -- > 0 ) { long n = in.nextInt ( ) ; long a = in.nextInt ( ) ; long b = in.nextInt ( ) ; if ( n < a ) { out.println ( \"No\" ) ; continue ; } if ( a == b ) { if ( n % a == 0 ) { out.println ( \"Yes\" ) ; } else { out.println ( \"No\" ) ; } continue ; } long x = b / ( b - a ) ; if ( n > x * a ) { out.println ( \"Yes\" ) ; continue ; } long low = 1 ; long high = x + 1 ; long ans = 1 ; while ( low <= high ) { long mid = ( low + high ) / 2 ; if ( mid * a < n ) { low = mid + 1 ; } else { ans = mid ; high = mid - 1 ; } } if ( n > ( ans - 1 ) * b && n < ans * a ) { out.println ( \"No\" ) ; } else { out.println ( \"Yes\" ) ; } } out.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_404_A",
        "Python": "n = int ( input ( ) )\ns = [ ]\nfor i in range ( n ) :\n    k = input ( )\n    s.append ( k )\nflag = 0\nd1 = [ ]\nd2 = [ ]\nrem = set ( )\nfor i in range ( n ) :\n    for j in range ( n ) :\n        if ( i == j ) :\n            d1.append ( s [ i ] [ j ] )\n        if ( i == n - j - 1 ) :\n            d2.append ( s [ i ] [ j ] )\n        if ( i != j and i != n - j - 1 ) :\n            rem.add ( s [ i ] [ j ] )\nif ( len ( rem ) != 1 ) :\n    print ( 'NO' )\nelif ( d1 != d2 ) :\n    print ( 'NO' )\nelif ( len ( set ( d1 ) ) != 1 ) :\n    print ( 'NO' )\nelif ( set ( d1 ) == rem ) :\n    print ( 'NO' )\nelse :\n    print ( 'YES' )\n\n",
        "Java": "import java.util.* ; public class codeforces_404_A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; char arr [ ] [ ] = new char [ n ] [ n ] ; String str [ ] = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { str [ i ] = sc.next ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { arr [ i ] [ j ] = str [ i ].charAt ( j ) ; } } char a = arr [ 0 ] [ 0 ] ; char b = arr [ 0 ] [ 1 ] ; if ( a == b ) System.out.println ( \"NO\" ) ; else { boolean res = true ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j || i + j == n - 1 ) { if ( arr [ i ] [ j ] != a ) { res = false ; break ; } } else { if ( arr [ i ] [ j ] != b ) { res = false ; break ; } } } } if ( res ) System.out.println ( \"YES\" ) ; else System.out.println ( \"NO\" ) ; } } }\n"
    },
    {
        "filename": "codeforces_629_A",
        "Python": "n = int ( input ( ) )\ncake = [ ]\nhappiness = 0\nchocCount = 0\nnfat = 1\nfor i in range ( n ) :\n    line = str ( input ( ) )\n    cake.append ( line )\n    for j in line :\n        if ( j == 'C' ) :\n            chocCount += 1\n    if ( chocCount > 1 ) :\n        for i in range ( chocCount , chocCount - 2 , - 1 ) :\n            nfat *= i\n        happiness += nfat / 2\n    nfat = 1\n    chocCount = 0\nposCount = 0\nfor j in range ( n ) :\n    for i in range ( n ) :\n        if ( cake [ i ] [ j ] == 'C' ) :\n            chocCount += 1\n    if ( chocCount > 1 ) :\n        for i in range ( chocCount , chocCount - 2 , - 1 ) :\n            nfat *= i\n        happiness += nfat / 2\n    nfat = 1\n    chocCount = 0\nprint ( int ( happiness ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_629_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int num = sc.nextInt ( ) ; int counter = 0 ; int fine = 0 ; ArrayList < String > arr = new ArrayList < > ( ) ; for ( int i = 0 ; i < num ; i ++ ) { String s = sc.next ( ) ; arr.add ( s ) ; } for ( int i = 0 ; i < num ; i ++ ) { for ( int k = 0 ; k < num ; k ++ ) { if ( arr.get ( k ).charAt ( i ) == 'C' ) { counter ++ ; } } fine += ( counter * ( counter - 1 ) ) / 2 ; counter = 0 ; } for ( int i = 0 ; i < num ; i ++ ) { for ( int k = 0 ; k < num ; k ++ ) { if ( arr.get ( i ).charAt ( k ) == 'C' ) { counter ++ ; } } fine += ( counter * ( counter - 1 ) ) / 2 ; counter = 0 ; } System.out.println ( fine ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC004_D",
        "Python": "import sys\nsys.setrecursionlimit ( 10 ** 6 )\ndef dfs ( links , n , k , v , p ) :\n    height_from_leaf = 0\n    cut_count = 0\n    for u in links [ v ] :\n        if u == 0 :\n            continue\n        hgt , cut = dfs ( links , n , k , u , v )\n        height_from_leaf = max ( height_from_leaf , hgt )\n        cut_count += cut\n    height_from_leaf += 1\n    if p != 0 and height_from_leaf == k :\n        height_from_leaf = 0\n        cut_count += 1\n    return height_from_leaf , cut_count\nn , k , * aaa = map ( int , sys.stdin.buffer.read ( ).split ( ) )\nlinks = [ set ( ) for _ in range ( n ) ]\nfor i , a in enumerate ( aaa ) :\n    a -= 1\n    links [ a ].add ( i )\n_ , ans = dfs ( links , n , k , 0 , 0 )\nif aaa [ 0 ] != 1 :\n    ans += 1\nprint ( ans )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class atcoder_AGC004_D { public static void main ( String args [ ] ) { new Thread ( null , new MyRunnable ( ) , \"\" , 1 << 26 ).start ( ) ; } } class MyRunnable implements Runnable { @ Override public void run ( ) { int n ; int k ; List < Integer > as = new ArrayList < > ( ) ; try ( Scanner sc = new Scanner ( System.in ) ) { n = sc.nextInt ( ) ; k = sc.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { as.add ( sc.nextInt ( ) - 1 ) ; } } System.out.println ( new Calculator ( n , k , as ).calculate ( ) ) ; } } class Calculator { private int k ; private int answer = 0 ; private boolean isCalculate = false ; private List < List < Integer >> lists = new ArrayList < > ( ) ; Calculator ( int n , int k , List < Integer > as ) { this.k = k ; for ( int i = 0 ; i < n ; i ++ ) { this.lists.add ( new ArrayList < > ( ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { int j = as.get ( i ) ; if ( 0 < i ) { this.lists.get ( j ).add ( i ) ; } else if ( 0 < j ) { this.answer ++ ; } } } int calculate ( ) { if ( ! this.isCalculate ) { this.dfs ( 0 , 0 ) ; this.isCalculate = true ; } return this.answer ; } private int dfs ( int a , int pre ) { int h = 0 ; for ( int i : this.lists.get ( a ) ) { h = Math.max ( h , this.dfs ( i , a ) ) ; } if ( 0 < pre && h == this.k - 1 ) { h = 0 ; this.answer ++ ; } else { h ++ ; } return h ; } }\n"
    },
    {
        "filename": "atcoder_AGC011_C",
        "Python": "import queue\nn , m = map ( int , input ( ).split ( ) )\nvis , ci , cb , cc = [ 0 ] * ( n + 1 ) , 0 , 0 , 0\ng = [ [ ] for i in range ( n + 1 ) ]\ndef dfs ( x ) :\n    stk , flag = queue.LifoQueue ( ) , True\n    stk.put ( ( x , 1 ) )\n    while not stk.empty ( ) :\n        u , col = stk.get ( )\n        if vis [ u ] :\n            flag &= ( vis [ u ] == col )\n            continue\n        vis [ u ] = col\n        for i in g [ u ] :\n            stk.put ( ( i , 3 - col ) )\n    return flag\nfor i in range ( m ) :\n    u , v = map ( int , input ( ).split ( ) )\n    g [ u ] += [ v ]\n    g [ v ] += [ u ]\nfor i in range ( 1 , n + 1 ) :\n    if vis [ i ] == 0 :\n        if len ( g [ i ] ) == 0 :\n            ci += 1\n        else :\n            if dfs ( i ) :\n                cb += 1\n            else :\n                cc += 1\nprint ( ci * ci + 2 * ci * ( n - ci ) + cc * cc + 2 * cb * cc + 2 * cb * cb )\n\n",
        "Java": "import java.util.* ; class Main implements Runnable { ArrayList < Integer > [ ] graph ; boolean [ ] visited ; int [ ] color ; long one ; long bipartite ; long count ; boolean mujun ; int dfs ( int a , int c ) { if ( visited [ a ] ) { if ( color [ a ] >= 0 && color [ a ] != c ) mujun = true ; return 0 ; } visited [ a ] = true ; color [ a ] = c ; int total = 1 ; for ( int b : graph [ a ] ) { total += dfs ( b , 1 - c ) ; } return total ; } public void run ( ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int m = scan.nextInt ( ) ; this.graph = new ArrayList [ n ] ; for ( int i = 0 ; i < n ; ++ i ) this.graph [ i ] = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < m ; ++ i ) { int u = scan.nextInt ( ) - 1 ; int v = scan.nextInt ( ) - 1 ; this.graph [ u ].add ( v ) ; this.graph [ v ].add ( u ) ; } visited = new boolean [ n ] ; color = new int [ n ] ; Arrays.fill ( color , - 1 ) ; one = 0 ; bipartite = 0 ; count = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( visited [ i ] ) continue ; count ++ ; mujun = false ; int kind = dfs ( i , 0 ) ; if ( kind == 1 ) one ++ ; else if ( ! mujun ) bipartite ++ ; } long total = one * ( 2 * n - one ) ; total += ( count - one ) * ( count - one ) ; total += bipartite * bipartite ; System.out.println ( total ) ; } public static void main ( String [ ] args ) { new Thread ( null , new Main ( ) , \"\" , 128 * 1024 * 1024 ).start ( ) ; } }\n"
    },
    {
        "filename": "codeforces_216_B",
        "Python": "def readInts ( ) : return map ( int , input ( ).split ( ) )\ndef dfs ( g , seen , i ) :\n    if i in seen :\n        return 0 , 0\n    seen.add ( i )\n    nodes = 1\n    edges = len ( g [ i ] )\n    for j in g [ i ] :\n        x , y = dfs ( g , seen , j )\n        nodes += x\n        edges += y\n    return nodes , edges\ndef solve ( ) :\n    line0 = [ ]\n    try : line0 = readInts ( )\n    except EOFError : return False\n    n , m = line0\n    g = { }\n    seen = set ( )\n    for i in range ( 1 , n + 1 ) :\n        g [ i ] = set ( )\n    for _ in range ( m ) :\n        a , b = readInts ( )\n        g [ a ].add ( b )\n        g [ b ].add ( a )\n    ans = 0\n    for i in range ( 1 , n + 1 ) :\n        if i not in seen :\n            nodes , edges = dfs ( g , seen , i )\n            if nodes > 1 and nodes % 2 == 1 and 2 * nodes == edges :\n                ans += 1\n    if ( n - ans ) % 2 == 1 :\n        ans += 1\n    print ( ans )\n    return True\nwhile solve ( ) : pass\n\n",
        "Java": "import java.util.Iterator ; import java.util.LinkedList ; import java.util.Scanner ; public class codeforces_216_B { int count ; boolean [ ] seen ; int path = 0 , cycle = 1 ; LinkedList < LinkedList < Integer >> graph ; public int dfs ( int child , int par ) { if ( seen [ child ] == true ) return cycle ; seen [ child ] = true ; for ( Integer i : graph.get ( child ) ) { if ( i != par ) { this.count ++ ; if ( dfs ( i , child ) == cycle ) return cycle ; } } return path ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int m = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; codeforces_216_B ft = new codeforces_216_B ( ) ; ft.graph = new LinkedList < > ( ) ; for ( int i = 0 ; i <= m ; i ++ ) { ft.graph.add ( new LinkedList < Integer > ( ) ) ; } ft.seen = new boolean [ m + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; ft.graph.get ( x ).add ( y ) ; ft.graph.get ( y ).add ( x ) ; } int toremove = 0 ; for ( int i = 1 ; i <= m ; i ++ ) { if ( ! ft.seen [ i ] ) { ft.count = 0 ; if ( ft.dfs ( i , 0 ) == ft.cycle ) { if ( ft.count % 2 == 1 ) toremove ++ ; } } } if ( ( m - toremove ) % 2 == 1 ) toremove ++ ; System.out.println ( toremove ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC132_A",
        "Python": "S = input ( )\nfrom collections import Counter\nc = Counter ( S )\nSa = set ( list ( S ) )\nif len ( Sa ) != 2 :\n    print ( \"No\" )\n    exit ( )\nfor i in Sa :\n    if c [ i ] != 2 :\n        print ( \"No\" )\n        exit ( )\nprint ( \"Yes\" )\n\n",
        "Java": "import java.util.HashMap ; import java.util.Map.Entry ; import java.util.Scanner ; public class atcoder_ABC132_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String s = in.next ( ) ; char [ ] targ = s.toCharArray ( ) ; HashMap < Character , Integer > map = new HashMap < > ( ) ; for ( int i = 0 ; i < targ.length ; i ++ ) { if ( ! map.containsKey ( targ [ i ] ) ) { map.put ( targ [ i ] , 1 ) ; } else { map.put ( targ [ i ] , map.get ( targ [ i ] ) + 1 ) ; } } boolean ok = true ; for ( Entry < Character , Integer > c : map.entrySet ( ) ) { if ( c.getValue ( ) != 2 ) { ok = false ; break ; } } if ( ok && map.size ( ) == 2 ) { System.out.println ( \"Yes\" ) ; } else { System.out.println ( \"No\" ) ; } in.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC002_B",
        "Python": "import sys , re\nfrom collections import deque , defaultdict , Counter\nfrom math import ceil , sqrt , hypot , factorial , pi , sin , cos , radians\nfrom itertools import accumulate , permutations , combinations , product\nfrom operator import itemgetter , mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase , ascii_uppercase , digits\nfrom bisect import bisect , bisect_left\nfrom fractions import gcd\nfrom heapq import heappush , heappop\nfrom functools import reduce\ndef input ( ) : return sys.stdin.readline ( ).strip ( )\ndef INT ( ) : return int ( input ( ) )\ndef MAP ( ) : return map ( int , input ( ).split ( ) )\ndef LIST ( ) : return list ( map ( int , input ( ).split ( ) ) )\ndef ZIP ( n ) : return zip ( * ( MAP ( ) for _ in range ( n ) ) )\nsys.setrecursionlimit ( 10 ** 9 )\nINF = float ( 'inf' )\nmod = 10 ** 9 + 7\nN , M = MAP ( )\nballs = [ [ 1 , 0 ] for _ in range ( N ) ]\nballs [ 0 ] = [ 0 , 1 ]\nfor _ in range ( M ) :\n    x , y = MAP ( )\n    w_x , r_x = balls [ x - 1 ]\n    w_y , r_y = balls [ y - 1 ]\n    if w_x >= 1 and r_x >= 1 :\n        balls [ x - 1 ] [ 0 ] -= 1\n        balls [ y - 1 ] [ 1 ] += 1\n    elif w_x == 0 :\n        balls [ x - 1 ] [ 1 ] -= 1\n        balls [ y - 1 ] [ 1 ] += 1\n    else :\n        balls [ x - 1 ] [ 0 ] -= 1\n        balls [ y - 1 ] [ 0 ] += 1\nans = 0\nfor i in range ( N ) :\n    if balls [ i ] [ 1 ] :\n        ans += 1\nprint ( ans )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_AGC002_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; Box [ ] B = new Box [ N ] ; B [ 0 ] = new Box ( 1 , true ) ; for ( int i = 1 ; i < N ; i ++ ) { B [ i ] = new Box ( 1 , false ) ; } for ( int i = 0 ; i < M ; i ++ ) { int x = sc.nextInt ( ) - 1 ; int y = sc.nextInt ( ) - 1 ; B [ x ].moveTo ( B [ y ] ) ; } int counter = 0 ; for ( Box b : B ) { if ( b.red ) { counter ++ ; } } System.out.println ( counter ) ; } } class Box { public int num ; public boolean red ; public Box ( int n , boolean r ) { num = n ; red = r ; } public void moveTo ( Box other ) { if ( num == 0 ) { return ; } else if ( num == 1 ) { num = 0 ; other.num ++ ; if ( red ) { other.red = true ; } red = false ; } else { num -- ; other.num ++ ; if ( red ) { other.red = true ; } } } }\n"
    },
    {
        "filename": "codeforces_519_B",
        "Python": "n = int ( input ( ) )\na = list ( map ( int , input ( ).split ( ) ) )\nb = list ( map ( int , input ( ).split ( ) ) )\nc = list ( map ( int , input ( ).split ( ) ) )\nx = 0\ny = 0\nz = 0\nfor i in a :\n    x += i\nfor i in b :\n    y += i\nfor i in c :\n    z += i\nprint ( abs ( x - y ) )\nprint ( abs ( y - z ) )\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class codeforces_519_B { public static void main ( String args [ ] ) throws IOException { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int a = 0 , b = 0 , c = 0 ; for ( int i = 0 ; i < n ; i ++ ) a += sc.nextInt ( ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) b += sc.nextInt ( ) ; for ( int i = 0 ; i < n - 2 ; i ++ ) c += sc.nextInt ( ) ; int x = a - b , y = b - c ; System.out.println ( x ) ; System.out.println ( y ) ; } }\n"
    },
    {
        "filename": "codeforces_231_A",
        "Python": "n = int ( input ( ) )\nc = 0\nfor i in range ( n ) :\n    l1 = list ( map ( int , input ( ).split ( ) ) )\n    if sum ( l1 ) > 1 :\n        c = c + 1\nprint ( c )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_231_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; int count = 0 ; while ( t -- > 0 ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( ( a == 1 && b == 1 ) || ( a == 1 && c == 1 ) || ( b == 1 && c == 1 ) || ( a == 1 && b == 1 && c == 1 ) ) { count ++ ; } } System.out.println ( count ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC006_B",
        "Python": "N , X = [ int ( _ ) for _ in input ( ).split ( ) ]\nfrom itertools import permutations\ndef calc ( x ) :\n    def sub ( y , debug = 0 ) :\n        if debug :\n            print ( \"D\" , y )\n        while len ( y ) > 1 :\n            y = [ sorted ( y [ i : i + 3 ] ) [ 1 ] for i in range ( len ( y ) - 2 ) ]\n            if debug :\n                print ( \"D\" , y )\n        return y\n    y = sub ( x )\n    if y [ 0 ] == 2 :\n        pass\n        sub ( x , 1 )\n        print ( \"=\" , x )\n    return y [ 0 ]\nif X == 1 or X == N * 2 - 1 :\n    print ( \"No\" )\nelse :\n    print ( \"Yes\" )\n    if X == N * 2 - 2 :\n        xs = list ( range ( N - 1 , X + 2 ) ) + list ( range ( 1 , N - 1 ) )\n    else :\n        ys = list ( range ( 1 , X - 1 ) ) + list ( range ( X + 3 , N * 2 ) )\n        xs = ys [ : N - 3 ] + [ X + 2 , X - 1 , X , X + 1 ] + ys [ N - 3 : ]\n    for x in xs :\n        print ( x )\n\n",
        "Java": "import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_AGC006_B { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int n = scanner.nextInt ( ) ; int x = scanner.nextInt ( ) ; print ( x , n ) ; } public static void print ( int x , int n ) { int max = n * 2 - 1 ; if ( x == 1 || x == max ) { System.out.println ( \"No\" ) ; return ; } System.out.println ( \"Yes\" ) ; String sep = System.lineSeparator ( ) ; String ans = IntStream.range ( x + n - 1 , x + n + max - 1 ).mapToObj ( e -> ( e % max + 1 ) + sep ).collect ( StringBuilder :: new , StringBuilder :: append , StringBuilder :: append ).toString ( ) ; System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC109_B",
        "Python": "from collections import defaultdict\nn = int ( input ( ) )\ns = defaultdict ( lambda : 0 )\nl = list ( [ input ( ) for i in range ( n ) ] )\nf = 'Yes'\ni = - 1\nfor v in l :\n    s [ v ] += 1\n    if s [ v ] >= 2 :\n        f = 'No'\n    if i != - 1 and l [ i ] [ - 1 ] != v [ 0 ] :\n        f = 'No'\n    i += 1\nprint ( f )\n\n",
        "Java": "import java.util.HashMap ; import java.util.Scanner ; public class atcoder_ABC109_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; HashMap < Integer , String > map = new HashMap < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { map.put ( i , sc.next ( ) ) ; } boolean ans = true ; HashMap < Integer , String > past = new HashMap < > ( ) ; String next = \"\" ; for ( int i = 0 ; i < N ; i ++ ) { if ( past.containsValue ( map.get ( i ) ) ) { ans = false ; break ; } past.put ( i , map.get ( i ) ) ; if ( i != 0 ) { if ( ! next.equals ( map.get ( i ).substring ( 0 , 1 ) ) ) { ans = false ; break ; } } next = map.get ( i ).substring ( map.get ( i ).length ( ) - 1 , map.get ( i ).length ( ) ) ; } if ( ans ) { System.out.println ( \"Yes\" ) ; } else { System.out.println ( \"No\" ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC114_C",
        "Python": "N = int ( input ( ) )\ndef aaa ( n ) :\n    if int ( n ) > N :\n        return 0\n    ans = 1 if set ( str ( int ( n ) ) ) == { '7' , '5' , '3' } else 0\n    for i in '753' :\n        ans += aaa ( n + i )\n    return ans\nprint ( aaa ( '0' ) )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC114_C { static Scanner scanner ; public static void main ( String [ ] args ) { scanner = new Scanner ( System.in ) ; int N = gi ( ) ; long i = 357 ; int c = 0 ; while ( i <= N ) { String s = String.valueOf ( i ) ; if ( s.contains ( \"3\" ) && s.contains ( \"5\" ) && s.contains ( \"7\" ) ) c ++ ; StringBuilder sb = new StringBuilder ( ) ; boolean f = false ; for ( int j = 0 ; j < s.length ( ) ; j ++ ) { char a = s.charAt ( s.length ( ) - 1 - j ) ; if ( f ) { sb.append ( a ) ; } else { if ( a == '3' ) { sb.append ( '5' ) ; f = true ; } else if ( a == '5' ) { sb.append ( '7' ) ; f = true ; } else { sb.append ( '3' ) ; } } } if ( ! f ) sb.append ( 3 ) ; StringBuffer sb2 = new StringBuffer ( sb ) ; i = Long.parseLong ( sb2.reverse ( ).toString ( ) ) ; } System.out.println ( c ) ; } public static String gs ( ) { return scanner.next ( ) ; } public static int gi ( ) { return Integer.parseInt ( scanner.next ( ) ) ; } public static long gl ( ) { return Long.parseLong ( scanner.next ( ) ) ; } public static double gd ( ) { return Double.parseDouble ( scanner.next ( ) ) ; } }\n"
    },
    {
        "filename": "codeforces_583_B",
        "Python": "def main_function ( ) :\n    n = int ( input ( ) )\n    a = [ int ( i ) for i in input ( ).split ( \" \" ) ]\n    current_level = 0\n    counter = 0\n    counter_turns = - 1\n    while counter < len ( a ) :\n        counter_turns += 1\n        for i in range ( len ( a ) ) :\n            if a [ i ] != - 1 and a [ i ] <= counter :\n                counter += 1\n                a [ i ] = - 1\n        a.reverse ( )\n    print ( counter_turns )\nmain_function ( )\n\n",
        "Java": "import java.util.* ; public class codeforces_583_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; while ( in.hasNext ( ) ) { int n = in.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; int s = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; b [ i ] = 0 ; } int tem = 1 ; int q = 0 ; while ( q != n ) { s ++ ; if ( tem == 1 ) { for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] <= q && b [ i ] == 0 ) { b [ i ] = 1 ; q ++ ; } } tem = 0 ; } else { for ( int i = n - 1 ; i >= 0 ; i -- ) { if ( a [ i ] <= q && b [ i ] == 0 ) { b [ i ] = 1 ; q ++ ; } } tem = 1 ; } } System.out.println ( s ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC104_C",
        "Python": "D , G = map ( int , input ( ).split ( ) )\nPC = [ tuple ( map ( int , input ( ).split ( ) ) ) for _ in range ( D ) ]\nans = 10 ** 9\nfor i in range ( 2 ** D ) :\n    score = 0\n    problem = 0\n    for j in range ( D ) :\n        if ( i >> j ) & 1 :\n            score += 100 * ( j + 1 ) * PC [ j ] [ 0 ] + PC [ j ] [ 1 ]\n            problem += PC [ j ] [ 0 ]\n    if score > G :\n        continue\n    left = G - score\n    for j in range ( D ) :\n        if ( i >> j ) & 1 :\n            continue\n        if left > 100 * ( j + 1 ) * PC [ j ] [ 0 ] + PC [ j ] [ 1 ] :\n            pass\n        else :\n            tmp = ( left + ( 100 * ( j + 1 ) ) - 1 ) // ( 100 * ( j + 1 ) )\n            ans = min ( ans , problem + min ( tmp , PC [ j ] [ 0 ] ) )\nprint ( ans )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC104_C { static final int INF = 100000 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int D = sc.nextInt ( ) ; long G = sc.nextLong ( ) ; int [ ] p = new int [ D ] ; int [ ] c = new int [ D ] ; for ( int i = 0 ; i < D ; i ++ ) { p [ i ] = sc.nextInt ( ) ; c [ i ] = sc.nextInt ( ) ; } int min = INF ; for ( int bit = 0 ; bit < ( 1 << D ) ; bit ++ ) { int score = 0 ; int solve_num = 0 ; for ( int i = 0 ; i < D ; i ++ ) { if ( ( bit & ( 1 << i ) ) != 0 ) { score += 100 * ( i + 1 ) * p [ i ] + c [ i ] ; solve_num += p [ i ] ; } } if ( score < G ) { loop : for ( int i = D - 1 ; i >= 0 ; i -- ) { if ( ( bit & ( 1 << i ) ) == 0 ) { for ( int j = 0 ; j < p [ i ] - 1 ; j ++ ) { score += 100 * ( i + 1 ) ; solve_num ++ ; if ( score >= G ) { break loop ; } } } } } if ( score >= G ) { min = Math.min ( min , solve_num ) ; } } System.out.println ( min ) ; sc.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_131_B",
        "Python": "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nn = int ( input ( ) )\nw = Counter ( map ( int , input ( ).split ( ) ) )\nc = 0\nfor i in w :\n    if i == 0 :\n        c += w [ i ] * ( w [ i ] - 1 )\n    else :\n        if - i in w :\n            c += w [ i ] * w [ - i ]\nprint ( c // 2 )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_131_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int N = ( int ) 1e5 + 5 ; long [ ] cnt = new long [ 21 ] ; for ( int i = 0 ; i < n ; i ++ ) { cnt [ scan.nextInt ( ) + 10 ] ++ ; } long res = 0 ; for ( int i = 0 ; i < 10 ; i ++ ) { res += cnt [ i ] * cnt [ 20 - i ] ; } res += ( cnt [ 10 ] * ( cnt [ 10 ] - 1 ) ) / 2 ; System.out.println ( res ) ; } }\n"
    },
    {
        "filename": "codeforces_598_A",
        "Python": "t = int ( input ( ) )\ndef solve ( n ) :\n    s = ( 1 + n ) * n // 2\n    t = 1\n    while t <= n :\n        s -= 2 * t\n        t *= 2\n    return s\nfor _ in range ( t ) :\n    n = int ( input ( ) )\n    print ( solve ( n ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_598_A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; int q = sc.nextInt ( ) ; while ( q -- > 0 ) { int n = sc.nextInt ( ) ; long s = 0 ; int x = ( int ) ( Math.log ( n ) / Math.log ( 2 ) ) ; x ++ ; s = - 1 * ( long ) Math.pow ( 2 , x ) + 2 + ( ( long ) n * ( long ) ( n + 1 ) ) / 2 - ( long ) Math.pow ( 2 , x ) ; System.out.println ( s ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC125_B",
        "Python": "N = int ( input ( ) )\nV = input ( ).split ( \" \" )\nV = [ int ( i ) for i in V ]\nC = input ( ).split ( \" \" )\nC = [ int ( i ) for i in C ]\nlist = [ 0 ]\nans = 0\nX = 0\nY = 0\nfor i in range ( N ) :\n    if V [ i ] - C [ i ] > 0 :\n        X = V [ i ]\n        Y = C [ i ]\n        list.append ( X - Y )\nprint ( sum ( list ) )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC125_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; Integer n = Integer.valueOf ( sc.nextLine ( ) ) ; String vStr = sc.nextLine ( ) ; Map < Integer , Integer > vList = str2List ( vStr ) ; String cStr = sc.nextLine ( ) ; Map < Integer , Integer > cList = str2List ( cStr ) ; Integer max = 0 ; for ( Integer i = 0 ; i < n ; i ++ ) { Integer profit = vList.get ( i ) - cList.get ( i ) ; if ( profit > 0 ) { max += profit ; } } System.out.println ( max ) ; } static Map < Integer , Integer > str2List ( String str ) { String [ ] vArrStr = str.split ( \" \" ) ; Map < Integer , Integer > ret = new HashMap < > ( ) ; Integer key = 0 ; for ( String val : vArrStr ) { ret.put ( key , Integer.valueOf ( val ) ) ; key ++ ; } return ret ; } }\n"
    },
    {
        "filename": "atcoder_ABC142_C",
        "Python": "from operator import itemgetter\nN = int ( input ( ) )\nA = [ ( i + 1 , int ( x ) ) for i , x in enumerate ( input ( ).split ( ) ) ]\nA_ = sorted ( A , key = itemgetter ( 1 ) )\nA__ = [ a [ 0 ] for a in A_ ]\nfor i in A__ [ : - 1 ] :\n    print ( i , end = ' ' )\nprint ( A__ [ - 1 ] )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC142_C { public static List < Integer > P ; public static void main ( String args [ ] ) { Scanner scanner = new Scanner ( System.in ) ; int N = scanner.nextInt ( ) ; Map < Integer , Integer > idorder = new HashMap < > ( ) ; for ( int i = 1 ; i <= N ; i ++ ) { int A = scanner.nextInt ( ) ; idorder.put ( A , i ) ; } for ( int i = 1 ; i <= N ; i ++ ) { System.out.print ( idorder.get ( i ) ) ; System.out.print ( \" \" ) ; } } }\n"
    },
    {
        "filename": "codeforces_500_A",
        "Python": "import sys\nn , t = map ( int , input ( ).split ( ) )\ns = list ( [ int ( x ) for x in input ( ).split ( ) ] )\ncurrent_cell = 0\nwhile current_cell <= t :\n    current_cell += s [ current_cell - 1 ]\n    if current_cell == t :\n        print ( \"YES\" )\n        sys.exit ( )\n    else :\n        continue\nprint ( \"NO\" )\n\n",
        "Java": "import java.util.* ; public class codeforces_500_A { public static boolean dfs ( int currpos , int [ ] arr , int target ) { if ( currpos == target ) return true ; if ( currpos == arr.length + 1 ) return false ; boolean teleport = dfs ( currpos + arr [ currpos - 1 ] , arr , target ) ; if ( teleport ) return true ; return false ; } public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int goal = sc.nextInt ( ) ; int [ ] arr = new int [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) arr [ i ] = sc.nextInt ( ) ; boolean isFound = dfs ( 1 , arr , goal ) ; if ( isFound ) System.out.println ( \"YES\" ) ; else System.out.println ( \"NO\" ) ; sc.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC119_B",
        "Python": "N = int ( input ( ) )\nx = [ eval ( input ( ).replace ( 'JPY' , '* 1.0' ).replace ( 'BTC' , '* 380000.0' ) ) for i in range ( N ) ]\nprint ( sum ( x ) )\n\n",
        "Java": "import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_ABC119_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; double [ ] x = new double [ N ] ; String [ ] u = new String [ N ] ; for ( int i = 0 ; i < N ; ++ i ) { x [ i ] = sc.nextDouble ( ) ; u [ i ] = sc.next ( ) ; } System.out.println ( solve ( x , u ) ) ; sc.close ( ) ; } static double solve ( double [ ] x , String [ ] u ) { return IntStream.range ( 0 , x.length ).mapToDouble ( i -> x [ i ] * ( u [ i ].equals ( \"JPY\" ) ? 1 : 380000 ) ).sum ( ) ; } }\n"
    },
    {
        "filename": "codeforces_272_B",
        "Python": "def main ( ) :\n    input ( )\n    return nPairsWithCommonFX ( map ( int , input ( ).split ( ) ) )\ndef nPairsWithCommonFX ( sequence ) :\n    storage = { }\n    FXs = [ ]\n    for value in sequence :\n        y = f ( value )\n        if y not in storage :\n            storage [ y ] = [ value ]\n            FXs.append ( y )\n        else :\n            storage [ y ].append ( value )\n    return ( sum ( len ( storage [ y ] ) * len ( storage [ y ] ) for y in FXs ) - sum ( len ( storage [ y ] ) for y in FXs ) ) // 2\ndef f ( n ) :\n    y = 1\n    while n != 1 :\n        if n % 2 :\n            y += 1\n        n //= 2\n    return y\nif __name__ == '__main__' :\n    print ( main ( ) )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.util.StringTokenizer ; public class codeforces_272_B { public static void main ( String [ ] args ) { FastReader sc = new FastReader ( ) ; PrintWriter out = new PrintWriter ( System.out ) ; int n = sc.nextInt ( ) ; int a [ ] = new int [ 33 ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ rec ( sc.nextInt ( ) ) ] ++ ; } double answer = 0 ; for ( int i = 0 ; i < a.length ; i ++ ) { double summ = ( 1 + a [ i ] - 1 ) / 2.0 * ( a [ i ] - 1 ) ; answer += summ ; } out.println ( ( long ) answer ) ; out.close ( ) ; } static int rec ( long x ) { int answer = 0 ; for ( int k = 31 ; k >= 0 ; k -- ) { if ( ( x & ( 1 << k ) ) != 0 ) answer ++ ; } return answer ; } static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }\n"
    },
    {
        "filename": "atcoder_ABC129_E",
        "Python": "mod = 10 ** 9 + 7\nl = input ( )\nn = len ( l )\ndp = [ [ 0 ] * 2 for _ in range ( n + 1 ) ]\ndp [ 0 ] [ 0 ] = 1\nfor i , c in enumerate ( l ) :\n    if c == '0' :\n        dp [ i + 1 ] [ 0 ] += dp [ i ] [ 0 ]\n        dp [ i + 1 ] [ 1 ] += dp [ i ] [ 1 ] * 3\n    else :\n        dp [ i + 1 ] [ 0 ] += dp [ i ] [ 0 ] * 2\n        dp [ i + 1 ] [ 1 ] += dp [ i ] [ 0 ]\n        dp [ i + 1 ] [ 1 ] += dp [ i ] [ 1 ] * 3\n    dp [ i + 1 ] [ 0 ] %= mod\n    dp [ i + 1 ] [ 1 ] %= mod\nprint ( ( dp [ n ] [ 0 ] + dp [ n ] [ 1 ] ) % mod )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC129_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int M = 1000000007 ; char [ ] s = sc.nextLine ( ).toCharArray ( ) ; int n = s.length ; int [ ] [ ] dp = new int [ n + 1 ] [ 2 ] ; dp [ 0 ] [ 0 ] = 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s [ i ] == '0' ) { dp [ i + 1 ] [ 0 ] = dp [ i ] [ 0 ] ; dp [ i + 1 ] [ 1 ] = dp [ i ] [ 1 ] ; } else { dp [ i + 1 ] [ 1 ] = ( dp [ i ] [ 0 ] + dp [ i ] [ 1 ] ) % M ; } if ( s [ i ] == '0' ) { dp [ i + 1 ] [ 1 ] += ( dp [ i ] [ 1 ] * 2 ) % M ; dp [ i + 1 ] [ 1 ] %= M ; } else { dp [ i + 1 ] [ 0 ] += ( dp [ i ] [ 0 ] * 2 ) % M ; dp [ i + 1 ] [ 1 ] += ( dp [ i ] [ 1 ] * 2 ) % M ; dp [ i + 1 ] [ 0 ] %= M ; dp [ i + 1 ] [ 1 ] %= M ; } } System.out.println ( ( dp [ n ] [ 0 ] + dp [ n ] [ 1 ] ) % M ) ; } }\n"
    },
    {
        "filename": "codeforces_327_A",
        "Python": "import itertools\ndef find ( s , ch ) :\n    return [ i for i , ltr in enumerate ( s ) if ltr == ch ]\nif __name__ == '__main__' :\n    n = int ( input ( ) )\n    s = input ( ).replace ( \"\" , \"\" )\n    if '0' not in s :\n        print ( n - 1 )\n    else :\n        indices = find ( s , '0' )\n        if len ( indices ) == 1 :\n            print ( n )\n        else :\n            maximum = 0\n            combs = itertools.combinations ( indices , 2 )\n            for x in combs :\n                maximum = max ( maximum , 2 + 2 * ( abs ( indices.index ( x [ 0 ] ) - indices.index ( x [ 1 ] ) ) - 1 ) - ( abs ( x [ 0 ] - x [ 1 ] ) - 1 ) )\n            print ( s.count ( '1' ) + maximum )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_327_A { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; if ( scanner.hasNext ( ) ) { int n = scanner.nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = scanner.nextInt ( ) ; int max = Integer.MIN_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i ; j < n ; j ++ ) { int x = 0 ; int brr [ ] = new int [ n ] ; for ( int k : arr ) brr [ x ++ ] = k ; for ( int k = i ; k <= j ; k ++ ) { if ( brr [ k ] == 0 ) brr [ k ] = 1 ; else brr [ k ] = 0 ; } int count = checKNo ( brr ) ; if ( count > max ) max = count ; } } if ( n == 1 ) { if ( arr [ 0 ] == 1 ) System.out.println ( 0 ) ; else System.out.println ( 1 ) ; } else { System.out.println ( max ) ; } } } private static int checKNo ( int [ ] brr ) { int val = 0 ; for ( int i : brr ) if ( i == 1 ) ++ val ; return val ; } }\n"
    },
    {
        "filename": "atcoder_AGC027_A",
        "Python": "na = lambda : list ( map ( int , input ( ).split ( ) ) )\nn , x = na ( )\na = sorted ( na ( ) )\nans = 0\nif a [ 0 ] > x :\n    print ( 0 )\n    exit ( )\nfor i in a :\n    if i > x :\n        x = 0\n        break\n    x -= i\n    ans += 1\nif x != 0 :\n    ans -= 1\nprint ( ans )\n\n",
        "Java": "import java.util.* ; public class atcoder_AGC027_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; long x = sc.nextInt ( ) ; List < Long > sweet = new ArrayList < Long > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { long a = sc.nextInt ( ) ; sweet.add ( a ) ; } Collections.sort ( sweet ) ; int num = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( x - sweet.get ( num ) >= 0 ) { x = x - sweet.get ( num ) ; num ++ ; } else { break ; } } if ( ( num == N ) && ( x > 0 ) ) { num -= 1 ; } System.out.println ( num ) ; } }\n"
    },
    {
        "filename": "codeforces_612_B",
        "Python": "n = int ( input ( ) )\na = list ( map ( int , input ( ).split ( ) ) )\nb = [ 0 ] * n\nfor i in range ( n ) :\n    b [ a [ i ] - 1 ] = i\nres = 0\nfor i in range ( 1 , n ) :\n    res += abs ( b [ i ] - b [ i - 1 ] )\nprint ( res )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_612_B { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System.in ) ; int n = s.nextInt ( ) ; int dp [ ] = new int [ 200001 ] ; for ( int i = 0 ; i < n ; i ++ ) { dp [ s.nextInt ( ) ] = i ; } long ans = 0 ; for ( int i = 2 ; i <= n ; i ++ ) { ans += Math.abs ( dp [ i ] - dp [ i - 1 ] ) ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC169_C",
        "Python": "def main ( ) :\n    from sys import setrecursionlimit , stdin\n    from os import environ\n    from collections import defaultdict , deque , Counter\n    from math import ceil , floor , gcd\n    from itertools import accumulate , combinations , combinations_with_replacement\n    setrecursionlimit ( 10 ** 6 )\n    dbg = ( lambda * something : print ( * something ) ) if 'TERM_PROGRAM' in environ else lambda * x : 0\n    input = lambda : stdin.readline ( ).rstrip ( )\n    LMIIS = lambda : list ( map ( int , input ( ).split ( ) ) )\n    II = lambda : int ( input ( ) )\n    P = 10 ** 9 + 7\n    INF = 10 ** 9 + 10\n    sa , sb = input ( ).split ( )\n    a = int ( sa )\n    b = int ( float ( sb ) * 100 + 0.1 )\n    print ( a * b // 100 )\nmain ( )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.LinkedList ; import java.util.Scanner ; public class atcoder_ABC169_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long a = sc.nextLong ( ) ; String b = sc.next ( ) ; char [ ] bChar = b.toCharArray ( ) ; int length = bChar.length ; String bStr = \"\" ; for ( int i = 0 ; i < length ; i ++ ) { if ( bChar [ i ] != '.' ) { bStr += bChar [ i ] ; } } int bInt = Integer.parseInt ( bStr ) ; long result = ( a * bInt ) / 100 ; System.out.println ( result ) ; } }\n"
    },
    {
        "filename": "codeforces_274_A",
        "Python": "num , k = [ int ( x ) for x in input ( ).split ( ) ]\narr = [ int ( x ) for x in input ( ).split ( ) ]\ndifferent = set ( )\ntemp = 0\narr.sort ( )\nfor x in arr :\n    if ( x % k != 0 or not x // k in different ) :\n        different.add ( x )\n    temp = max ( len ( different ) , temp )\nprint ( temp )\n\n",
        "Java": "import java.util.* ; public class codeforces_274_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long k = sc.nextLong ( ) ; long [ ] arr = new long [ n ] ; HashSet < Long > set = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextLong ( ) ; } Arrays.sort ( arr ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k != 0 ) { count ++ ; set.add ( arr [ i ] ) ; } else if ( ! set.contains ( arr [ i ] / k ) ) { count ++ ; set.add ( arr [ i ] ) ; } } System.out.println ( count ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC155_D",
        "Python": "N , K = map ( int , input ( ).split ( ) )\nA = list ( map ( int , input ( ).split ( ) ) )\nA.sort ( )\nll = - 10 ** 18 - 1\nrr = 10 ** 18 + 1\nwhile ll + 1 < rr :\n    x = ( ll + rr ) // 2\n    tot = 0\n    for i in range ( N ) :\n        if A [ i ] < 0 :\n            l = - 1\n            r = N\n            while l + 1 < r :\n                c = ( l + r ) // 2\n                if A [ i ] * A [ c ] < x :\n                    r = c\n                else :\n                    l = c\n            tot += N - r\n        else :\n            l = - 1\n            r = N\n            while l + 1 < r :\n                c = ( l + r ) // 2\n                if A [ i ] * A [ c ] < x :\n                    l = c\n                else :\n                    r = c\n            tot += r\n        if A [ i ] * A [ i ] < x :\n            tot -= 1\n    tot //= 2\n    if tot < K :\n        ll = x\n    else :\n        rr = x\nprint ( ll )\n\n",
        "Java": "import java.util.* ; import java.math.* ; public class atcoder_ABC155_D { static int mod = ( int ) 1e9 + 7 ; static int DX [ ] = { - 1 , 0 , 1 , 0 } , DY [ ] = { 0 , - 1 , 0 , 1 } ; static int n ; static long k ; static long a [ ] ; public static void main ( String [ ] args ) { Scanner fs = new Scanner ( System.in ) ; n = fs.nextInt ( ) ; k = fs.nextLong ( ) ; a = new long [ n ] ; for ( int i = 0 ; i < n ; ++ i ) { a [ i ] = fs.nextLong ( ) ; } Arrays.sort ( a ) ; long INF = ( long ) ( 1e18 ) + 1 ; long l = - INF ; long r = INF ; while ( l + 1 < r ) { long c = ( l + r ) / 2 ; if ( check ( c ) ) l = c ; else r = c ; } System.out.println ( l ) ; } static boolean check ( long x ) { long tot = 0 ; for ( int i = 0 ; i < n ; i ++ ) { long now = a [ i ] ; int l = 0 , r = n ; if ( now >= 0 ) { while ( l < r ) { int c = ( l + r ) / 2 ; if ( now * a [ c ] < x ) l = c + 1 ; else r = c ; } tot += l ; } else { while ( l < r ) { int c = ( l + r ) / 2 ; if ( now * a [ c ] >= x ) l = c + 1 ; else r = c ; } tot += ( n - l ) ; } if ( ( long ) a [ i ] * a [ i ] < x ) tot -- ; } if ( tot / 2 < k ) return true ; else return false ; } }\n"
    },
    {
        "filename": "atcoder_AGC024_B",
        "Python": "def main ( ) :\n    N = int ( input ( ) )\n    P = [ int ( input ( ) ) for _ in range ( N ) ]\n    editorial ( N , P )\ndef editorial ( N , P ) :\n    if N == 1 :\n        print ( 0 )\n        return\n    a = [ 0 ] * ( N + 1 )\n    for i , p in enumerate ( P ) :\n        a [ p ] = i\n    tmp = 1\n    max_len = 1\n    for i in range ( 1 , N ) :\n        if a [ i ] < a [ i + 1 ] :\n            tmp += 1\n            max_len = max ( max_len , tmp )\n        else :\n            tmp = 1\n    ans = N - max_len\n    print ( ans )\ndef WA ( N , P ) :\n    tmp = 0\n    ans = 0\n    for i , p in enumerate ( P ) :\n        if i == 0 or P [ i - 1 ] + 1 == p :\n            tmp += 1\n        else :\n            ans = max ( ans , tmp )\n            tmp = 1\n    print ( N - ans )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.HashMap ; import java.util.List ; import java.util.Map ; import java.util.Scanner ; public class atcoder_AGC024_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int N = scan.nextInt ( ) ; int [ ] P = new int [ N ] ; for ( int i = 0 ; i < N ; ++ i ) P [ i ] = scan.nextInt ( ) - 1 ; Map < Integer , Integer > map = new HashMap < > ( ) ; for ( int i = 0 ; i < N ; ++ i ) map.put ( P [ i ] , i ) ; List < Integer > nglist = new ArrayList < > ( ) ; for ( int i = 0 ; i < N - 1 ; ++ i ) if ( map.get ( i ) > map.get ( i + 1 ) ) nglist.add ( i ) ; if ( nglist.isEmpty ( ) ) { System.out.println ( 0 ) ; return ; } int ans = Math.min ( N - nglist.get ( 0 ) - 1 , nglist.get ( nglist.size ( ) - 1 ) + 1 ) ; for ( int i = 0 ; i < nglist.size ( ) - 1 ; ++ i ) { ans = Math.min ( nglist.get ( i ) + 1 + N - nglist.get ( i + 1 ) - 1 , ans ) ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC128_C",
        "Python": "def main ( ) :\n    import itertools\n    n , m = map ( int , input ( ).split ( ) )\n    li = [ list ( map ( int , input ( ).split ( ) ) ) [ 1 : ] for _ in range ( m ) ]\n    p = tuple ( map ( int , input ( ).split ( ) ) )\n    q = set ( sum ( li , [ ] ) )\n    r = set ( range ( 1 , n + 1 ) )\n    v = r - q\n    ans = 0\n    for i in range ( 0 , len ( q ) + 1 ) :\n        for s in itertools.combinations ( q , i ) :\n            for u , w in zip ( li , p ) :\n                s = set ( s )\n                if len ( s & set ( u ) ) % 2 != w :\n                    break\n            else :\n                ans += 2 ** ( len ( v ) )\n    print ( ans )\nif __name__ == \"__main__\" :\n    main ( )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC128_C { public static void main ( String [ ] args ) { atcoder_ABC128_C main = new atcoder_ABC128_C ( ) ; main.run ( ) ; } public void run ( ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; ArrayList < Integer > a = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { a.add ( 0 ) ; } for ( int i = 0 ; i < M ; i ++ ) { int k = sc.nextInt ( ) ; for ( int j = 0 ; j < k ; j ++ ) { int s = sc.nextInt ( ) ; s -- ; a.set ( s , a.get ( s ) | ( 1 << i ) ) ; } } int p = 0 ; for ( int i = 0 ; i < M ; i ++ ) { int x = sc.nextInt ( ) ; p |= ( x << i ) ; } int ans = 0 ; for ( int s = 0 ; s < ( 1 << N ) ; s ++ ) { int t = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( ( ( s >> i ) & 1 ) == 1 ) { t ^= a.get ( i ) ; } } if ( p == t ) { ans ++ ; } } System.out.println ( ans ) ; sc.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_110_B",
        "Python": "LUCKY = \"abcd\"\nn = int ( input ( ) )\ns = \"\"\nfor i in range ( n ) :\n    s += LUCKY [ i % 4 ]\nprint ( s )\n\n",
        "Java": "import java.util.* ; public class codeforces_110_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n , i , j , p = 97 ; n = sc.nextInt ( ) ; char c [ ] = new char [ n ] ; for ( i = 0 ; i < 4 ; i ++ ) { for ( j = i ; j < n ; j += 4 ) c [ j ] = ( char ) p ; p ++ ; } for ( i = 0 ; i < n ; i ++ ) System.out.print ( c [ i ] ) ; } }\n"
    },
    {
        "filename": "codeforces_637_A",
        "Python": "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nn = int ( input ( ) )\ns = input ( ) [ : - 1 ].split ( )\nw = Counter ( s )\ns = s [ : : - 1 ]\nc , a = - 1 , 0\nfor i in w :\n    if w [ i ] == max ( w.values ( ) ) :\n        if s.index ( i ) > c :\n            a = i\n            c = s.index ( i )\nprint ( a )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_637_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; int ara [ ] = new int [ n ] ; Map < Integer , Integer > map = new HashMap < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int v = in.nextInt ( ) ; ara [ i ] = v ; if ( ! map.containsKey ( v ) ) { map.put ( v , 1 ) ; } else { map.put ( v , map.get ( v ) + 1 ) ; } } int max = 0 ; for ( Integer i : map.values ( ) ) { max = Math.max ( max , i ) ; } Map < Integer , Integer > mm = new HashMap < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( ! mm.containsKey ( ara [ i ] ) ) { mm.put ( ara [ i ] , 1 ) ; if ( mm.get ( ara [ i ] ) == max ) { pw.println ( ara [ i ] ) ; break ; } } else { mm.put ( ara [ i ] , mm.get ( ara [ i ] ) + 1 ) ; if ( mm.get ( ara [ i ] ) == max ) { pw.println ( ara [ i ] ) ; break ; } } } pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC127_F",
        "Python": "q = int ( input ( ) )\nans = [ 0 , 0 ]\nimport heapq\np1 = [ ]\np2 = [ ]\nheapq.heapify ( p1 )\nheapq.heapify ( p2 )\nsum_b = 0\nsum_p1 = 0\nsum_p2 = 0\nfor _ in range ( q ) :\n    ql = list ( map ( int , input ( ).split ( ) ) )\n    if ql [ 0 ] == 2 :\n        if len ( p1 ) == len ( p2 ) :\n            print ( - p2 [ 0 ] , sum_p1 - len ( p1 ) * - p2 [ 0 ] + len ( p2 ) * - p2 [ 0 ] - sum_p2 + sum_b )\n        else :\n            print ( p1 [ 0 ] , sum_p1 - len ( p1 ) * p1 [ 0 ] + len ( p2 ) * p1 [ 0 ] - sum_p2 + sum_b )\n    else :\n        sum_b += ql [ 2 ]\n        if len ( p1 ) == 0 :\n            heapq.heappush ( p1 , ql [ 1 ] )\n            sum_p1 += ql [ 1 ]\n        elif p1 [ 0 ] <= ql [ 1 ] :\n            heapq.heappush ( p1 , ql [ 1 ] )\n            sum_p1 += ql [ 1 ]\n        else :\n            heapq.heappush ( p2 , - ql [ 1 ] )\n            sum_p2 += ql [ 1 ]\n        if len ( p1 ) < len ( p2 ) :\n            k = heapq.heappop ( p2 )\n            heapq.heappush ( p1 , - k )\n            sum_p2 += k\n            sum_p1 -= k\n        if len ( p1 ) - 1 > len ( p2 ) :\n            k = heapq.heappop ( p1 )\n            heapq.heappush ( p2 , - k )\n            sum_p1 -= k\n            sum_p2 += k\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class atcoder_ABC127_F { static OutputStream outputStream = System.out ; static PrintWriter out = new PrintWriter ( outputStream ) ; public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; int t = Integer.parseInt ( br.readLine ( ) ) ; String [ ] s ; PriorityQueue < Integer > pqmax = new PriorityQueue < Integer > ( ) ; PriorityQueue < Integer > pqmin = new PriorityQueue < Integer > ( new Comparator < Integer > ( ) { public int compare ( Integer x , Integer y ) { return y - x ; } } ) ; long sumMin = 0 , sumMax = 0 , sumb = 0 ; int min = 0 ; while ( t -- > 0 ) { s = br.readLine ( ).split ( \" \" ) ; if ( s [ 0 ].charAt ( 0 ) == '2' ) { long ans = min ; ans *= pqmin.size ( ) ; ans -= sumMin ; long ans1 = min ; ans1 *= pqmax.size ( ) ; ans1 = sumMax - ans1 ; out.println ( min + \" \" + ( ans + ans1 + sumb ) ) ; } else { int in = Integer.parseInt ( s [ 1 ] ) ; sumb += Long.parseLong ( s [ 2 ] ) ; if ( in > min ) { pqmax.add ( in ) ; sumMax += in ; } else { pqmin.add ( in ) ; sumMin += in ; } if ( pqmin.size ( ) > pqmax.size ( ) ) { sumMax += pqmin.peek ( ) ; sumMin -= pqmin.peek ( ) ; pqmax.add ( pqmin.poll ( ) ) ; } if ( pqmin.size ( ) < pqmax.size ( ) ) { sumMax -= pqmax.peek ( ) ; sumMin += pqmax.peek ( ) ; pqmin.add ( pqmax.poll ( ) ) ; } min = pqmin.peek ( ) ; } } out.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC037_E",
        "Python": "N , K = map ( int , input ( ).split ( ) )\nS = input ( )\naaaa = False\nif K >= 15 :\n    aaaa = True\nelif 2 ** K >= N :\n    aaaa = True\nif aaaa :\n    print ( min ( S ) * N )\n    exit ( )\ndef get_last_dict ( s_str ) :\n    U = s_str + s_str [ : : - 1 ]\n    c = min ( s_str )\n    p = U.index ( c )\n    minindex = p\n    p += 1\n    while p <= N :\n        if U [ p ] == c :\n            if check_normal_dict ( U , minindex , p ) :\n                minindex = p\n        p += 1\n    return U [ minindex : minindex + N ]\ndef check_normal_dict ( u , pointer1 , pointer2 ) :\n    for i in range ( N ) :\n        if u [ pointer1 + i ] > u [ pointer2 + i ] :\n            return True\n        elif u [ pointer1 + i ] < u [ pointer2 + i ] :\n            return False\n    return False\nS = get_last_dict ( S )\nif K == 1 :\n    print ( S )\nelse :\n    count = 0\n    for c in S :\n        if c == S [ 0 ] :\n            count += 1\n        else :\n            break\n    if count * ( 2 ** ( K - 1 ) ) >= N :\n        print ( S [ 0 ] * N )\n    else :\n        S = S [ 0 ] * ( count * ( ( 2 ** ( K - 1 ) ) - 1 ) ) + S\n        print ( S [ 0 : N ] )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_AGC037_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; try { final int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; StringBuilder S = new StringBuilder ( sc.next ( ) ) ; boolean firstTime = true ; int step = 1 ; while ( K > 0 ) { StringBuilder T = new StringBuilder ( S.toString ( ) ) ; T.reverse ( ) ; StringBuilder revU = new StringBuilder ( S.toString ( ) + T.toString ( ) ) ; revU.reverse ( ) ; String sDash = S.toString ( ) ; for ( int i = N ; i >= 0 ; i -= step ) { String tmp = revU.substring ( i , i + N ) ; if ( sDash.compareTo ( tmp ) > 0 ) { sDash = tmp ; } else { if ( ! firstTime ) { break ; } } } if ( firstTime ) { firstTime = false ; if ( Math.pow ( 2 , K ) > N ) { char c = sDash.charAt ( 0 ) ; for ( int i = 0 ; i < N ; i ++ ) { System.out.print ( c ) ; } System.out.println ( ) ; System.exit ( 0 ) ; } } else { step += step ; } K -- ; S = new StringBuilder ( sDash ) ; S.reverse ( ) ; } System.out.println ( S.reverse ( ) ) ; } finally { sc.close ( ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC051_A",
        "Python": "print ( input ( ).replace ( \",\" , \" \" ) )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.* ; import java.math.* ; public class atcoder_ABC051_A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; StringBuilder sb = new StringBuilder ( ) ; String a = br.readLine ( ) ; sb.append ( a.replace ( \",\" , \" \" ) ) ; System.out.println ( sb ) ; } }\n"
    },
    {
        "filename": "codeforces_203_B",
        "Python": "def solve_case ( ) :\n    n , m = map ( int , input ( ).split ( ) )\n    count = [ None ] * n\n    for i in range ( n ) :\n        count [ i ] = [ 0 ] * n\n    ans = - 1\n    for k in range ( m ) :\n        x , y = map ( int , input ( ).split ( ) )\n        x -= 1\n        y -= 1\n        found = False\n        for i in range ( x - 2 , x + 1 ) :\n            for j in range ( y - 2 , y + 1 ) :\n                if i >= 0 and i < n and j >= 0 and j < n :\n                    count [ i ] [ j ] += 1\n                    if count [ i ] [ j ] == 9 :\n                        found = True\n        if found :\n            ans = k + 1\n            break\n    print ( ans )\nsolve_case ( )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_203_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int N = in.nextInt ( ) ; int M = in.nextInt ( ) ; int [ ] [ ] black = new int [ N + 2 ] [ N + 2 ] ; for ( int m = 1 ; m <= M ; m ++ ) { int x = in.nextInt ( ) ; int y = in.nextInt ( ) ; for ( int xx = x - 1 ; xx <= x + 1 ; xx ++ ) { for ( int yy = y - 1 ; yy <= y + 1 ; yy ++ ) { if ( ++ black [ xx ] [ yy ] == 9 ) { System.out.println ( m ) ; return ; } } } } System.out.println ( \"-1\" ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC164_A",
        "Python": "import sys\ndef main ( ) :\n    S , W = map ( int , input ( ).split ( ) )\n    print ( \"unsafe\" ) if ( S <= W ) else print ( \"safe\" )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC164_A { public static void main ( String [ ] args ) throws Exception { Scanner scan = new Scanner ( System.in ) ; ArrayList < String > scList = new ArrayList < > ( ) ; for ( int i = 0 ; i >= 0 ; i ++ ) { try { scList.add ( scan.nextLine ( ) ) ; } catch ( Exception e ) { break ; } } String [ ] numlist = scList.get ( 0 ).split ( \" \" ) ; int Sheep = Integer.parseInt ( numlist [ 0 ] ) ; int Wolve = Integer.parseInt ( numlist [ 1 ] ) ; if ( Wolve >= Sheep ) { System.out.println ( \"unsafe\" ) ; } else { System.out.println ( \"safe\" ) ; } } }\n"
    },
    {
        "filename": "codeforces_8_B",
        "Python": "record_of_movements = input ( )\nx , y = 0 , 0\nd_movement = { 'L' : ( 0 , - 1 ) , 'R' : ( 0 , 1 ) , 'U' : ( 1 , 0 ) , 'D' : ( - 1 , 0 ) }\nd = { ( x , y ) : '' }\nbug = False\nfor move in record_of_movements :\n    temp = ( x , y )\n    x += d_movement [ move ] [ 0 ]\n    y += d_movement [ move ] [ 1 ]\n    if ( x , y ) not in d :\n        for step in d_movement :\n            if ( x + d_movement [ step ] [ 0 ] , y + d_movement [ step ] [ 1 ] ) != temp and ( x + d_movement [ step ] [ 0 ] , y + d_movement [ step ] [ 1 ] ) in d :\n                bug = True\n                break\n    else :\n        bug = True\n    if bug :\n        break\n    d [ x , y ] = ''\nif bug :\n    print ( 'BUG' )\nelse :\n    print ( 'OK' )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_8_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int i , j , x = 0 , y = 0 , k = 0 , dx , dy ; boolean flag = true ; String s ; char [ ] ch = new char [ 100 ] ; int [ ] [ ] co = new int [ 2 ] [ 101 ] ; s = scan.next ( ) ; ch = s.toCharArray ( ) ; co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; for ( i = 0 ; i < s.length ( ) ; ++ i ) { switch ( ch [ i ] ) { case 'L' : -- x ; break ; case 'R' : ++ x ; break ; case 'U' : ++ y ; break ; case 'D' : -- y ; break ; } co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; } for ( i = 0 ; i < k - 3 ; ++ i ) { for ( j = i + 3 ; j < k ; ++ j ) { dx = co [ 0 ] [ i ] - co [ 0 ] [ j ] ; dy = co [ 1 ] [ i ] - co [ 1 ] [ j ] ; if ( dx < 0 ) dx *= ( - 1 ) ; if ( dy < 0 ) dy *= ( - 1 ) ; if ( ( dx <= 1 && dy == 0 ) || ( dy <= 1 && dx == 0 ) ) { flag = false ; break ; } } if ( ! flag ) break ; } if ( flag ) System.out.println ( \"OK\" ) ; else System.out.println ( \"BUG\" ) ; } }\n"
    },
    {
        "filename": "codeforces_67_B",
        "Python": "u = input\nn , k = map ( int , u ( ).split ( ) )\nM = [ int ( i ) for i in u ( ).split ( ) ]\nm = 0\nfor j in range ( n ) :\n    for p in range ( n ) :\n        if ( 0 == M [ p ] ) :\n            print ( p + 1 , end = ' ' )\n            break\n    for l in range ( p + 1 - k ) : M [ l ] -= 1\n    M [ p ] -= 1\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_67_B extends PrintWriter { codeforces_67_B ( ) { super ( System.out , true ) ; } Scanner sc = new Scanner ( System.in ) ; public static void main ( String [ ] $ ) { codeforces_67_B o = new codeforces_67_B ( ) ; o.main ( ) ; o.flush ( ) ; } void main ( ) { int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] bb = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) bb [ i ] = sc.nextInt ( ) ; int [ ] aa = new int [ n ] ; int m = 0 ; for ( int a = n - 1 ; a >= 0 ; a -- ) { int j = 0 ; while ( bb [ a ] > 0 ) { if ( aa [ j ] >= a + k ) bb [ a ] -- ; j ++ ; } for ( int j_ = m ++ ; j_ > j ; j_ -- ) aa [ j_ ] = aa [ j_ - 1 ] ; aa [ j ] = a ; } for ( int i = 0 ; i < n ; i ++ ) print ( aa [ i ] + 1 + \" \" ) ; println ( ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC028_A",
        "Python": "N , M = map ( int , input ( ).split ( ) )\nS = input ( )\nT = input ( )\nlist_S = list ( S )\nlist_T = list ( T )\nNumber_i = [ i for i in range ( N ) ]\nNumber_iMN = [ ]\nfor i in Number_i :\n    Number_iMN.append ( i * M / N )\nNumber_j = [ j for j in range ( M ) ]\nKaburi_j = list ( set ( Number_iMN ) & set ( Number_j ) )\nKaburi_i = [ ]\nfor j in Kaburi_j :\n    Kaburi_i.append ( int ( j * N / M ) )\ncounter = 0\nFlag = 0\nKaburi_Size = len ( Kaburi_i )\nwhile counter <= Kaburi_Size - 1 :\n    if list_S [ int ( Kaburi_i [ counter ] ) ] == list_T [ int ( Kaburi_j [ counter ] ) ] :\n        pass\n    else :\n        Flag = 1\n        break\n    counter += 1\ndef gcd ( a , b ) :\n    while b > 0 :\n        a , b = b , a % b\n    return a\nif Flag == 1 :\n    print ( - 1 )\nelse :\n    print ( int ( N * M / gcd ( N , M ) ) )\n\n",
        "Java": "import java.math.BigInteger ; import java.util.* ; import java.util.stream.* ; public class atcoder_AGC028_A { static Scanner scanner = new Scanner ( System.in ) ; public static void main ( String [ ] $ ) { int n = scanner.nextInt ( ) , m = scanner.nextInt ( ) , gcd = BigInteger.valueOf ( n ).gcd ( BigInteger.valueOf ( m ) ).intValue ( ) ; String s = scanner.next ( ) , t = scanner.next ( ) ; System.out.println ( IntStream.range ( 0 , gcd ).filter ( k -> s.charAt ( k * n / gcd ) != t.charAt ( k * m / gcd ) ).mapToLong ( k -> - 1 ).findAny ( ).orElse ( BigInteger.valueOf ( n ).multiply ( BigInteger.valueOf ( m ) ).divide ( BigInteger.valueOf ( gcd ) ).longValue ( ) ) ) ; } }\n"
    },
    {
        "filename": "codeforces_30_A",
        "Python": "def task4 ( A , B , n ) :\n    for X in range ( - 1000 , 1001 ) :\n        if A * ( X ** n ) == B :\n            return X\n    return \"No solution\"\n[ A , B , n ] = input ( ).split ( )\nprint ( task4 ( int ( A ) , int ( B ) , int ( n ) ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_30_A { public static void main ( String [ ] args ) { new codeforces_30_A ( ).solve ( new Scanner ( System.in ) ) ; } private void solve ( Scanner sc ) { int A = sc.nextInt ( ) , B = sc.nextInt ( ) , n = sc.nextInt ( ) ; if ( A == 0 ) { if ( B == 0 ) System.out.println ( 1 ) ; else System.out.println ( \"No solution\" ) ; return ; } if ( B % A != 0 ) { System.out.println ( \"No solution\" ) ; return ; } B /= A ; boolean neg = B < 0 ; if ( neg && n % 2 == 0 ) { System.out.println ( \"No solution\" ) ; return ; } if ( neg ) B = - B ; for ( int x = 0 ; x <= B ; x ++ ) { if ( Math.pow ( x , n ) == B ) { System.out.println ( neg ? - x : x ) ; return ; } } System.out.println ( \"No solution\" ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC136_B",
        "Python": "def main ( ) :\n    N = int ( input ( ) )\n    i = 1\n    ans = 0\n    while 10 ** i <= N :\n        ans += ( ( 10 ** i ) - ( 10 ** ( i - 1 ) ) )\n        i += 2\n    ans += max ( 0 , N - 10 ** ( i - 1 ) + 1 )\n    print ( ans )\nif __name__ == \"__main__\" :\n    main ( )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC136_B { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int count = 0 ; int temp = N ; int ans = 0 ; while ( temp > 0 ) { temp /= 10 ; count ++ ; } for ( int i = 1 ; i <= count ; i ++ ) { if ( i == count ) { if ( i % 2 == 1 ) { ans += ( N - Math.pow ( 10 , i - 1 ) + 1 ) ; } } else { if ( i == 1 ) { ans += 9 ; } else if ( i % 2 == 1 ) { ans += ( Math.pow ( 10 , i ) - Math.pow ( 10 , i - 1 ) ) ; } } } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "codeforces_624_B",
        "Python": "import sys\ninput = sys.stdin.readline\nn = int ( input ( ) )\na = list ( map ( int , input ( ).split ( ) ) )\npre = float ( 'inf' )\nans = 0\na.sort ( reverse = True )\nfor j in range ( n ) :\n    ans += max ( 0 , min ( pre - 1 , a [ j ] ) )\n    pre = max ( 0 , min ( pre - 1 , a [ j ] ) )\nprint ( ans )\n\n",
        "Java": "import java.util.Arrays ; import java.util.Scanner ; public class codeforces_624_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; Long [ ] ans = new Long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { ans [ i ] = in.nextLong ( ) ; } Arrays.sort ( ans ) ; Long count = ans [ n - 1 ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) { if ( ans [ i ] < ans [ i + 1 ] ) { count += ans [ i ] ; } else { while ( ans [ i ] >= ans [ i + 1 ] ) { ans [ i ] -- ; } if ( ans [ i ] > 0 ) { count += ans [ i ] ; } } } System.out.println ( count ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC012_A",
        "Python": "from statistics import median\nfrom fractions import gcd\nfrom itertools import combinations\nfrom collections import deque\nfrom collections import defaultdict\nimport bisect\nimport sys\nsys.setrecursionlimit ( 10000000 )\nmod = 10 ** 9 + 7\ndef readInts ( ) :\n    return list ( map ( int , input ( ).split ( ) ) )\ndef main ( ) :\n    n = int ( input ( ) )\n    A = readInts ( )\n    A = sorted ( A )\n    ans = 0\n    for i in range ( len ( A ) - 2 , len ( A ) - 2 * n - 1 , - 2 ) :\n        ans += A [ i ]\n    print ( ans )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.util.* ; import static java.lang.Math.* ; public class atcoder_AGC012_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] array = new int [ 3 * n ] ; for ( int i = 0 ; i < array.length ; i ++ ) array [ i ] = sc.nextInt ( ) ; Arrays.sort ( array ) ; int head = array.length - 2 ; long res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { res += array [ head ] ; head -= 2 ; } System.out.println ( res ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC004_B",
        "Python": "def main ( ) :\n    n , x = map ( int , input ( ).split ( ) )\n    a = list ( map ( int , input ( ).split ( ) ) )\n    b = [ [ None for _ in [ 0 ] * n ] for _ in [ 0 ] * n ]\n    for i in range ( n ) :\n        m = a [ i ]\n        for j in range ( n ) :\n            k = i - j\n            if k < 0 :\n                k += n\n            m = min ( m , a [ k ] )\n            b [ j ] [ i ] = m\n    m = 10 ** 15\n    for i , j in enumerate ( b ) :\n        m = min ( m , sum ( j ) + x * i )\n    print ( m )\nmain ( )\n\n",
        "Java": "import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class atcoder_AGC004_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int N = scan.nextInt ( ) ; long x = scan.nextLong ( ) ; List < Long > srimeList = new ArrayList < > ( N ) ; for ( long i = 0 ; i < N ; i ++ ) { srimeList.add ( scan.nextLong ( ) ) ; } List < Long [ ] > costList = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { costList.add ( new Long [ N ] ) ; } for ( int i = 0 ; i < N ; i ++ ) { costList.get ( i ) [ 0 ] = srimeList.get ( i ) ; for ( int castNum = 1 ; castNum < N ; castNum ++ ) { costList.get ( i ) [ castNum ] = Math.min ( costList.get ( i ) [ castNum - 1 ] , srimeList.get ( ( i - castNum + N ) % N ) ) ; } } List < Long > result = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { final int j = i ; result.add ( i * x + costList.stream ( ).mapToLong ( costArray -> costArray [ j ] ).sum ( ) ) ; } System.out.println ( result.stream ( ).mapToLong ( i -> i ).min ( ).getAsLong ( ) ) ; } }\n"
    },
    {
        "filename": "codeforces_267_A",
        "Python": "def substract ( a , b ) :\n    if a > b :\n        total = 0\n        while a > 0 and b > 0 :\n            total += int ( a / b )\n            a = a % b\n            if a > 0 :\n                total += int ( b / a )\n                b = b % a\n        return total\n    if a < b :\n        total = 0\n        while a > 0 and b > 0 :\n            total += int ( b / a )\n            b = b % a\n            if b > 0 :\n                total += int ( a / b )\n                a = a % b\n        return total\n    if a == b :\n        return 1\nn = int ( input ( ) )\nlst = [ ]\nfor i in range ( 0 , n ) :\n    a , b = map ( int , input ( ).split ( ) )\n    lst.append ( substract ( a , b ) )\nfor i in lst :\n    print ( i )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_267_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int a = scan.nextInt ( ) ; int b = scan.nextInt ( ) ; System.out.println ( sub ( a , b ) ) ; } } public static int sub ( int a , int b ) { int min = Math.min ( a , b ) ; int max = Math.max ( a , b ) ; int result = 0 ; while ( min > 0 ) { result += max / min ; max = max % min ; int curr_min = Math.min ( min , max ) ; int curr_max = Math.max ( min , max ) ; min = curr_min ; max = curr_max ; } return result ; } }\n"
    },
    {
        "filename": "codeforces_134_A",
        "Python": "import sys\ninput = sys.stdin.readline\nn = int ( input ( ) )\nw = list ( map ( int , input ( ).split ( ) ) )\nx = sum ( w )\nd = [ ]\nfor i in range ( n ) :\n    if ( x - w [ i ] ) / ( n - 1 ) == w [ i ] :\n        d.append ( i + 1 )\nprint ( len ( d ) )\nprint ( ' '.join ( map ( str , d ) ) )\n\n",
        "Java": "import java.util.* ; public class codeforces_134_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; sum += arr [ i ] ; } int c = 0 ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( ( sum - arr [ i ] ) % ( n - 1 ) == 0 && ( sum - arr [ i ] ) / ( n - 1 ) == arr [ i ] ) { c ++ ; sb.append ( ( i + 1 ) + \" \" ) ; } } System.out.println ( c ) ; System.out.println ( sb.toString ( ) ) ; } }\n"
    },
    {
        "filename": "codeforces_108_B",
        "Python": "def s ( ) :\n    input ( )\n    a = list ( map ( int , input ( ).split ( ) ) )\n    a.sort ( )\n    for i in range ( 1 , len ( a ) ) :\n        if a [ i ] != a [ i - 1 ] and a [ i ] < a [ i - 1 ] * 2 :\n            return 'YES'\n    return 'NO'\nprint ( s ( ) )\n\n",
        "Java": "import java.util.Arrays ; import java.util.Scanner ; public class codeforces_108_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; } Arrays.sort ( a ) ; for ( int i = 0 ; i < a.length - 1 ; i ++ ) { if ( a [ i + 1 ] < a [ i ] * 2 && a [ i ] != a [ i + 1 ] ) { System.out.println ( \"YES\" ) ; return ; } } System.out.println ( \"NO\" ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC125_C",
        "Python": "def gcd ( a : int , b : int ) -> int :\n    if b == 0 :\n        return a\n    return gcd ( b , a % b )\ndef ruiseki_lr ( array ) :\n    op = lambda a , b : gcd ( a , b )\n    e = 0\n    n = len ( array )\n    left = [ e ] * ( n + 1 )\n    right = [ e ] * ( n + 1 )\n    for i in range ( n ) :\n        left [ i + 1 ] = op ( left [ i ] , array [ i ] )\n    for i in reversed ( range ( n ) ) :\n        right [ i ] = op ( right [ i + 1 ] , array [ i ] )\n    return left , right\nn = int ( input ( ) )\na = list ( map ( int , input ( ).split ( ) ) )\nleft , right = ruiseki_lr ( a )\nans = 0\nfor i in range ( n ) :\n    ans = max ( gcd ( left [ i ] , right [ i + 1 ] ) , ans )\nprint ( ans )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC125_C { public static int [ ] A ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } sc.close ( ) ; int [ ] M = new int [ N ] ; int [ ] L = new int [ N ] ; int [ ] R = new int [ N ] ; L [ 0 ] = A [ 0 ] ; for ( int i = 1 ; i < N ; i ++ ) { L [ i ] = gcd ( L [ i - 1 ] , A [ i ] ) ; } R [ N - 1 ] = A [ N - 1 ] ; for ( int i = N - 2 ; i >= 0 ; i -- ) { R [ i ] = gcd ( R [ i + 1 ] , A [ i ] ) ; } int answer = Math.max ( L [ N - 2 ] , R [ 1 ] ) ; for ( int i = 1 ; i < N - 1 ; i ++ ) { ; answer = Math.max ( answer , gcd ( L [ i - 1 ] , R [ i + 1 ] ) ) ; } System.out.println ( answer ) ; } public static int gcd ( int a , int b ) { int tmp ; if ( b > a ) { tmp = a ; a = b ; b = tmp ; } if ( b == 0 ) { return a ; } int r = - 1 ; do { r = a % b ; a = b ; b = r ; } while ( r != 0 ) ; return a ; } }\n"
    },
    {
        "filename": "codeforces_608_A",
        "Python": "import sys\ninput = sys.stdin.readline\nn , s = map ( int , input ( ).split ( ) )\nc = 0\nfor _ in range ( n ) :\n    f , t = map ( int , input ( ).split ( ) )\n    x = t - ( s - f )\n    if x > c :\n        c = x\nprint ( s + c )\n\n",
        "Java": "import java.util.Scanner ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.nio.charset.MalformedInputException ; import java.util.StringTokenizer ; import java.util.Arrays ; import java.util.HashSet ; public class codeforces_608_A { public static void main ( String [ ] args ) { FastScanner in = new FastScanner ( ) ; Scanner sc = new Scanner ( System.in ) ; PrintWriter o = new PrintWriter ( System.out ) ; int n = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int max = 0 ; while ( n -- > 0 ) { int f = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; if ( max < f + t ) { max = f + t ; } } o.println ( Math.max ( max , s ) ) ; o.close ( ) ; } static class FastScanner { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; StringTokenizer st = new StringTokenizer ( \"\" ) ; public String next ( ) { while ( ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } public String nextLine ( ) { String str = \"\" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } byte nextByte ( ) { return Byte.parseByte ( next ( ) ) ; } short nextShort ( ) { return Short.parseShort ( next ( ) ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return java.lang.Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } } }\n"
    },
    {
        "filename": "codeforces_678_B",
        "Python": "def leapyear ( n ) :\n    if ( n % 400 == 0 or ( n % 4 == 0 and n % 100 != 0 ) ) :\n        return \"y\"\n    else :\n        return \"n\"\nn = int ( input ( ) )\nd = \"f\"\nif ( n % 400 == 0 or ( n % 4 == 0 and n % 100 != 0 ) ) :\n    ans = \"ly\"\nelse :\n    ans = \"nly\"\nwhile ( True ) :\n    if ( n % 400 == 0 or ( n % 4 == 0 and n % 100 != 0 ) ) :\n        if ( d == \"m\" ) :\n            d = \"w\"\n            n += 1\n        elif ( d == \"t\" ) :\n            d = \"th\"\n            n += 1\n        elif ( d == \"w\" ) :\n            d = \"f\"\n            n += 1\n        elif ( d == \"th\" ) :\n            d = \"sa\"\n            n += 1\n        elif ( d == \"f\" ) :\n            d = \"s\"\n            n += 1\n        elif ( d == \"sa\" ) :\n            d = \"m\"\n            n += 1\n        elif ( d == \"s\" ) :\n            d = \"t\"\n            n += 1\n    else :\n        if ( d == \"m\" ) :\n            d = \"t\"\n            n += 1\n        elif ( d == \"t\" ) :\n            d = \"w\"\n            n += 1\n        elif ( d == \"w\" ) :\n            d = \"th\"\n            n += 1\n        elif ( d == \"th\" ) :\n            d = \"f\"\n            n += 1\n        elif ( d == \"f\" ) :\n            d = \"sa\"\n            n += 1\n        elif ( d == \"sa\" ) :\n            d = \"s\"\n            n += 1\n        elif ( d == \"s\" ) :\n            d = \"m\"\n            n += 1\n    if ( d == \"f\" and ans == \"ly\" and leapyear ( n ) == \"y\" ) :\n        break\n    elif ( d == \"f\" and ans == \"nly\" and leapyear ( n ) == \"n\" ) :\n        break\nprint ( n )\n\n",
        "Java": "import java.sql.Timestamp ; import java.util.* ; public class codeforces_678_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int y = in.nextInt ( ) ; boolean leap = check_leap ( y ) ; int sum = 0 ; int mod = 0 ; for ( int i = y + 1 ; ; i ++ ) { if ( check_leap ( i ) ) { sum += 366 ; } else { sum += 365 ; } if ( sum % 7 == 0 ) { if ( ( check_leap ( i ) && leap ) || ( ! check_leap ( i ) && ! leap ) ) { System.out.println ( i ) ; return ; } else { continue ; } } } } static boolean check_leap ( int y ) { return y % 400 == 0 || ( y % 4 == 0 && y % 100 != 0 ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC033_B",
        "Python": "H , W , N = map ( int , input ( ).split ( ) )\ns_r , s_c = map ( int , input ( ).split ( ) )\nS = input ( )\nT = input ( )\nJudge = False\nS_L , S_R , S_U , S_D = 0 , 0 , 0 , 0\nT_L , T_R , T_U , T_D = 0 , 0 , 0 , 0\nfor x in range ( N ) :\n    if S [ x ] == 'L' :\n        S_L += 1\n        if S_L - T_R - s_c == 0 :\n            Judge = True\n    elif S [ x ] == 'R' :\n        S_R += 1\n        if s_c + ( S_R - T_L ) == W + 1 :\n            Judge = True\n    elif S [ x ] == 'U' :\n        S_U += 1\n        if S_U - T_D - s_r == 0 :\n            Judge = True\n    elif S [ x ] == 'D' :\n        S_D += 1\n        if s_r + ( S_D - T_U ) == H + 1 :\n            Judge = True\n    if T [ x ] == 'L' :\n        if S_R - T_L + s_c != 1 :\n            T_L += 1\n    if T [ x ] == 'R' :\n        if s_c + ( T_R - S_L ) != W :\n            T_R += 1\n    if T [ x ] == 'U' :\n        if S_D - T_U + s_r != 1 :\n            T_U += 1\n    if T [ x ] == 'D' :\n        if s_r + ( T_D - S_U ) != H :\n            T_D += 1\nif Judge :\n    print ( 'NO' )\nelse :\n    print ( 'YES' )\n\n",
        "Java": "import java.util.* ; import java.lang.* ; public class atcoder_AGC033_B { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int h = scanner.nextInt ( ) ; int w = scanner.nextInt ( ) ; int n = scanner.nextInt ( ) ; int sr = scanner.nextInt ( ) ; int sc = scanner.nextInt ( ) ; String s = scanner.next ( ) ; String t = scanner.next ( ) ; boolean end = false ; int usafe = 1 ; int dsafe = h ; for ( int i = n - 1 ; i >= 0 ; i -- ) { if ( s.charAt ( i ) == 'U' ) { usafe ++ ; } else if ( s.charAt ( i ) == 'D' ) { dsafe -- ; } if ( usafe > dsafe ) { end = true ; break ; } if ( i > 0 ) { if ( t.charAt ( i - 1 ) == 'U' ) { dsafe = Math.min ( dsafe + 1 , h ) ; } else if ( t.charAt ( i - 1 ) == 'D' ) { usafe = Math.max ( usafe - 1 , 1 ) ; } } } int lsafe = 1 ; int rsafe = w ; for ( int i = n - 1 ; i >= 0 ; i -- ) { if ( s.charAt ( i ) == 'L' ) { lsafe ++ ; } else if ( s.charAt ( i ) == 'R' ) { rsafe -- ; } if ( lsafe > rsafe ) { end = true ; break ; } if ( i > 0 ) { if ( t.charAt ( i - 1 ) == 'L' ) { rsafe = Math.min ( rsafe + 1 , w ) ; } else if ( t.charAt ( i - 1 ) == 'R' ) { lsafe = Math.max ( lsafe - 1 , 1 ) ; } } } if ( sr >= usafe && sr <= dsafe && sc >= lsafe && sc <= rsafe && ! end ) { System.out.println ( \"YES\" ) ; } else { System.out.println ( \"NO\" ) ; } } }\n"
    },
    {
        "filename": "codeforces_190_A",
        "Python": "n , m = map ( int , input ( ).split ( ) )\nif n < 1 :\n    if m < 1 :\n        print ( n , m )\n        quit ( )\n    print ( \"Impossible\" )\n    quit ( )\nif m > n :\n    min = m\n    max = n + m - 1\n    print ( min , max )\nif m <= n :\n    min = n\n    max = n + m - 1\n    if m == 0 :\n        max = n\n    print ( min , max )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_190_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; if ( n == 0 ) { if ( m != 0 ) System.out.println ( \"Impossible\" ) ; else System.out.println ( 0 + \" \" + 0 ) ; return ; } if ( m <= n ) { if ( m == 0 ) { m = 1 ; } System.out.print ( n + \" \" + ( m + n - 1 ) ) ; return ; } System.out.print ( m + \" \" + ( m + n - 1 ) ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC122_D",
        "Python": "def ok ( last4 ) :\n    for i in range ( 4 ) :\n        t = list ( last4 )\n        if i >= 1 :\n            t [ i ] , t [ i - 1 ] = t [ i - 1 ] , t [ i ]\n        if ''.join ( t ).count ( 'AGC' ) >= 1 :\n            return False\n    return True\ndef dfs ( cur , last3 ) :\n    if last3 in memo [ cur ] :\n        return memo [ cur ] [ last3 ]\n    if cur == n :\n        return 1\n    ret = 0\n    for c in \"ACGT\" :\n        if ok ( last3 + c ) :\n            ret = ( ret + dfs ( cur + 1 , last3 [ 1 : ] + c ) ) % mod\n    memo [ cur ] [ last3 ] = ret\n    return ret\nn = int ( input ( ) )\nmod = 10 ** 9 + 7\nmemo = [ { } for i in range ( n + 1 ) ]\nprint ( dfs ( 0 , 'TTT' ) )\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class atcoder_ABC122_D { int N ; long MOD = 1000000007L ; String [ ] TOKENS = { \"A\" , \"C\" , \"G\" , \"T\" } ; Map < String , Long > [ ] memo ; atcoder_ABC122_D ( ) { Scanner in = new Scanner ( System.in ) ; N = in.nextInt ( ) ; in.close ( ) ; this.memo = new Map [ N + 1 ] ; for ( int i = 0 ; i < this.memo.length ; ++ i ) { this.memo [ i ] = new HashMap < String , Long > ( ) ; } } long calc ( ) { return dfs ( 0 , \"TTT\" ) ; } boolean isOK ( String last4 ) { if ( last4.contains ( \"AGC\" ) ) { return false ; } for ( int i = 0 ; i < 3 ; ++ i ) { char [ ] vals = last4.toCharArray ( ) ; vals [ i ] = last4.charAt ( i + 1 ) ; vals [ i + 1 ] = last4.charAt ( i ) ; String s = new String ( vals ) ; if ( s.contains ( \"AGC\" ) ) { return false ; } } return true ; } long dfs ( int current , String last3 ) { if ( this.memo [ current ].containsKey ( last3 ) ) { return ( Long ) ( this.memo [ current ].get ( last3 ) ) ; } if ( current == N ) { return 1 ; } long result = 0 ; for ( String c : TOKENS ) { if ( isOK ( last3 + c ) ) { result = ( result + dfs ( current + 1 , last3.substring ( 1 , last3.length ( ) ) + c ) ) % MOD ; } } memo [ current ].put ( last3 , result ) ; return result ; } public static void main ( String [ ] args ) { atcoder_ABC122_D ins = new atcoder_ABC122_D ( ) ; System.out.println ( ins.calc ( ) ) ; } }\n"
    },
    {
        "filename": "codeforces_459_A",
        "Python": "import math\ngiven = input ( \"\" )\nl1 = given.split ( )\nl1 = [ int ( x ) for x in l1 ]\nx1 = l1 [ 0 ]\ny1 = l1 [ 1 ]\nx2 = l1 [ 2 ]\ny2 = l1 [ 3 ]\ndenominator = x2 - x1\nnumerator = y2 - y1\nif denominator != 0 :\n    quotient = numerator / denominator\nif numerator == 0 :\n    d = int ( math.sqrt ( ( x2 - x1 ) ** 2 + ( y2 - y1 ) ** 2 ) )\n    x4 = x1\n    x3 = x2\n    y3 = y2 + d\n    y4 = y1 + d\n    print ( f\"{x3} {y3} {x4} {y4}\" )\nelif denominator == 0 :\n    y4 = y2\n    y3 = y1\n    d = int ( math.sqrt ( ( x2 - x1 ) ** 2 + ( y2 - y1 ) ** 2 ) )\n    x4 = x1 + d\n    x3 = x2 + d\n    print ( f\"{x3} {y3} {x4} {y4}\" )\nelif quotient == 1 :\n    x4 = x2\n    x3 = x1\n    y4 = y1\n    y3 = y2\n    print ( f\"{x3} {y3} {x4} {y4}\" )\nelif quotient == - 1 :\n    x4 = x1\n    x3 = x2\n    y4 = y2\n    y3 = y1\n    print ( f\"{x3} {y3} {x4} {y4}\" )\nelse :\n    print ( '-1' )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_459_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int x1 = in.nextInt ( ) , y1 = in.nextInt ( ) , x2 = in.nextInt ( ) , y2 = in.nextInt ( ) ; if ( x1 == x2 ) { int dif = Math.abs ( y1 - y2 ) ; pw.println ( ( x1 + dif ) + \" \" + y1 + \" \" + ( x1 + dif ) + \" \" + y2 ) ; } else if ( y1 == y2 ) { int dif = Math.abs ( x1 - x2 ) ; pw.println ( ( x1 ) + \" \" + ( y1 + dif ) + \" \" + ( x2 ) + \" \" + ( y2 + dif ) ) ; } else if ( Math.abs ( x1 - x2 ) == Math.abs ( y1 - y2 ) ) { pw.println ( x1 + \" \" + y2 + \" \" + x2 + \" \" + y1 ) ; } else { pw.println ( - 1 ) ; } pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }\n"
    },
    {
        "filename": "codeforces_350_B",
        "Python": "n = int ( input ( ) )\nt = [ 0 ] + list ( map ( int , input ( ).split ( ) ) )\na = [ 0 ] + list ( map ( int , input ( ).split ( ) ) )\nans , cnt = [ ] , [ 0 for i in range ( n + 1 ) ]\nfor i in a :\n    cnt [ i ] += 1\nfor i in range ( 1 , n + 1 ) :\n    if t [ i ] == 1 :\n        crt = [ i ]\n        x = a [ i ]\n        while cnt [ x ] == 1 :\n            crt.append ( x )\n            x = a [ x ]\n        if len ( crt ) > len ( ans ) :\n            ans = crt [ : ]\nans.reverse ( )\nprint ( len ( ans ) )\nprint ( ' '.join ( map ( str , ans ) ) )\n\n",
        "Java": "import java.util.* ; import java.io.* ; import java.util.* ; import java.io.* ; public class codeforces_350_B { static Scanner scanner = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = scanner.nextInt ( ) ; int a [ ] = new int [ n + 1 ] ; int b [ ] = new int [ n + 1 ] ; int num [ ] = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) a [ i ] = scanner.nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) b [ i ] = scanner.nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) num [ b [ i ] ] ++ ; String ss = \"\" ; int ans = 0 ; boolean st [ ] = new boolean [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) { st [ i ] = true ; StringBuilder sb = new StringBuilder ( ) ; int x = b [ i ] ; StringBuilder sss = new StringBuilder ( ) ; sss.append ( i ) ; sb.append ( \" \" + sss.reverse ( ) ) ; int s = 1 ; while ( ! st [ x ] && num [ x ] == 1 && x != 0 && a [ x ] != 1 ) { sss = new StringBuilder ( ) ; sss.append ( x ) ; sb.append ( \" \" + sss.reverse ( ) ) ; st [ x ] = true ; x = b [ x ] ; s ++ ; } if ( s > ans ) { ans = s ; ss = sb.reverse ( ).toString ( ) ; } } } System.out.println ( ans ) ; System.out.println ( ss ) ; } }\n"
    },
    {
        "filename": "codeforces_596_B",
        "Python": "n = int ( input ( ) )\nr = [ * map ( int , input ( ).split ( ) ) ]\nans = abs ( r [ 0 ] )\nfor i in range ( 1 , n ) :\n    ans += abs ( r [ i ] - r [ i - 1 ] )\nprint ( ans )\n\n",
        "Java": "import java.util.* ; public class codeforces_596_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; long [ ] arr = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = scan.nextInt ( ) ; } long answer = Math.abs ( arr [ 0 ] ) ; for ( int i = 1 ; i < n ; i ++ ) { answer += Math.abs ( arr [ i ] - arr [ i - 1 ] ) ; } System.out.println ( answer ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC167_C",
        "Python": "import numpy as np\nimport itertools\nn , m , x = list ( map ( int , input ( ).split ( ) ) )\nc = np.array ( [ list ( map ( int , input ( ).split ( ) ) ) for _ in range ( n ) ] )\npre = np.arange ( n )\nl = [ ]\nrem = [ ]\nans = 0\nfor i in pre + 1 :\n    for j in itertools.combinations ( pre , i ) :\n        l.append ( list ( j ) )\nfor i in range ( 1 , m + 1 ) :\n    for j , k in enumerate ( l ) :\n        ca = 0\n        for ii in k :\n            ca += c [ ii , i ]\n        if ca < x :\n            rem.insert ( 0 , j )\n        else :\n            pass\n    if len ( rem ) > 0 :\n        for j in rem :\n            l.pop ( j )\n        rem = [ ]\n    if len ( l ) == 0 :\n        print ( - 1 )\n        break\nelse :\n    for i in l :\n        ca = 0\n        for j in i :\n            ca += c [ j , 0 ]\n        if ans == 0 :\n            ans = ca\n        else :\n            ans = min ( ans , ca )\n    print ( ans )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC167_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) , m = sc.nextInt ( ) , x = sc.nextInt ( ) , min = Integer.MAX_VALUE ; int [ ] [ ] a = new int [ n ] [ m + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j <= m ; j ++ ) a [ i ] [ j ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < Math.pow ( 2 , n ) ; i ++ ) { int [ ] status = new int [ n ] ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( 1 & i >> j ) == 1 ) { status [ j ] = 1 ; } } int [ ] res = new int [ m + 1 ] ; for ( int j = 0 ; j < n ; j ++ ) { if ( status [ j ] == 1 ) { for ( int k = 0 ; k <= m ; k ++ ) { res [ k ] += a [ j ] [ k ] ; } } } boolean flag = true ; for ( int j = 1 ; j <= m ; j ++ ) { if ( res [ j ] < x ) { flag = false ; break ; } } if ( flag ) min = Math.min ( min , res [ 0 ] ) ; } if ( min == Integer.MAX_VALUE ) System.out.println ( - 1 ) ; else System.out.println ( min ) ; } }\n"
    },
    {
        "filename": "codeforces_356_A",
        "Python": "n , m = map ( int , input ( ).strip ( ).split ( ) )\nout = [ 0 for _ in range ( n ) ]\ncomp = [ i + 2 for i in range ( n ) ]\nfor _ in range ( m ) :\n    l , r , x = map ( int , input ( ).strip ( ).split ( ) )\n    t = l\n    while t <= r :\n        next_val = comp [ t - 1 ]\n        if out [ t - 1 ] == 0 and t != x :\n            out [ t - 1 ] = x\n        comp [ t - 1 ] = r + 1 if t >= x else x\n        t = next_val\nprint ( * out )\n\n",
        "Java": "import java.util.* ; import java.io.* ; public class codeforces_356_A { public static void main ( String [ ] args ) throws Exception { FastReader in = new FastReader ( ) ; int n = in.nextInt ( ) ; TreeSet < Integer > left = new TreeSet < > ( ) ; int [ ] answer = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { left.add ( i ) ; } int q = in.nextInt ( ) ; while ( q -- > 0 ) { int l = in.nextInt ( ) - 1 ; int r = in.nextInt ( ) - 1 ; int win = in.nextInt ( ) ; while ( left.ceiling ( l ) != null && left.ceiling ( l ) <= r ) { int curr = left.ceiling ( l ) ; answer [ curr ] = win ; left.remove ( curr ) ; } answer [ win - 1 ] = 0 ; left.add ( win - 1 ) ; } StringBuilder ans = new StringBuilder ( ) ; for ( int i = 0 ; i < n ; i ++ ) { ans.append ( answer [ i ] + \"\" ) ; } System.out.println ( ans ) ; } static class FastReader { StringTokenizer st ; BufferedReader br ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null || ! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String s = \"\" ; while ( st == null || st.hasMoreElements ( ) ) { try { s = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return s ; } } }\n"
    },
    {
        "filename": "atcoder_ABC143_A",
        "Python": "A , B = map ( int , input ( ).split ( ) )\nans = A - 2 * B\nif ans < 0 :\n    ans = 0\nprint ( ans )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.util.Scanner ; public class atcoder_ABC143_A { public static void main ( String [ ] args ) { try { BufferedReader bf = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String [ ] x = bf.readLine ( ).trim ( ).split ( \" \" ) ; int a = Integer.parseInt ( x [ 0 ] ) ; int b = Integer.parseInt ( x [ 1 ] ) ; int c = a - b * 2 ; if ( c < 0 ) c = 0 ; System.out.println ( c ) ; } catch ( Exception e ) { } } }\n"
    },
    {
        "filename": "codeforces_629_B",
        "Python": "import sys\ninput = sys.stdin.readline\nN = 368\nm = [ 0 ] * N\nf = [ 0 ] * N\nfor i in range ( int ( input ( ) ) ) :\n    x , a , b = input ( ) [ : - 1 ].split ( )\n    a = int ( a )\n    b = int ( b ) + 1\n    if x == 'M' :\n        m [ a ] += 2\n        m [ b ] -= 2\n    else :\n        f [ a ] += 2\n        f [ b ] -= 2\na , b , c = 0 , 0 , 0\nfor i in range ( N ) :\n    a += m [ i ]\n    b += f [ i ]\n    if min ( a , b ) > c :\n        c = min ( a , b )\nprint ( c )\n\n",
        "Java": "import java.util.* ; public class codeforces_629_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] FfriendPerDay = new int [ 367 ] ; int [ ] MfriendPerDay = new int [ 367 ] ; int answer = 0 ; for ( int i = 0 ; i < n ; i ++ ) { char c = sc.next ( ).charAt ( 0 ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; for ( int j = a ; j <= b ; j ++ ) { if ( c == 'M' ) MfriendPerDay [ j ] ++ ; else FfriendPerDay [ j ] ++ ; if ( MfriendPerDay [ j ] < FfriendPerDay [ j ] ) { if ( MfriendPerDay [ j ] > answer ) answer = MfriendPerDay [ j ] ; } else { if ( FfriendPerDay [ j ] > answer ) answer = FfriendPerDay [ j ] ; } } } System.out.println ( answer * 2 ) ; } }\n"
    },
    {
        "filename": "codeforces_58_B",
        "Python": "n = int ( input ( ) )\nfor i in range ( n , 0 , - 1 ) :\n    if n % i == 0 : n = i ; print ( i , end = ' ' )\n\n",
        "Java": "import java.util.* ; import java.lang.* ; import java.io.* ; public class codeforces_58_B { public static void main ( String [ ] args ) throws java.lang.Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; System.out.println ( n + \" \" ) ; int m = n ; for ( int i = n - 1 ; i > 0 ; i -- ) { if ( m % i == 0 ) { System.out.println ( i + \" \" ) ; m = i ; } } } }\n"
    },
    {
        "filename": "atcoder_AGC034_B",
        "Python": "import sys , math , collections , heapq , itertools\ndef gcd ( a , b ) :\n    a , b = max ( a , b ) , min ( a , b )\n    while a % b > 0 : a , b = b , a % b\n    return b\ndef solve ( ) :\n    s = input ( )\n    t = \"\"\n    i = 0\n    while i < len ( s ) :\n        if s [ i ] == \"A\" :\n            t += \"A\"\n            i += 1\n        elif s [ i ] == \"B\" :\n            if i < len ( s ) - 1 :\n                if s [ i + 1 ] == \"C\" :\n                    t += \"D\"\n                    i += 2\n                else :\n                    t += \"X\"\n                    i += 1\n            else :\n                t += \"X\"\n                i += 1\n        else :\n            t += \"X\"\n            i += 1\n    total = 0\n    numA = 0\n    for i in range ( len ( t ) ) :\n        if t [ i ] == \"X\" :\n            numA = 0\n        else :\n            if t [ i ] == \"A\" : numA += 1\n            else : total += numA\n    print ( total )\n    INF = 10 ** 25\n    mod = 7 + 10 ** 9\n    return 0\nif __name__ == \"__main__\" :\n    solve ( )\n\n",
        "Java": "import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.Scanner ; public class atcoder_AGC034_B { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; BABC solver = new BABC ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class BABC { public void solve ( int testNumber , Scanner in , PrintWriter out ) { String s = in.next ( ).replaceAll ( \"BC\" , \"D\" ) ; long cnt = 0 ; long tmp = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == 'A' ) { tmp ++ ; } else if ( s.charAt ( i ) == 'D' ) { cnt += tmp ; } else { tmp = 0 ; } } out.println ( cnt ) ; } } }\n"
    },
    {
        "filename": "atcoder_AGC033_A",
        "Python": "import numpy as np\nh , w = map ( int , input ( ).split ( ) )\ngraph = [ [ 0 if i == '#' else float ( 'inf' ) for i in list ( input ( ) ) ] for _ in range ( h ) ]\ngraph = np.array ( graph )\nfor x in range ( w - 1 ) :\n    graph [ : , x + 1 ] = np.minimum ( graph [ : , x ] + 1 , graph [ : , x + 1 ] )\nfor x in range ( w - 1 , 0 , - 1 ) :\n    graph [ : , x - 1 ] = np.minimum ( graph [ : , x ] + 1 , graph [ : , x - 1 ] )\nfor y in range ( h - 1 ) :\n    graph [ y + 1 , : ] = np.minimum ( graph [ y , : ] + 1 , graph [ y + 1 , : ] )\nfor y in range ( h - 1 , 0 , - 1 ) :\n    graph [ y - 1 , : ] = np.minimum ( graph [ y , : ] + 1 , graph [ y - 1 , : ] )\nprint ( int ( np.max ( graph ) ) )\n\n",
        "Java": "import java.util.* ; public class atcoder_AGC033_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int H = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; char [ ] [ ] A = new char [ H ] [ W ] ; Queue < int [ ] > queue = new ArrayDeque < int [ ] > ( ) ; for ( int i = 0 ; i < H ; i ++ ) { String row = sc.next ( ) ; for ( int j = 0 ; j < W ; j ++ ) { A [ i ] [ j ] = row.charAt ( j ) ; if ( A [ i ] [ j ] == '#' ) { int [ ] start = { i , j , 0 } ; queue.add ( start ) ; } } } int [ ] [ ] flag = new int [ H ] [ W ] ; int ans = 0 ; int [ ] dx = { 1 , - 1 , 0 , 0 } ; int [ ] dy = { 0 , 0 , 1 , - 1 } ; loop : while ( ! queue.isEmpty ( ) ) { int [ ] temp = queue.remove ( ) ; int y = temp [ 0 ] ; int x = temp [ 1 ] ; int depth = temp [ 2 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { if ( 0 <= y + dy [ i ] && y + dy [ i ] <= H - 1 && 0 <= x + dx [ i ] && x + dx [ i ] <= W - 1 ) { if ( flag [ y + dy [ i ] ] [ x + dx [ i ] ] == 0 && A [ y + dy [ i ] ] [ x + dx [ i ] ] == '.' ) { flag [ y + dy [ i ] ] [ x + dx [ i ] ] = 1 ; int [ ] queue_add = { y + dy [ i ] , x + dx [ i ] , depth + 1 } ; queue.add ( queue_add ) ; ans = depth + 1 ; } } } } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC021_B",
        "Python": "from math import atan2 , pi\nN , * XY = map ( int , open ( 0 ).read ( ).split ( ) )\nXY = list ( zip ( * [ iter ( XY ) ] * 2 ) )\nfor i , ( x , y ) in enumerate ( XY ) :\n    D = sorted ( atan2 ( X - x , Y - y ) for j , ( X , Y ) in enumerate ( XY ) if j != i )\n    D.append ( D [ 0 ] + 2 * pi )\n    ans = 0\n    for a , b in zip ( D , D [ 1 : ] ) :\n        if b - a >= pi :\n            ans = ( b - a ) - pi\n    print ( ans / ( 2 * pi ) )\n\n",
        "Java": "import java.util.Scanner ; import java.util.Comparator ; import java.util.Arrays ; import java.util.List ; import java.util.ArrayList ; public class atcoder_AGC021_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int N = scan.nextInt ( ) ; int [ ] x = new int [ N ] ; int [ ] y = new int [ N ] ; for ( int i = 0 ; i < N ; ++ i ) { x [ i ] = scan.nextInt ( ) ; y [ i ] = scan.nextInt ( ) ; } for ( int i = 0 ; i < N ; ++ i ) { List < Double > thetas = new ArrayList < > ( ) ; for ( int j = 0 ; j < N ; ++ j ) { if ( i == j ) continue ; thetas.add ( Math.atan2 ( y [ j ] - y [ i ] , x [ j ] - x [ i ] ) ) ; } thetas.sort ( Comparator.naturalOrder ( ) ) ; thetas.add ( thetas.get ( 0 ) + 2 * Math.PI ) ; double ans = 0 ; for ( int k = 0 ; k < N - 1 ; ++ k ) ans = Math.max ( ans , thetas.get ( k + 1 ) - thetas.get ( k ) - Math.PI ) ; System.out.println ( ans / ( Math.PI * 2 ) ) ; } } }\n"
    },
    {
        "filename": "codeforces_146_A",
        "Python": "n = int ( input ( ) )\nnumber = list ( map ( int , list ( input ( ) ) ) )\nh1 = 0\nh2 = 0\nx = 0\nfor i in range ( n ) :\n    if number [ i ] != 4 and number [ i ] != 7 :\n        print ( \"NO\" )\n        x += 1\n        break\n    if i < n // 2 :\n        h1 += number [ i ]\n    else :\n        h2 += number [ i ]\nif not x :\n    if h1 == h2 :\n        print ( \"YES\" )\n    else :\n        print ( \"NO\" )\n\n",
        "Java": "import java.util.* ; import static java.lang.Math.* ; public class codeforces_146_A { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System.in ) ; int x = 0 , y = 0 ; int t = 0 ; int n = in.nextInt ( ) ; String str = in.next ( ) ; char l [ ] = new char [ str.length ( ) ] ; l = str.toCharArray ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( l [ i ] != '4' && l [ i ] != '7' ) { t = 1 ; } } if ( t == 1 ) { System.out.println ( \"NO\" ) ; } else { for ( int i = 0 ; i < n / 2 ; i ++ ) { x = x + Character.getNumericValue ( l [ i ] ) ; } for ( int i = n - 1 ; i > ( n / 2 ) - 1 ; i -- ) { y = y + Character.getNumericValue ( l [ i ] ) ; } if ( x == y ) { System.out.println ( \"YES\" ) ; } else { System.out.println ( \"NO\" ) ; } } } }\n"
    },
    {
        "filename": "codeforces_95_A",
        "Python": "pya = int ( input ( ) )\narre = [ ]\nwhile pya :\n    pya -= 1\n    arre.append ( input ( ).lower ( ) )\noString = input ( )\nlowString = oString.lower ( )\nletter1 = input ( ) [ 0 ].lower ( )\nletter2 = 'a' if letter1.lower ( ) != 'a' else 'b'\nvalid = [ 0 for i in range ( len ( oString ) ) ]\nsetcito = set ( )\nfor x in arre :\n    if lowString.find ( x ) >= 0 :\n        wat = 0\n        while True :\n            index = lowString.find ( x , wat )\n            if index < 0 :\n                break\n            for i in range ( index , index + len ( x ) ) :\n                setcito.add ( i )\n            wat = index + 1\noString = list ( oString )\nfor i in setcito :\n    letter = letter1 if lowString [ i ] != letter1 else letter2\n    oString [ i ] = letter if oString [ i ].islower ( ) else letter.upper ( )\nfor x in oString :\n    print ( x , end = \"\" )\nprint ( )\n\n",
        "Java": "import java.io.* ; import java.util.* ; public class codeforces_95_A extends PrintWriter { codeforces_95_A ( ) { super ( System.out , true ) ; } Scanner sc = new Scanner ( System.in ) ; public static void main ( String [ ] $ ) { codeforces_95_A o = new codeforces_95_A ( ) ; o.main ( ) ; o.flush ( ) ; } int compare ( char [ ] aa , int i , char [ ] bb , int j , int m ) { while ( m -- > 0 ) { char a = Character.toUpperCase ( aa [ i ] ) ; char b = Character.toUpperCase ( bb [ j ] ) ; if ( a != b ) return a - b ; i ++ ; j ++ ; } return 0 ; } void main ( ) { int n = sc.nextInt ( ) ; char [ ] [ ] ss = new char [ n ] [ ] ; for ( int i = 0 ; i < n ; i ++ ) ss [ i ] = sc.next ( ).toCharArray ( ) ; char [ ] cc = sc.next ( ).toCharArray ( ) ; int m = cc.length ; char c = sc.next ( ).charAt ( 0 ) ; char c_ = Character.toUpperCase ( c ) ; char a = c == 'a' ? 'b' : 'a' ; char a_ = Character.toUpperCase ( a ) ; boolean [ ] lucky = new boolean [ m ] ; for ( int j = 0 ; j < m ; j ++ ) for ( int i = 0 ; i < n ; i ++ ) { int l = ss [ i ].length ; if ( m - j >= l && compare ( cc , j , ss [ i ] , 0 , l ) == 0 ) for ( int h = 0 ; h < l ; h ++ ) lucky [ j + h ] = true ; } for ( int j = 0 ; j < m ; j ++ ) if ( lucky [ j ] ) { if ( Character.toLowerCase ( cc [ j ] ) == c ) cc [ j ] = Character.isUpperCase ( cc [ j ] ) ? a_ : a ; else cc [ j ] = Character.isUpperCase ( cc [ j ] ) ? c_ : c ; } println ( cc ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC169_D",
        "Python": "import math\nfrom functools import reduce\nfrom collections import deque , Counter\nimport sys\nsys.setrecursionlimit ( 10 ** 7 )\ndef input ( ) :\n    return sys.stdin.readline ( ).strip ( )\ndef get_nums_l ( ) :\n    return [ int ( s ) for s in input ( ).split ( \" \" ) ]\ndef get_nums_n ( n ) :\n    return [ int ( input ( ) ) for _ in range ( n ) ]\ndef get_all_int ( ) :\n    return map ( int , open ( 0 ).read ( ).split ( ) )\ndef rangeI ( it , l , r ) :\n    for i , e in enumerate ( it ) :\n        if l <= i < r :\n            yield e\n        elif l >= r :\n            break\ndef log ( * args ) :\n    print ( \"DEBUG:\" , * args , file = sys.stderr )\nINF = 999999999999999999999999\nMOD = 10 ** 9 + 7\nn = int ( input ( ) )\nif n == 1 :\n    print ( 0 )\n    exit ( )\ndef prime_factorize ( n ) :\n    a = [ ]\n    while n % 2 == 0 :\n        a.append ( 2 )\n        n //= 2\n    f = 3\n    while f * f <= n :\n        if n % f == 0 :\n            a.append ( f )\n            n //= f\n        else :\n            f += 2\n    if n != 1 :\n        a.append ( n )\n    return a\n    if len ( arr ) == 0 :\n        arr.append ( ( n , 1 ) )\n    return arr\nfac_ = prime_factorize ( n )\nfac = Counter ( fac_ )\nans = 0\nfor p , e in fac.items ( ) :\n    x = e\n    for i in range ( 1 , 99999999 ) :\n        if x >= i :\n            x -= i\n            ans += 1\n        else :\n            break\nprint ( ans )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC169_D { public static void main ( String [ ] args ) { try ( Scanner scanner = new Scanner ( System.in ) ) { long n = scanner.nextLong ( ) ; int sqrt = ( int ) Math.sqrt ( n ) ; int answer = 0 ; for ( int i = 2 ; i <= sqrt ; i ++ ) { int count = 0 ; while ( 0 == ( n % i ) ) { n /= i ; count ++ ; } for ( int j = 1 ; count - j >= 0 ; j ++ ) { count -= j ; answer ++ ; } } if ( n > 1 ) { answer ++ ; } System.out.println ( answer ) ; } } }\n"
    },
    {
        "filename": "codeforces_673_A",
        "Python": "n = int ( input ( ) )\narr = list ( map ( int , input ( ).split ( ) ) )\nif arr [ 0 ] > 15 : print ( 15 )\nelse :\n    for i in range ( 1 , len ( arr ) ) :\n        if arr [ i ] - arr [ i - 1 ] > 15 :\n            print ( arr [ i - 1 ] + 15 )\n            break\n    else :\n        if arr [ - 1 ] == 90 or arr [ - 1 ] + 15 >= 90 : print ( 90 )\n        else : print ( arr [ - 1 ] + 15 )\n\n",
        "Java": "import java.util.* ; public class codeforces_673_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; ArrayList < Integer > a = new ArrayList < Integer > ( ) ; int value ; for ( int i = 0 ; i < n ; i ++ ) { value = sc.nextInt ( ) ; a.add ( value ) ; } int result , pos = 0 , flag = 0 ; if ( a.get ( 0 ) > 15 ) result = 15 ; else { for ( int i = 1 ; i < n ; i ++ ) { if ( a.get ( i ) - a.get ( i - 1 ) > 15 ) { pos = i - 1 ; flag = 1 ; break ; } } if ( flag == 1 ) result = a.get ( pos ) + 15 ; else result = a.get ( n - 1 ) + 15 ; } if ( result > 90 ) result = 90 ; System.out.println ( result ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC028_B",
        "Python": "import sys\ninput = sys.stdin.readline\nimport numpy as np\nMOD = 10 ** 9 + 7\nN = int ( input ( ) )\nM = 10 ** 6\nA = np.array ( input ( ).split ( ) , dtype = np.int64 )\nNsq = 10 ** 3\nfact = np.arange ( M , dtype = np.int64 ).reshape ( Nsq , Nsq )\nfact [ 0 , 0 ] = 1\nfor n in range ( 1 , Nsq ) :\n    fact [ : , n ] *= fact [ : , n - 1 ] ; fact [ : , n ] %= MOD\nfor n in range ( 1 , Nsq ) :\n    fact [ n ] *= fact [ n - 1 , - 1 ] ; fact [ n ] %= MOD\nfact = fact.ravel ( )\nj = np.arange ( N )\ninv = np.array ( [ pow ( i + 1 , MOD - 2 , MOD ) for i in range ( N ) ] )\ninv = np.cumsum ( inv ) % MOD\ntemp = inv [ j ] + inv [ N - 1 - j ] - 1\nans = ( A * temp % MOD ).sum ( )\nans %= MOD\nans *= fact [ N ]\nans %= MOD\nprint ( ans )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.InputStreamReader ; public class atcoder_AGC028_B { public static void main ( String [ ] args ) throws Exception { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; int n = Integer.parseInt ( br.readLine ( ) ) ; String [ ] sa = br.readLine ( ).split ( \" \" ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = Integer.parseInt ( sa [ i ] ) ; } br.close ( ) ; int mod = 1000000007 ; long p = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { p = p * i % mod ; } long [ ] q = new long [ n ] ; q [ 0 ] = 1 ; for ( int i = 1 ; i < n ; i ++ ) { q [ i ] = ( q [ i - 1 ] + modinv ( i + 1 , mod ) ) % mod ; } long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { long val = q [ i ] + q [ n - i - 1 ] - 1 ; val *= a [ i ] ; val %= mod ; val *= p ; val %= mod ; ans += val ; ans %= mod ; } System.out.println ( ans ) ; } static long modinv ( long a , int m ) { long b = m ; long u = 1 ; long v = 0 ; long tmp = 0 ; while ( b > 0 ) { long t = a / b ; a -= t * b ; tmp = a ; a = b ; b = tmp ; u -= t * v ; tmp = u ; u = v ; v = tmp ; } u %= m ; if ( u < 0 ) u += m ; return u ; } }\n"
    },
    {
        "filename": "codeforces_299_A",
        "Python": "num_inp = lambda : int ( input ( ) )\narr_inp = lambda : list ( map ( int , input ( ).split ( ) ) )\nsp_inp = lambda : map ( int , input ( ).split ( ) )\na = sorted ( map ( int , [ * open ( 0 ) ] [ 1 ].split ( ) ) )\nprint ( [ a [ 0 ] , - 1 ] [ any ( x % a [ 0 ] for x in a ) ] )\n\n",
        "Java": "import java.util.Arrays ; import java.util.Scanner ; public class codeforces_299_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; } Arrays.sort ( a ) ; int min = a [ 0 ] ; for ( int value : a ) { if ( value % min != 0 ) { System.out.println ( - 1 ) ; return ; } } System.out.println ( min ) ; } }\n"
    },
    {
        "filename": "codeforces_31_A",
        "Python": "y = int ( input ( ) )\narr = [ int ( i ) for i in input ( ).split ( ) ]\nfor i in range ( len ( arr ) ) :\n    for j in range ( len ( arr ) ) :\n        if i == j :\n            continue\n        for k in range ( len ( arr ) ) :\n            if arr [ k ] != arr [ j ] and arr [ k ] != arr [ i ] and arr [ k ] == arr [ i ] + arr [ j ] :\n                print ( k + 1 , j + 1 , i + 1 )\n                exit ( )\nprint ( - 1 )\n\n",
        "Java": "import java.util.* ; import java.lang.* ; public class codeforces_31_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int f = 0 ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int k = 0 , j = 0 , i = 0 ; for ( k = 0 ; k < n ; k ++ ) { int t = a [ k ] ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n - 1 ; j ++ ) { if ( i != j && t == ( a [ i ] + a [ j ] ) ) { f = 1 ; break ; } } if ( f == 1 ) break ; } if ( f == 1 ) break ; } if ( f == 1 ) System.out.println ( k + 1 + \" \" + ( j + 1 ) + \" \" + ( i + 1 ) ) ; else System.out.println ( \"-1\" ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC133_B",
        "Python": "import math\nn , d = map ( int , input ( ).split ( ) )\npoints = [ list ( map ( int , input ( ).split ( ) ) ) for _ in range ( n ) ]\ndef dist ( x , y ) :\n    tmp = 0.0\n    for i in range ( d ) :\n        tmp += ( x [ i ] - y [ i ] ) ** 2\n    return math.sqrt ( tmp )\ncount = 0\nfor i , elm in enumerate ( points ) :\n    for j in range ( i + 1 , n ) :\n        if dist ( elm , points [ j ] ).is_integer ( ) :\n            count += 1\nprint ( count )\n\n",
        "Java": "import java.lang.Math ; import java.util.Scanner ; public class atcoder_ABC133_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int D = sc.nextInt ( ) ; int [ ] [ ] vectors = new int [ N ] [ D ] ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < D ; j ++ ) { vectors [ i ] [ j ] = sc.nextInt ( ) ; } } int answer = 0 ; for ( int i = 0 ; i < N - 1 ; i ++ ) { for ( int j = i + 1 ; j < N ; j ++ ) { int dist = 0 ; for ( int d = 0 ; d < D ; d ++ ) { int x = ( vectors [ i ] [ d ] - vectors [ j ] [ d ] ) ; dist += ( x * x ) ; } double sq = Math.sqrt ( dist ) ; answer += ( Math.abs ( sq - Math.floor ( sq ) ) < 0.001 ? 1 : 0 ) ; } } System.out.println ( answer ) ; } }\n"
    },
    {
        "filename": "codeforces_148_B",
        "Python": "princess = int ( input ( ) )\ndragon = int ( input ( ) )\nt = int ( input ( ) )\nf = int ( input ( ) )\nc = int ( input ( ) )\nif dragon <= princess :\n    print ( 0 )\n    exit ( 0 )\nresult = 0\nposition = t * princess\nposition += princess * position / ( dragon - princess )\nwhile position < c :\n    result += 1\n    position += princess * position / dragon\n    position += princess * f\n    position += princess * position / ( dragon - princess )\nprint ( result )\n\n",
        "Java": "import java.util.Scanner ; public class codeforces_148_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; double VP = in.nextInt ( ) ; double VD = in.nextInt ( ) ; double T = in.nextInt ( ) ; double F = in.nextInt ( ) ; double C = in.nextInt ( ) ; if ( VD <= VP ) { System.out.println ( \"0\" ) ; return ; } int answer = 0 ; double start = T ; while ( true ) { double x = start * VP / ( VD - VP ) ; if ( ( start + x ) * VP >= C ) { break ; } start += 2 * x + F ; answer ++ ; } System.out.println ( answer ) ; } }\n"
    },
    {
        "filename": "codeforces_302_A",
        "Python": "n , m = map ( int , input ( ).split ( ) )\nsa = input ( ).count ( \"-\" )\nsa = min ( [ n - sa , sa ] )\nss = [ ]\nfor _ in range ( m ) :\n    a , b = map ( int , input ( ).split ( ) )\n    b -= a\n    ss.append ( ( b % 2 and b <= sa << 1 ) and \"1\\n\" or \"0\\n\" )\nprint ( \"\".join ( ss ) )\n\n",
        "Java": "import java.io.IOException ; import java.util.Scanner ; public class codeforces_302_A { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = sc.nextInt ( ) ; StringBuffer res = new StringBuffer ( ) ; int o = 0 , e = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] == 1 ) ++ o ; else ++ e ; for ( int i = 0 ; i < k ; i ++ ) { int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; if ( ( r - l + 1 ) % 2 == 1 ) res.append ( \"0\\n\" ) ; else { if ( ( r - l + 1 ) / 2 <= o && ( r - l + 1 ) / 2 <= e ) res.append ( \"1\\n\" ) ; else res.append ( \"0\\n\" ) ; } } System.out.print ( res ) ; sc.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC162_D",
        "Python": "import math\nN = int ( input ( ) )\nS = input ( )\ndef calculate ( n , s ) :\n    arr = list ( s )\n    rNum = arr.count ( \"R\" )\n    gNum = arr.count ( \"G\" )\n    bNum = arr.count ( \"B\" )\n    sum = 0\n    for step in range ( 1 , math.ceil ( n / 2 ) + 1 ) :\n        for i in range ( n - 2 * step ) :\n            s = \"\".join ( [ arr [ i ] , arr [ i + step ] , arr [ i + step * 2 ] ] )\n            if s == \"RGB\" or s == \"RBG\" or s == \"BGR\" or s == \"BRG\" or s == \"GBR\" or s == \"GRB\" :\n                sum = sum + 1\n    print ( rNum * gNum * bNum - sum )\ncalculate ( N , S )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC162_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; long rc = 0 ; long gc = 0 ; long bc = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == 'R' ) { rc ++ ; } else if ( s.charAt ( i ) == 'G' ) { gc ++ ; } else { bc ++ ; } } long result = rc * gc * bc ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int k = i + 1 ; k <= n ; k ++ ) { if ( ( i + k ) % 2 == 0 ) { char is = s.charAt ( i - 1 ) ; char ks = s.charAt ( k - 1 ) ; char js = s.charAt ( ( ( i + k ) / 2 ) - 1 ) ; if ( is != ks && ks != js && js != is ) { result -- ; } } } } System.out.println ( result ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC145_E",
        "Python": "import sys\nfrom operator import itemgetter\ninput = sys.stdin.readline\nTIME = 0\nVAL = 1\nN , T = [ int ( a ) for a in input ( ).split ( ) ]\ntime_value = [ ( - 1 , - 1 ) ] + [ None ] * ( N )\nfor i in range ( 1 , N + 1 ) :\n    time_value [ i ] = tuple ( int ( a ) for a in input ( ).split ( ) )\ntime_value.sort ( key = itemgetter ( VAL ) )\ndp = [ [ - 1 ] * T for _ in range ( N + 1 ) ]\nfor t in range ( 0 , T ) :\n    dp [ 0 ] [ t ] = 0\nfor n in range ( 1 , N + 1 ) :\n    dp [ n ] [ 0 ] = 0\n    for t in range ( 1 , T ) :\n        if time_value [ n ] [ TIME ] > t :\n            dp [ n ] [ t ] = dp [ n - 1 ] [ t ]\n        else :\n            dp [ n ] [ t ] = max ( dp [ n - 1 ] [ t ] , time_value [ n ] [ VAL ] + dp [ n - 1 ] [ t - time_value [ n ] [ TIME ] ] )\nval_acum = time_value [ N ] [ VAL ]\nt = T - 1\nmax_val = val_acum + dp [ N - 1 ] [ t ]\nfor n in range ( N - 1 , 0 , - 1 ) :\n    val_acum += time_value [ n ] [ VAL ]\n    t -= time_value [ n + 1 ] [ TIME ]\n    if t < 0 :\n        break\n    else :\n        max_val = max ( max_val , val_acum + dp [ n - 1 ] [ t ] )\nprint ( max_val )\n\n",
        "Java": "import java.util.Arrays ; import java.util.Comparator ; import java.util.Scanner ; public class atcoder_ABC145_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int T = sc.nextInt ( ) ; int [ ] [ ] AB = new int [ N ] [ 2 ] ; for ( int i = 0 ; i < N ; i ++ ) { AB [ i ] [ 0 ] = sc.nextInt ( ) ; AB [ i ] [ 1 ] = sc.nextInt ( ) ; } Arrays.sort ( AB , Comparator.comparingInt ( a -> a [ 0 ] ) ) ; int [ ] [ ] dp = new int [ N + 1 ] [ 6001 ] ; for ( int i = 1 ; i <= N ; i ++ ) { for ( int timeAfterEat = 0 ; timeAfterEat <= 6000 ; timeAfterEat ++ ) { dp [ i ] [ timeAfterEat ] = Math.max ( dp [ i ] [ timeAfterEat ] , dp [ i - 1 ] [ timeAfterEat ] ) ; int time = AB [ i - 1 ] [ 0 ] ; int value = AB [ i - 1 ] [ 1 ] ; if ( 0 <= timeAfterEat - time && timeAfterEat - time < T ) { dp [ i ] [ timeAfterEat ] = Math.max ( dp [ i ] [ timeAfterEat ] , dp [ i - 1 ] [ timeAfterEat - time ] + value ) ; } } } System.out.println ( Arrays.stream ( dp [ N ] ).max ( ).getAsInt ( ) ) ; } }\n"
    },
    {
        "filename": "codeforces_387_A",
        "Python": "h1 , m1 = ( map ( int , input ( ).split ( ':' ) ) )\nm1 += h1 * 60\nh2 , m2 = ( map ( int , input ( ).split ( ':' ) ) )\nm2 += h2 * 60\nm2 = m1 - m2\nm2 %= 1440\nprint ( \"%02d:%02d\" % ( m2 // 60 , m2 % 60 ) )\n\n",
        "Java": "import java.io.IOException ; import java.time.LocalTime ; import java.util.* ; public class codeforces_387_A { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System.in ) ; String [ ] s = sc.next ( ).split ( \":\" ) ; String [ ] t = sc.next ( ).split ( \":\" ) ; LocalTime x = LocalTime.of ( Integer.parseInt ( s [ 0 ] ) , Integer.parseInt ( s [ 1 ] ) ) ; LocalTime y = LocalTime.of ( Integer.parseInt ( t [ 0 ] ) , Integer.parseInt ( t [ 1 ] ) ) ; System.out.println ( x.minusHours ( y.getHour ( ) ).minusMinutes ( y.getMinute ( ) ) ) ; } }\n"
    },
    {
        "filename": "atcoder_AGC005_B",
        "Python": "root = lambda x : x if par [ x ] == x else root ( par [ x ] )\nsame = lambda x , y : root ( x ) == root ( y )\ndef unite ( * z ) :\n    x , y = map ( root , z )\n    if x != y :\n        if rank [ x ] < rank [ y ] :\n            par [ x ] = y\n            size [ y ] += size [ x ]\n        else :\n            par [ y ] = x\n            size [ x ] += size [ y ]\n            if rank [ x ] == rank [ y ] : rank [ x ] += 1\nn , * a = map ( int , open ( 0 ).read ( ).split ( ) )\n* par , = range ( n )\nrank = [ 1 ] * n\nsize = [ 1 ] * n\nb = [ 0 ] * n\nfor i , t in enumerate ( a ) : b [ t - 1 ] = i\nc = 0\nfor k in b [ : : - 1 ] :\n    l = r = 1\n    if k > 0 and a [ k - 1 ] > a [ k ] :\n        l += size [ root ( k - 1 ) ]\n        unite ( k - 1 , k )\n    if k + 1 < n and a [ k + 1 ] > a [ k ] :\n        r += size [ root ( k + 1 ) ]\n        unite ( k + 1 , k )\n    c += l * r * a [ k ]\nprint ( c )\n\n",
        "Java": "import java.util.ArrayDeque ; import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_AGC005_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int N = scan.nextInt ( ) ; int [ ] a = new int [ N ] ; for ( int i = 0 ; i < N ; ++ i ) { a [ i ] = scan.nextInt ( ) ; } int [ ] leftl = new int [ N ] ; int [ ] rightl = new int [ N ] ; ArrayDeque < Integer > que = new ArrayDeque < > ( ) ; int index = 0 ; while ( index < N ) { while ( ! que.isEmpty ( ) && a [ que.peek ( ) ] > a [ index ] ) { int ind = que.poll ( ) ; rightl [ ind ] = index - ind - 1 ; } que.push ( index ++ ) ; } while ( ! que.isEmpty ( ) ) { int ind = que.poll ( ) ; rightl [ ind ] = N - ind - 1 ; } index = N - 1 ; while ( index >= 0 ) { while ( ! que.isEmpty ( ) && a [ que.peek ( ) ] > a [ index ] ) { int ind = que.poll ( ) ; leftl [ ind ] = ind - index - 1 ; } que.push ( index -- ) ; } while ( ! que.isEmpty ( ) ) { int ind = que.poll ( ) ; leftl [ ind ] = ind - index - 1 ; } long ans = 0 ; for ( int i = 0 ; i < N ; ++ i ) { ans += ( long ) a [ i ] * ( leftl [ i ] + 1 ) * ( rightl [ i ] + 1 ) ; } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC123_B",
        "Python": "import math\nmenu = [ ]\nfor _ in range ( 5 ) :\n    m = input ( )\n    e = int ( m [ - 1 ] )\n    if e == 0 :\n        e = 10\n    menu.append ( [ int ( m ) , e ] )\nmenu.sort ( key = lambda x : x [ 1 ] )\nans = 0\nfor m in menu [ 1 : ] :\n    ans += math.ceil ( m [ 0 ] / 10 ) * 10\nprint ( ans + menu [ 0 ] [ 0 ] )\n\n",
        "Java": "import java.util.Scanner ; import java.util.TreeMap ; public class atcoder_ABC123_B { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System.in ) ; int a [ ] = new int [ 5 ] ; int r [ ] = new int [ 5 ] ; TreeMap < Integer , Integer > map = new TreeMap ( ) ; for ( int i = 0 ; i < a.length ; i ++ ) { a [ i ] = sc.nextInt ( ) ; r [ i ] = a [ i ] % 10 ; int b = 10 ; if ( r [ i ] != 0 ) { b = 10 - r [ i ] ; map.put ( b , a [ i ] ) ; } } int ans = 0 ; if ( map.size ( ) == 0 ) { for ( int i = 0 ; i < a.length ; i ++ ) { ans += a [ i ] ; } System.out.println ( ans ) ; return ; } int last = map.get ( map.lastKey ( ) ) ; int idx = 0 ; for ( int i = 0 ; i < a.length ; i ++ ) { if ( a [ i ] == last ) { idx = i ; } } for ( int i = 0 ; i < a.length ; i ++ ) { if ( i != idx ) { if ( a [ i ] % 10 == 0 ) { ans += a [ i ] ; } else { ans += a [ i ] + ( 10 - r [ i ] ) ; } } } ans += last ; System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC107_C",
        "Python": "import sys\nN , K = map ( int , input ( ).split ( ) )\nlst = list ( map ( int , input ( ).split ( ) ) )\nlst_p = [ ]\nlst_m = [ ]\nfor i in range ( N ) :\n    if lst [ i ] == 0 :\n        K -= 1\n    if lst [ i ] > 0 :\n        lst_p += [ lst [ i ] ]\n    elif lst [ i ] < 0 :\n        lst_m += [ lst [ i ] ]\np = 0\nm = 0\nx , y = 0 , len ( lst_m ) - 1\nlastx = len ( lst_p )\nlasty = len ( lst_m )\ndef check ( k ) :\n    ans = 10 ** 9\n    for j in range ( 0 , k + 1 ) :\n        if j > lastx or k - j > lasty :\n            pass\n        else :\n            if j == 0 :\n                p = 0\n            else :\n                p = lst_p [ j - 1 ]\n            if k - j == 0 :\n                m = 0\n            else :\n                m = lst_m [ lasty - ( k - j ) ]\n            ans = min ( ans , 2 * p + abs ( m ) , p + 2 * abs ( m ) )\n    return ans\nprint ( check ( K ) )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC107_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int S [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) S [ i ] = sc.nextInt ( ) ; int temp = 0 ; int ans = 1000000000 ; if ( K == 1 ) { for ( int i = 0 ; i < N ; i ++ ) { temp = S [ i ] ; ans = Math.min ( Math.abs ( temp ) , ans ) ; } System.out.println ( ans ) ; } else if ( N - K != 0 ) { for ( int i = 0 ; i <= N - K ; i ++ ) { int min = S [ i ] ; int max = S [ i + K - 1 ] ; if ( min < 0 && max > 0 ) temp = Math.min ( 2 * ( - min ) + max , ( - min ) + 2 * max ) ; else temp = Math.max ( Math.abs ( min ) , Math.abs ( max ) ) ; ans = Math.min ( ans , temp ) ; } System.out.println ( ans ) ; } else { int min = S [ 0 ] ; int max = S [ N - 1 ] ; if ( min < 0 && max > 0 ) System.out.println ( Math.min ( 2 * ( - min ) + max , ( - min ) + 2 * max ) ) ; else System.out.println ( Math.max ( Math.abs ( min ) , Math.abs ( max ) ) ) ; } sc.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_400_B",
        "Python": "n , m = map ( int , input ( ).split ( ) )\nc = set ( s.find ( \"S\" ) - s.find ( \"G\" ) for s in ( input ( ) for _ in range ( n ) ) )\nprint ( - 1 if any ( a < 0 for a in c ) else len ( c ) )\n\n",
        "Java": "import java.util.HashMap ; import java.util.HashSet ; import java.util.Scanner ; public class codeforces_400_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; String arrs [ ] = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arrs [ i ] = sc.next ( ) ; } int [ ] length = new int [ n ] ; int index = 0 ; int returnDex = 0 ; for ( String tmp : arrs ) { int dexG = tmp.indexOf ( \"G\" ) ; int dexS = tmp.indexOf ( \"S\" ) ; if ( dexG > dexS ) { returnDex = - 1 ; } length [ index ++ ] = dexS - dexG ; } HashSet set = new HashSet < Integer > ( ) ; for ( int len : length ) { set.add ( len ) ; } if ( returnDex == - 1 ) { System.out.println ( returnDex ) ; } else { System.out.println ( set.size ( ) ) ; } } }\n"
    },
    {
        "filename": "codeforces_369_B",
        "Python": "def get_nums ( num , t ) :\n    return [ t // num + 1 if i in range ( t % num ) else t // num for i in range ( num ) ]\nn , k , l , r , sa , sk = map ( int , input ( ).split ( ) )\nans = get_nums ( k , sk ) + get_nums ( n - k , sa - sk )\nprint ( ' '.join ( map ( str , ans ) ) )\n\n",
        "Java": "import java.util.Arrays ; import java.util.Scanner ; public class codeforces_369_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int k = scan.nextInt ( ) ; int l = scan.nextInt ( ) ; int r = scan.nextInt ( ) ; int sAll = scan.nextInt ( ) ; int sk = scan.nextInt ( ) ; int [ ] ans = getPoints ( n , k , l , r , sAll , sk ) ; for ( int num : ans ) { System.out.print ( num + \" \" ) ; } } public static int [ ] getPoints ( int n , int k , int l , int r , int sAll , int sk ) { int [ ] ans = new int [ n ] ; Arrays.fill ( ans , l ) ; sAll -= sk + ( n - k ) * l ; sk -= k * l ; while ( sk > 0 ) { int idx = n - 1 ; while ( sk > 0 && idx >= n - k ) { ans [ idx -- ] ++ ; sk -- ; } } while ( sAll > 0 ) { int idx = 0 ; while ( sAll > 0 && idx < n - k ) { ans [ idx ++ ] ++ ; sAll -- ; } } return ans ; } }\n"
    },
    {
        "filename": "atcoder_ABC110_C",
        "Python": "import collections\ndef run ( s , t ) :\n    ss = sorted ( list ( collections.Counter ( s ).values ( ) ) )\n    tt = sorted ( list ( collections.Counter ( t ).values ( ) ) )\n    if ss == tt :\n        return 'Yes'\n    else :\n        return 'No'\ndef main ( ) :\n    s = input ( )\n    t = input ( )\n    print ( run ( s , t ) )\nif __name__ == '__main__' :\n    main ( )\n\n",
        "Java": "import java.util.Scanner ; public class atcoder_ABC110_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.nextLine ( ) ; String T = sc.nextLine ( ) ; sc.close ( ) ; String [ ] A = { \"a\" , \"b\" , \"c\" , \"d\" , \"e\" , \"f\" , \"g\" , \"h\" , \"i\" , \"j\" , \"k\" , \"l\" , \"m\" , \"n\" , \"o\" , \"p\" , \"q\" , \"r\" , \"s\" , \"t\" , \"u\" , \"v\" , \"w\" , \"x\" , \"y\" , \"z\" } ; boolean res = true ; for ( String s : A ) { int sIdx = S.indexOf ( s ) ; if ( sIdx < 0 ) continue ; String t = String.valueOf ( T.charAt ( sIdx ) ) ; int idx = 0 ; while ( idx < S.length ( ) ) { if ( S.indexOf ( s , idx ) >= 0 ) { if ( S.indexOf ( s , idx ) != T.indexOf ( t , idx ) ) { res = false ; break ; } else { idx = S.indexOf ( s , idx ) + 1 ; } } else if ( T.indexOf ( t , idx ) >= 0 ) { res = false ; break ; } else break ; } if ( ! res ) break ; } if ( res ) System.out.println ( \"Yes\" ) ; else System.out.println ( \"No\" ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC127_B",
        "Python": "r , D , x = map ( int , input ( ).split ( ) )\nfor i in range ( 2 , 12 ) :\n    print ( int ( ( r ** ( i - 1 ) ) * ( x + D / ( 1 - r ) ) - D / ( 1 - r ) ) )\n\n",
        "Java": "import java.io.* ; import java.nio.CharBuffer ; import java.util.NoSuchElementException ; public class atcoder_ABC127_B { public static void main ( String [ ] args ) { SimpleScanner scanner = new SimpleScanner ( System.in ) ; PrintWriter writer = new PrintWriter ( System.out ) ; int r = scanner.nextInt ( ) ; int d = scanner.nextInt ( ) ; long x = scanner.nextLong ( ) ; for ( int i = 0 ; i < 10 ; ++ i ) { x = r * x - d ; writer.println ( x ) ; } writer.close ( ) ; } private static class SimpleScanner { private static final int BUFFER_SIZE = 10240 ; private Readable in ; private CharBuffer buffer ; private boolean eof ; SimpleScanner ( InputStream in ) { this.in = new BufferedReader ( new InputStreamReader ( in ) ) ; buffer = CharBuffer.allocate ( BUFFER_SIZE ) ; buffer.limit ( 0 ) ; eof = false ; } private char read ( ) { if ( ! buffer.hasRemaining ( ) ) { buffer.clear ( ) ; int n ; try { n = in.read ( buffer ) ; } catch ( IOException e ) { n = - 1 ; } if ( n <= 0 ) { eof = true ; return '\u0000' ; } buffer.flip ( ) ; } return buffer.get ( ) ; } void checkEof ( ) { if ( eof ) throw new NoSuchElementException ( ) ; } char nextChar ( ) { checkEof ( ) ; char b = read ( ) ; checkEof ( ) ; return b ; } String next ( ) { char b ; do { b = read ( ) ; checkEof ( ) ; } while ( Character.isWhitespace ( b ) ) ; StringBuilder sb = new StringBuilder ( ) ; do { sb.append ( b ) ; b = read ( ) ; } while ( ! eof && ! Character.isWhitespace ( b ) ) ; return sb.toString ( ) ; } int nextInt ( ) { return Integer.valueOf ( next ( ) ) ; } long nextLong ( ) { return Long.valueOf ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } } }\n"
    },
    {
        "filename": "codeforces_306_A",
        "Python": "n , m = map ( int , input ( ).split ( ) )\nq = n // m\nr = n % m\na = [ q ] * m\nfor i in range ( r ) :\n    a [ i ] += 1\nfor i in range ( m ) :\n    print ( a [ i ] , end = ' ' )\n\n",
        "Java": "import java.util.Arrays ; import java.util.Scanner ; public class codeforces_306_A { public static Scanner input = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = input.nextInt ( ) ; int m = input.nextInt ( ) ; int a [ ] = new int [ m ] ; if ( n % m == 0 ) { for ( int i = 0 ; i < a.length ; i ++ ) { a [ i ] = n / m ; } } else { int sub = n / m ; for ( int i = 0 ; i < a.length ; i ++ ) { a [ i ] = sub ; } int test = n - ( sub * m ) ; int count = 0 ; for ( int i = 0 ; i < test ; i ++ ) { a [ count ] = a [ count ] + 1 ; count ++ ; if ( count > + a.length ) count = 0 ; } } for ( int i = ( a.length - 1 ) ; i >= 0 ; i -- ) { System.out.print ( a [ i ] + \" \" ) ; } } }\n"
    },
    {
        "filename": "codeforces_450_A",
        "Python": "n , m = map ( int , input ( ).split ( ) )\nl = list ( map ( int , input ( ).split ( ) ) )\nl2 = [ ]\nfor i in l :\n    if i % m == 0 :\n        l2.append ( i // m )\n    else :\n        l2.append ( i // m + 1 )\nmx = max ( l2 )\nfor i in range ( n ) :\n    if l2 [ i ] == mx :\n        ind = i\nprint ( ind + 1 )\n\n",
        "Java": "import java.util.* ; public class codeforces_450_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; Queue < Integer > q1 = new LinkedList < > ( ) ; Queue < Integer > q2 = new LinkedList < > ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { q1.add ( sc.nextInt ( ) ) ; q2.add ( i ) ; } int ans = 0 ; while ( ! q1.isEmpty ( ) ) { if ( q1.peek ( ) <= m ) { q1.poll ( ) ; ans = q2.poll ( ) ; } else if ( q1.peek ( ) > m ) { int x = q1.poll ( ) ; int val = x - m ; q1.add ( val ) ; int val2 = q2.poll ( ) ; q2.add ( val2 ) ; } } System.out.println ( ans ) ; } }\n"
    },
    {
        "filename": "codeforces_147_A",
        "Python": "s = input ( )\nres = [ ]\npunctuation = [ ',' , '.','!','?' ]\nfor i in range ( len ( s ) ) :\n    if i >= 1 :\n        if s [ i ] == '' :\n            if res [ - 1 ] != '' :\n                res.append ( s [ i ] )\n            else :\n                continue\n        else :\n            if s [ i ] in punctuation :\n                if res [ - 1 ] == '' :\n                    res.pop ( )\n                res.append ( s [ i ] )\n                res.append ( '' )\n            else :\n                res.append ( s [ i ] )\n    else :\n        if s [ i ] == '' :\n            continue\n        if s [ i ] in punctuation :\n            continue\n        else :\n            res.append ( s [ i ] )\nprint ( ''.join ( res ) )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; public class codeforces_147_A { public static boolean isLatinLetter ( char c ) { return c >= 'a' && c <= 'z' ; } public static boolean isPunctuation ( char c ) { if ( c == '.' ) return true ; if ( c == ',' ) return true ; if ( c == '!' ) return true ; if ( c == '?' ) return true ; return false ; } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter pw = new PrintWriter ( System.out ) ; String s = br.readLine ( ) ; StringBuilder sb = new StringBuilder ( ) ; int n = s.length ( ) ; sb.append ( s.charAt ( 0 ) ) ; for ( int i = 1 ; i < n ; i ++ ) { char c = s.charAt ( i ) ; if ( isLatinLetter ( c ) ) { if ( ! isLatinLetter ( s.charAt ( i - 1 ) ) ) { sb.append ( ' ' ) ; } sb.append ( c ) ; } else if ( isPunctuation ( c ) ) { sb.append ( c ) ; } } pw.println ( sb ) ; pw.flush ( ) ; pw.close ( ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC132_F",
        "Python": "mod = 10 ** 9 + 7\nn , k = map ( int , input ( ).split ( ) )\ncoef = [ ]\nfor i in range ( 1 , int ( n ** 0.5 ) + 1 ) :\n    coef.append ( ( n // i ) - ( n // ( i + 1 ) ) )\ncoef += [ 1 ] * ( n - sum ( coef ) )\ncoef = coef [ : : - 1 ]\nnn = len ( coef )\ndp = [ [ 0 ] * nn for _ in range ( k + 1 ) ]\ndp [ 0 ] [ 0 ] = 1\nfor i in range ( 1 , k + 1 ) :\n    tmp = 0\n    for j in range ( nn - 1 , - 1 , - 1 ) :\n        tmp += dp [ i - 1 ] [ ( nn - 1 ) - j ]\n        tmp %= mod\n        dp [ i ] [ j ] = coef [ j ] * tmp\n        dp [ i ] [ j ] %= mod\nprint ( sum ( dp [ k ] ) % mod )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC132_F { public static void main ( String [ ] args ) { long mod = ( long ) 1e9 + 7 ; Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; sc.close ( ) ; ArrayList < Integer > len = new ArrayList < > ( ) ; int l = 1 ; while ( l <= n ) { int r = n / ( n / l ) ; len.add ( r - l + 1 ) ; l = r + 1 ; } int q = len.size ( ) ; long [ ] dp = new long [ k * ( q + 1 ) ] ; for ( int j = 1 ; j <= q ; j ++ ) { dp [ j ] = len.get ( j - 1 ) + dp [ j - 1 ] ; } for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j <= q ; j ++ ) { dp [ i * ( q + 1 ) + j ] = dp [ i * ( q + 1 ) + j - 1 ] + dp [ ( i - 1 ) * ( q + 1 ) + q - j + 1 ] * len.get ( j - 1 ) ; dp [ i * ( q + 1 ) + j ] %= mod ; } } System.out.println ( dp [ k * ( q + 1 ) - 1 ] ) ; } }\n"
    },
    {
        "filename": "codeforces_313_B",
        "Python": "soz = input ( )\na = [ 0 ] * ( len ( soz ) + 1 )\nfor i in range ( 1 , len ( soz ) ) :\n    a [ i ] = a [ i - 1 ]\n    if soz [ i - 1 ] == soz [ i ] :\n        a [ i ] += 1\nn = int ( input ( ) )\narr = [ ]\nfor i in range ( n ) :\n    m , l = input ( ).split ( )\n    arr.append ( a [ int ( l ) - 1 ] - a [ int ( m ) - 1 ] )\nfor i in arr :\n    print ( i )\n\n",
        "Java": "import java.io.* ; import java.util.StringTokenizer ; public class codeforces_313_B { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( System.out ) ) ; Fast f = new Fast ( ) ; f.sol ( br , pw ) ; pw.close ( ) ; } } class Fast { public void sol ( BufferedReader br , PrintWriter pw ) throws IOException { StringTokenizer st = new StringTokenizer ( br.readLine ( ) ) ; String s = st.nextToken ( ) ; Integer cum [ ] = new Integer [ s.length ( ) + 1 ] ; cum [ 0 ] = cum [ s.length ( ) ] = 0 ; for ( int i = 1 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == s.charAt ( i - 1 ) ) cum [ i ] = cum [ i - 1 ] + 1 ; else cum [ i ] = cum [ i - 1 ] ; } st = new StringTokenizer ( br.readLine ( ) ) ; Integer q = Integer.parseInt ( st.nextToken ( ) ) ; while ( q -- != 0 ) { st = new StringTokenizer ( br.readLine ( ) ) ; Integer l = Integer.parseInt ( st.nextToken ( ) ) , r = Integer.parseInt ( st.nextToken ( ) ) - 1 ; pw.println ( cum [ r ] - cum [ l - 1 ] ) ; } } }\n"
    },
    {
        "filename": "atcoder_ABC107_D",
        "Python": "class BIT :\n    def __init__ ( self , N ) :\n        self.size = N\n        self.tree = [ 0 ] * ( N + 1 )\n        self.depth = n.bit_length ( )\n    def _bitsum ( self , i ) :\n        ret = 0\n        while i :\n            ret += self.tree [ i ]\n            i ^= i & - i\n        return ret\n    def bitsum ( self , l , r = None ) :\n        if r is None :\n            return self._bitsum ( l )\n        else :\n            return self._bitsum ( r ) - self._bitsum ( l )\n    def bitadd ( self , i , x ) :\n        i += 1\n        while i <= self.size :\n            self.tree [ i ] += x\n            i += i & - i\n        return\nn = int ( input ( ) )\nm = n * ( n + 1 ) // 4\na = list ( map ( int , input ( ).split ( ) ) )\nd = dict ( )\n_a = sorted ( set ( a + [ 0 ] ) )\nfor i , x in enumerate ( _a ) :\n    d [ x ] = i\na = [ d [ x ] for x in a ]\ndef check ( X ) :\n    b = [ 0 ] + [ ( y >= X ) * 2 - 1 for y in a ]\n    for i in range ( n ) :\n        b [ i + 1 ] += b [ i ]\n    c = min ( b )\n    b = [ x - c for x in b ]\n    bit = BIT ( max ( b ) + 2 )\n    ans = 0\n    for x in b :\n        ans += bit.bitsum ( x + 1 )\n        bit.bitadd ( x , 1 )\n    return ans >= m\nt = [ len ( _a ) , 0 ]\nwhile t [ 0 ] - t [ 1 ] > 1 :\n    mid = ( t [ 0 ] + t [ 1 ] ) // 2\n    t [ check ( mid ) ] = mid\nprint ( _a [ t [ 1 ] ] )\n\n",
        "Java": "import java.io.BufferedInputStream ; import java.util.Arrays ; import java.util.HashMap ; import java.util.Scanner ; import java.util.TreeMap ; public class atcoder_ABC107_D { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( new BufferedInputStream ( System.in ) ) ; int N = scan.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) arr [ i ] = scan.nextInt ( ) ; Task tsk = new Task ( ) ; System.out.println ( tsk.solve ( arr ) ) ; } static class Task { public int solve ( int [ ] arr ) { int n = arr.length ; int [ ] sorted = Arrays.copyOf ( arr , n ) ; Arrays.sort ( sorted ) ; long total = ( long ) n * ( n + 1 ) / 2 ; int l = 0 , r = n - 1 ; while ( l < r ) { int mid = l + ( r - l ) / 2 ; int target = sorted [ mid ] ; int cur = 0 ; long cnt = 0 ; long [ ] bit = new long [ 2 * n + 2 ] ; for ( int x = n + 1 ; x < bit.length ; x += x & - x ) bit [ x ] ++ ; for ( int i = 0 ; i < n ; i ++ ) { cur += arr [ i ] <= target ? 1 : - 1 ; for ( int x = cur + n + 1 ; x < bit.length ; x += x & - x ) bit [ x ] ++ ; for ( int x = cur + n ; x > 0 ; x -= x & - x ) cnt += bit [ x ] ; } if ( cnt >= total / 2 + 1 ) r = mid ; else l = mid + 1 ; } return sorted [ l ] ; } } }\n"
    },
    {
        "filename": "atcoder_ABC166_C",
        "Python": "( n , m ) = [ int ( x ) for x in input ( ).split ( ) ]\np = [ x for x in range ( 1 , n + 1 ) ]\nh = [ int ( x ) for x in input ( ).split ( ) ]\nhp = dict ( zip ( p , h ) )\npath = { i : [ ] for i in range ( 1 , n + 1 ) }\nfor i in range ( m ) :\n    ( a , b ) = [ int ( x ) for x in input ( ).split ( ) ]\n    path [ a ].append ( b )\n    path [ b ].append ( a )\nc = 0\nfor i , v in path.items ( ) :\n    f = 0\n    for j in v :\n        if hp [ i ] <= hp [ j ] :\n            f = 1\n            break\n    if f == 0 :\n        c += 1\nprint ( c )\n\n",
        "Java": "import java.util.* ; public class atcoder_ABC166_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; long M = sc.nextLong ( ) ; long [ ] H = new long [ N ] ; boolean [ ] ans = new boolean [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { H [ i ] = sc.nextLong ( ) ; ans [ i ] = true ; } for ( int i = 0 ; i < M ; i ++ ) { int temp1 = sc.nextInt ( ) ; int temp2 = sc.nextInt ( ) ; if ( H [ temp1 - 1 ] < H [ temp2 - 1 ] ) { ans [ temp1 - 1 ] = false ; } else if ( H [ temp1 - 1 ] > H [ temp2 - 1 ] ) { ans [ temp2 - 1 ] = false ; } else { ans [ temp1 - 1 ] = false ; ans [ temp2 - 1 ] = false ; } } int ans2 = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( ans [ i ] ) { ans2 ++ ; } } System.out.println ( ans2 ) ; } }\n"
    },
    {
        "filename": "atcoder_ABC111_C",
        "Python": "n = int ( input ( ) )\nx = list ( int ( i ) for i in input ( ).split ( ) )\na = [ ]\nb = [ ]\nfor i in range ( 0 , n ) :\n    if i % 2 == 0 :\n        a.append ( x [ i ] )\n    else :\n        b.append ( x [ i ] )\ncnta = [ 0 ] * ( 100002 + 1 )\ncntb = [ 0 ] * ( 100002 + 1 )\nvala = 0\nvala1 = 0\nmaxCnta = 0\nmaxCnta1 = 0\nfor i in a :\n    cnta [ i ] += 1\nfor i in a :\n    if maxCnta < cnta [ i ] :\n        vala = i\n        maxCnta = cnta [ i ]\nfor i in a :\n    if maxCnta1 < cnta [ i ] and vala != i :\n        maxCnta1 = cnta [ i ]\n        vala1 = i\nvalb = 0\nvalb1 = 0\nmaxCntb = 0\nmaxCntb1 = 0\nfor i in b :\n    cntb [ i ] += 1\nfor i in b :\n    if maxCntb < cntb [ i ] :\n        valb = i\n        maxCntb = cntb [ i ]\nfor i in b :\n    if maxCntb1 < cntb [ i ] and valb != i :\n        maxCntb1 = cntb [ i ]\n        valb1 = i\nif valb != vala :\n    res = 0\n    for i in a :\n        if i != vala :\n            res += 1\n    for i in b :\n        if i != valb :\n            res += 1\n    print ( res )\nelse :\n    resa = 0\n    resb = 0\n    resa1 = 0\n    resb1 = 0\n    for i in a :\n        if i != vala :\n            resa += 1\n        if i != vala1 :\n            resa1 += 1\n    for i in b :\n        if i != valb :\n            resb += 1\n        if i != valb1 :\n            resb1 += 1\n    print ( min ( resa + resb1 , resa1 + resb ) )\n    \n\n",
        "Java": "import java.util.Arrays ; import java.util.Collections ; import java.util.Scanner ; public class atcoder_ABC111_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.next ( ) ) ; int [ ] v = new int [ 100010 ] ; for ( int i = 0 ; i < n ; i ++ ) { v [ i ] = Integer.parseInt ( sc.next ( ) ) ; } Integer [ ] vo = new Integer [ 100010 ] ; Integer [ ] ve = new Integer [ 100010 ] ; Integer [ ] vt = new Integer [ 100010 ] ; Arrays.fill ( vo , 0 ) ; Arrays.fill ( ve , 0 ) ; Arrays.fill ( vt , 0 ) ; for ( int i = 0 ; i < n ; i ++ ) { vt [ v [ i ] ] ++ ; if ( i % 2 == 0 ) { ve [ v [ i ] ] ++ ; } else { vo [ v [ i ] ] ++ ; } } Arrays.sort ( vo , Collections.reverseOrder ( ) ) ; Arrays.sort ( ve , Collections.reverseOrder ( ) ) ; Arrays.sort ( vt , Collections.reverseOrder ( ) ) ; int ans = 0 ; if ( vo [ 0 ] + ve [ 0 ] == vt [ 0 ] ) { ans = Math.min ( n - vo [ 0 ] - ve [ 1 ] , n - vo [ 1 ] - ve [ 0 ] ) ; } else { ans = n - vo [ 0 ] - ve [ 0 ] ; } System.out.println ( ans ) ; sc.close ( ) ; } }\n"
    },
    {
        "filename": "codeforces_669_A",
        "Python": "n = int ( input ( ) )\nprint ( ( n * 2 + 1 ) // 3 )\n\n",
        "Java": "import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; public class codeforces_669_A { public static void main ( String [ ] subhani ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; int n = Integer.parseInt ( br.readLine ( ) ) ; solve ( n ) ; } public static void solve ( int n ) { System.out.println ( ( n / 3 ) * 2 + ( n % 3 == 0 ? 0 : 1 ) ) ; } }\n"
    }
]